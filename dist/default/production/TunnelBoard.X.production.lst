

Microchip Technology PIC18 LITE Macro Assembler V1.43 build -156212558 
                                                                                               Sat Dec 16 09:25:56 2017

Microchip Technology Omniscient Code Generator v1.43 (Free mode) build 201707250354
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    44                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    45                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    46                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    47                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    48  0000                     
    49                           ; Version 1.43
    50                           ; Generated 25/07/2017 GMT
    51                           ; 
    52                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    53                           ; All rights reserved.
    54                           ; 
    55                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    56                           ; 
    57                           ; Redistribution and use in source and binary forms, with or without modification, are
    58                           ; permitted provided that the following conditions are met:
    59                           ; 
    60                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    61                           ;        conditions and the following disclaimer.
    62                           ; 
    63                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    64                           ;        of conditions and the following disclaimer in the documentation and/or other
    65                           ;        materials provided with the distribution.
    66                           ; 
    67                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    68                           ;        software without specific prior written permission.
    69                           ; 
    70                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    71                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    72                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    73                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    74                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    75                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    76                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    77                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    78                           ; 
    79                           ; 
    80                           ; Code-generator required, PIC18F4550 Definitions
    81                           ; 
    82                           ; SFR Addresses
    83  0000                     
    84                           	psect	idataBANK0
    85  0022D0                     __pidataBANK0:
    86                           	opt stack 0
    87                           
    88                           ;initializer for _comp_ft
    89  0022D0  4240               	dw	16960
    90  0022D2  000F               	dw	15
    91  0000                     _TMR0	set	4054
    92  0000                     _PORTCbits	set	3970
    93  0000                     _PORTDbits	set	3971
    94  0000                     _IPR2bits	set	4002
    95  0000                     _IPR1bits	set	3999
    96  0000                     _PIE2bits	set	4000
    97  0000                     _PIE1bits	set	3997
    98  0000                     _TMR0H	set	4055
    99  0000                     _TMR0L	set	4054
   100  0000                     _T0CONbits	set	4053
   101  0000                     _PIE2	set	4000
   102  0000                     _PIE1	set	3997
   103  0000                     _INTCON3bits	set	4080
   104  0000                     _INTCON2bits	set	4081
   105  0000                     _INTCONbits	set	4082
   106  0000                     _RCONbits	set	4048
   107  0000                     _LATEbits	set	3981
   108  0000                     _LATAbits	set	3977
   109  0000                     _LATCbits	set	3979
   110  0000                     _TRISEbits	set	3990
   111  0000                     _TRISAbits	set	3986
   112  0000                     _TRISCbits	set	3988
   113  0000                     _OSCCONbits	set	4051
   114  0000                     _T0IF	set	32658
   115                           
   116                           	psect	smallconst
   117  000800                     __psmallconst:
   118                           	opt stack 0
   119  000800  00                 	db	0
   120  000801                     STR_1:
   121  000801  20                 	db	32
   122  000802  57                 	db	87	;'W'
   123  000803  41                 	db	65	;'A'
   124  000804  52                 	db	82	;'R'
   125  000805  54                 	db	84	;'T'
   126  000806  48                 	db	72	;'H'
   127  000807  4F                 	db	79	;'O'
   128  000808  47                 	db	71	;'G'
   129  000809  20                 	db	32
   130  00080A  52                 	db	82	;'R'
   131  00080B  4F                 	db	79	;'O'
   132  00080C  42                 	db	66	;'B'
   133  00080D  4F                 	db	79	;'O'
   134  00080E  54                 	db	84	;'T'
   135  00080F  49                 	db	73	;'I'
   136  000810  43                 	db	67	;'C'
   137  000811  53                 	db	83	;'S'
   138  000812  00                 	db	0
   139  000813                     STR_10:
   140  000813  57                 	db	87	;'W'
   141  000814  52                 	db	82	;'R'
   142  000815  54                 	db	84	;'T'
   143  000816  55                 	db	85	;'U'
   144  000817  4E                 	db	78	;'N'
   145  000818  4E                 	db	78	;'N'
   146  000819  45                 	db	69	;'E'
   147  00081A  4C                 	db	76	;'L'
   148  00081B  20                 	db	32
   149  00081C  50                 	db	80	;'P'
   150  00081D  52                 	db	82	;'R'
   151  00081E  4F                 	db	79	;'O'
   152  00081F  4E                 	db	78	;'N'
   153  000820  54                 	db	84	;'T'
   154  000821  4F                 	db	79	;'O'
   155  000822  00                 	db	0
   156  000823                     STR_3:
   157  000823  20                 	db	32
   158  000824  57                 	db	87	;'W'
   159  000825  52                 	db	82	;'R'
   160  000826  54                 	db	84	;'T'
   161  000827  55                 	db	85	;'U'
   162  000828  4E                 	db	78	;'N'
   163  000829  4E                 	db	78	;'N'
   164  00082A  45                 	db	69	;'E'
   165  00082B  4C                 	db	76	;'L'
   166  00082C  20                 	db	32
   167  00082D  34                 	db	52	;'4'
   168  00082E  2E                 	db	46
   169  00082F  30                 	db	48	;'0'
   170  000830  00                 	db	0
   171  000831                     STR_5:
   172  000831  43                 	db	67	;'C'
   173  000832  6F                 	db	111	;'o'
   174  000833  6E                 	db	110	;'n'
   175  000834  66                 	db	102	;'f'
   176  000835  69                 	db	105	;'i'
   177  000836  67                 	db	103	;'g'
   178  000837  75                 	db	117	;'u'
   179  000838  72                 	db	114	;'r'
   180  000839  61                 	db	97	;'a'
   181  00083A  6E                 	db	110	;'n'
   182  00083B  64                 	db	100	;'d'
   183  00083C  6F                 	db	111	;'o'
   184  00083D  00                 	db	0
   185  00083E                     STR_2:
   186  00083E  20                 	db	32
   187  00083F  45                 	db	69	;'E'
   188  000840  45                 	db	69	;'E'
   189  000841  53                 	db	83	;'S'
   190  000842  43                 	db	67	;'C'
   191  000843  20                 	db	32
   192  000844  2D                 	db	45
   193  000845  20                 	db	32
   194  000846  55                 	db	85	;'U'
   195  000847  53                 	db	83	;'S'
   196  000848  50                 	db	80	;'P'
   197  000849  00                 	db	0
   198  00084A                     STR_11:
   199  00084A  50                 	db	80	;'P'
   200  00084B  41                 	db	65	;'A'
   201  00084C  52                 	db	82	;'R'
   202  00084D  41                 	db	65	;'A'
   203  00084E  20                 	db	32
   204  00084F  43                 	db	67	;'C'
   205  000850  48                 	db	72	;'H'
   206  000851  55                 	db	85	;'U'
   207  000852  54                 	db	84	;'T'
   208  000853  45                 	db	69	;'E'
   209  000854  00                 	db	0
   210  000855                     STR_4:
   211  000855  20                 	db	32
   212  000856  50                 	db	80	;'P'
   213  000857  52                 	db	82	;'R'
   214  000858  4F                 	db	79	;'O'
   215  000859  54                 	db	84	;'T'
   216  00085A  4F                 	db	79	;'O'
   217  00085B  54                 	db	84	;'T'
   218  00085C  49                 	db	73	;'I'
   219  00085D  50                 	db	80	;'P'
   220  00085E  4F                 	db	79	;'O'
   221  00085F  00                 	db	0
   222  000860                     STR_9:
   223  000860  41                 	db	65	;'A'
   224  000861  43                 	db	67	;'C'
   225  000862  45                 	db	69	;'E'
   226  000863  4C                 	db	76	;'L'
   227  000864  3A                 	db	58	;':'
   228  000865  20                 	db	32
   229  000866  2D                 	db	45
   230  000867  00                 	db	0
   231  000868                     STR_8:
   232  000868  56                 	db	86	;'V'
   233  000869  45                 	db	69	;'E'
   234  00086A  4C                 	db	76	;'L'
   235  00086B  3A                 	db	58	;':'
   236  00086C  20                 	db	32
   237  00086D  00                 	db	0
   238  00086E                     STR_6:
   239  00086E  2E                 	db	46
   240  00086F  00                 	db	0
   241  0000                     
   242                           ; #config settings
   243  000870  00                 	db	0	; dummy byte at the end
   244  0000                     
   245                           	psect	cinit
   246  002190                     __pcinit:
   247                           	opt stack 0
   248  002190                     start_initialization:
   249                           	opt stack 0
   250  002190                     __initialization:
   251                           	opt stack 0
   252                           
   253                           ; Initialize objects allocated to BANK0 (4 bytes)
   254                           ; load TBLPTR registers with __pidataBANK0
   255  002190  0ED0               	movlw	low __pidataBANK0
   256  002192  6EF6               	movwf	tblptrl,c
   257  002194  0E22               	movlw	high __pidataBANK0
   258  002196  6EF7               	movwf	tblptrh,c
   259  002198  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   260  00219A  6EF8               	movwf	tblptru,c
   261  00219C  EE00  F0E9         	lfsr	0,__pdataBANK0
   262  0021A0  EE10 F004          	lfsr	1,4
   263  0021A4                     copy_data0:
   264  0021A4  0009               	tblrd		*+
   265  0021A6  CFF5 FFEE          	movff	tablat,postinc0
   266  0021AA  50E5               	movf	postdec1,w,c
   267  0021AC  50E1               	movf	fsr1l,w,c
   268  0021AE  E1FA               	bnz	copy_data0
   269                           
   270                           ; Clear objects allocated to BANK0 (82 bytes)
   271  0021B0  EE00  F060         	lfsr	0,__pbssBANK0
   272  0021B4  0E52               	movlw	82
   273  0021B6                     clear_0:
   274  0021B6  6AEE               	clrf	postinc0,c
   275  0021B8  06E8               	decf	wreg,f,c
   276  0021BA  E1FD               	bnz	clear_0
   277                           
   278                           ; Clear objects allocated to COMRAM (18 bytes)
   279  0021BC  EE00  F03B         	lfsr	0,__pbssCOMRAM
   280  0021C0  0E12               	movlw	18
   281  0021C2                     clear_1:
   282  0021C2  6AEE               	clrf	postinc0,c
   283  0021C4  06E8               	decf	wreg,f,c
   284  0021C6  E1FD               	bnz	clear_1
   285  0021C8                     end_of_initialization:
   286                           	opt stack 0
   287  0021C8                     __end_of__initialization:
   288                           	opt stack 0
   289  0021C8  904D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   290  0021CA  924D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   291  0021CC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   292  0021CE  6EF8               	movwf	tblptru,c
   293  0021D0  0100               	movlb	0
   294  0021D2  EF64  F00F         	goto	_main	;jump to C main() function
   295                           tblptru	equ	0xFF8
   296                           tblptrh	equ	0xFF7
   297                           tblptrl	equ	0xFF6
   298                           tablat	equ	0xFF5
   299                           postinc0	equ	0xFEE
   300                           wreg	equ	0xFE8
   301                           postdec1	equ	0xFE5
   302                           fsr1l	equ	0xFE1
   303                           
   304                           	psect	bssCOMRAM
   305  00003B                     __pbssCOMRAM:
   306                           	opt stack 0
   307  00003B                     _time_aux:
   308                           	opt stack 0
   309  00003B                     	ds	4
   310  00003F                     _cont_ft:
   311                           	opt stack 0
   312  00003F                     	ds	2
   313  000041                     _acel_data:
   314                           	opt stack 0
   315  000041                     	ds	12
   316                           tblptru	equ	0xFF8
   317                           tblptrh	equ	0xFF7
   318                           tblptrl	equ	0xFF6
   319                           tablat	equ	0xFF5
   320                           postinc0	equ	0xFEE
   321                           wreg	equ	0xFE8
   322                           postdec1	equ	0xFE5
   323                           fsr1l	equ	0xFE1
   324                           
   325                           	psect	bssBANK0
   326  000060                     __pbssBANK0:
   327                           	opt stack 0
   328  000060                     clear_data@cont_aux:
   329                           	opt stack 0
   330  000060                     	ds	4
   331  000064                     _aceleracao_med:
   332                           	opt stack 0
   333  000064                     	ds	4
   334  000068                     _tempo_med:
   335                           	opt stack 0
   336  000068                     	ds	4
   337  00006C                     _acel_tot:
   338                           	opt stack 0
   339  00006C                     	ds	4
   340  000070                     _vel_tot:
   341                           	opt stack 0
   342  000070                     	ds	4
   343  000074                     _velocidade_med:
   344                           	opt stack 0
   345  000074                     	ds	4
   346  000078                     _num:
   347                           	opt stack 0
   348  000078                     	ds	4
   349  00007C                     _cont_global:
   350                           	opt stack 0
   351  00007C                     	ds	4
   352  000080                     _teste_long:
   353                           	opt stack 0
   354  000080                     	ds	4
   355  000084                     _error_flag:
   356                           	opt stack 0
   357  000084                     	ds	2
   358  000086                     _fti4_flag:
   359                           	opt stack 0
   360  000086                     	ds	2
   361  000088                     _fti3_flag:
   362                           	opt stack 0
   363  000088                     	ds	2
   364  00008A                     _fti2_flag:
   365                           	opt stack 0
   366  00008A                     	ds	2
   367  00008C                     _fti1_flag:
   368                           	opt stack 0
   369  00008C                     	ds	2
   370  00008E                     _time_data:
   371                           	opt stack 0
   372  00008E                     	ds	20
   373  0000A2                     _vel_data:
   374                           	opt stack 0
   375  0000A2                     	ds	16
   376                           tblptru	equ	0xFF8
   377                           tblptrh	equ	0xFF7
   378                           tblptrl	equ	0xFF6
   379                           tablat	equ	0xFF5
   380                           postinc0	equ	0xFEE
   381                           wreg	equ	0xFE8
   382                           postdec1	equ	0xFE5
   383                           fsr1l	equ	0xFE1
   384                           
   385                           	psect	dataBANK0
   386  0000E9                     __pdataBANK0:
   387                           	opt stack 0
   388  0000E9                     _comp_ft:
   389                           	opt stack 0
   390  0000E9                     	ds	4
   391                           tblptru	equ	0xFF8
   392                           tblptrh	equ	0xFF7
   393                           tblptrl	equ	0xFF6
   394                           tablat	equ	0xFF5
   395                           postinc0	equ	0xFEE
   396                           wreg	equ	0xFE8
   397                           postdec1	equ	0xFE5
   398                           fsr1l	equ	0xFE1
   399                           
   400                           	psect	cstackBANK0
   401  0000B2                     __pcstackBANK0:
   402                           	opt stack 0
   403  0000B2                     ??___fttol:
   404  0000B2                     data_print@data8:
   405                           	opt stack 0
   406                           
   407                           ; 4 bytes @ 0x0
   408  0000B2                     	ds	4
   409  0000B6                     data_print@data9:
   410                           	opt stack 0
   411                           
   412                           ; 4 bytes @ 0x4
   413  0000B6                     	ds	1
   414  0000B7                     ___fttol@sign1:
   415                           	opt stack 0
   416                           
   417                           ; 1 bytes @ 0x5
   418  0000B7                     	ds	1
   419  0000B8                     ___fttol@lval:
   420                           	opt stack 0
   421                           
   422                           ; 4 bytes @ 0x6
   423  0000B8                     	ds	2
   424  0000BA                     data_print@data10:
   425                           	opt stack 0
   426                           
   427                           ; 4 bytes @ 0x8
   428  0000BA                     	ds	2
   429  0000BC                     ___fttol@exp1:
   430                           	opt stack 0
   431                           
   432                           ; 1 bytes @ 0xA
   433  0000BC                     	ds	1
   434  0000BD                     ??_vel_med:
   435  0000BD                     ??_acel_med:
   436  0000BD                     delay_sec@j:
   437                           	opt stack 0
   438                           
   439                           ; 2 bytes @ 0xB
   440  0000BD                     	ds	1
   441  0000BE                     data_print@data1:
   442                           	opt stack 0
   443                           
   444                           ; 4 bytes @ 0xC
   445  0000BE                     	ds	1
   446  0000BF                     delay_sec@i:
   447                           	opt stack 0
   448                           
   449                           ; 2 bytes @ 0xD
   450  0000BF                     	ds	2
   451  0000C1                     msg_init@i:
   452                           	opt stack 0
   453                           
   454                           ; 2 bytes @ 0xF
   455  0000C1                     	ds	1
   456  0000C2                     data_print@data2:
   457                           	opt stack 0
   458                           
   459                           ; 4 bytes @ 0x10
   460  0000C2                     	ds	4
   461  0000C6                     data_print@data3:
   462                           	opt stack 0
   463                           
   464                           ; 4 bytes @ 0x14
   465  0000C6                     	ds	4
   466  0000CA                     data_print@data4:
   467                           	opt stack 0
   468                           
   469                           ; 4 bytes @ 0x18
   470  0000CA                     	ds	4
   471  0000CE                     data_print@data5:
   472                           	opt stack 0
   473                           
   474                           ; 4 bytes @ 0x1C
   475  0000CE                     	ds	4
   476  0000D2                     data_print@data6:
   477                           	opt stack 0
   478                           
   479                           ; 4 bytes @ 0x20
   480  0000D2                     	ds	4
   481  0000D6                     data_print@data7:
   482                           	opt stack 0
   483                           
   484                           ; 4 bytes @ 0x24
   485  0000D6                     	ds	4
   486  0000DA                     data_print@data00:
   487                           	opt stack 0
   488                           
   489                           ; 4 bytes @ 0x28
   490  0000DA                     	ds	4
   491  0000DE                     data_print@data0:
   492                           	opt stack 0
   493                           
   494                           ; 4 bytes @ 0x2C
   495  0000DE                     	ds	4
   496  0000E2                     ??_data_tmr:
   497                           
   498                           ; 1 bytes @ 0x30
   499  0000E2                     	ds	4
   500  0000E6                     ??_acq_data:
   501                           
   502                           ; 1 bytes @ 0x34
   503  0000E6                     	ds	1
   504  0000E7                     ??_main:
   505                           
   506                           ; 1 bytes @ 0x35
   507  0000E7                     	ds	2
   508                           tblptru	equ	0xFF8
   509                           tblptrh	equ	0xFF7
   510                           tblptrl	equ	0xFF6
   511                           tablat	equ	0xFF5
   512                           postinc0	equ	0xFEE
   513                           wreg	equ	0xFE8
   514                           postdec1	equ	0xFE5
   515                           fsr1l	equ	0xFE1
   516                           
   517                           	psect	cstackCOMRAM
   518  000001                     __pcstackCOMRAM:
   519                           	opt stack 0
   520  000001                     ??_inter:
   521  000001                     
   522                           ; 1 bytes @ 0x0
   523  000001                     	ds	18
   524  000013                     ??_clear_data:
   525  000013                     ?___ftpack:
   526                           	opt stack 0
   527  000013                     ?___lmul:
   528                           	opt stack 0
   529  000013                     ?___llmod:
   530                           	opt stack 0
   531  000013                     set_inst@b:
   532                           	opt stack 0
   533  000013                     ___ftpack@arg:
   534                           	opt stack 0
   535  000013                     ___lmul@multiplier:
   536                           	opt stack 0
   537  000013                     ___llmod@dividend:
   538                           	opt stack 0
   539  000013                     set_data@v:
   540                           	opt stack 0
   541                           
   542                           ; 8 bytes @ 0x12
   543  000013                     	ds	1
   544  000014                     set_inst@c:
   545                           	opt stack 0
   546                           
   547                           ; 1 bytes @ 0x13
   548  000014                     	ds	1
   549  000015                     set_inst@d:
   550                           	opt stack 0
   551  000015                     clear_data@i:
   552                           	opt stack 0
   553                           
   554                           ; 2 bytes @ 0x14
   555  000015                     	ds	1
   556  000016                     set_inst@e:
   557                           	opt stack 0
   558  000016                     ___ftpack@exp:
   559                           	opt stack 0
   560                           
   561                           ; 1 bytes @ 0x15
   562  000016                     	ds	1
   563  000017                     set_inst@f:
   564                           	opt stack 0
   565  000017                     ___ftpack@sign:
   566                           	opt stack 0
   567  000017                     ___lmul@multiplicand:
   568                           	opt stack 0
   569  000017                     ___llmod@divisor:
   570                           	opt stack 0
   571                           
   572                           ; 4 bytes @ 0x16
   573  000017                     	ds	1
   574  000018                     ??___ftpack:
   575  000018                     set_inst@g:
   576                           	opt stack 0
   577                           
   578                           ; 1 bytes @ 0x17
   579  000018                     	ds	1
   580  000019                     set_inst@h:
   581                           	opt stack 0
   582                           
   583                           ; 1 bytes @ 0x18
   584  000019                     	ds	1
   585  00001A                     set_inst@a:
   586                           	opt stack 0
   587                           
   588                           ; 1 bytes @ 0x19
   589  00001A                     	ds	1
   590  00001B                     ??_config_lcd:
   591  00001B                     ?___ftmul:
   592                           	opt stack 0
   593  00001B                     ?___awtoft:
   594                           	opt stack 0
   595  00001B                     ?___lltoft:
   596                           	opt stack 0
   597  00001B                     set_data@data:
   598                           	opt stack 0
   599  00001B                     ___llmod@counter:
   600                           	opt stack 0
   601  00001B                     ___awtoft@c:
   602                           	opt stack 0
   603  00001B                     ___ftmul@f1:
   604                           	opt stack 0
   605  00001B                     ___lmul@product:
   606                           	opt stack 0
   607  00001B                     ___lltoft@c:
   608                           	opt stack 0
   609                           
   610                           ; 4 bytes @ 0x1A
   611  00001B                     	ds	1
   612  00001C                     ?___lldiv:
   613                           	opt stack 0
   614  00001C                     set_data@i:
   615                           	opt stack 0
   616  00001C                     ___lldiv@dividend:
   617                           	opt stack 0
   618                           
   619                           ; 4 bytes @ 0x1B
   620  00001C                     	ds	1
   621  00001D                     write_string@string:
   622                           	opt stack 0
   623                           
   624                           ; 2 bytes @ 0x1C
   625  00001D                     	ds	1
   626  00001E                     ___awtoft@sign:
   627                           	opt stack 0
   628  00001E                     ___ftmul@f2:
   629                           	opt stack 0
   630                           
   631                           ; 3 bytes @ 0x1D
   632  00001E                     	ds	1
   633  00001F                     ??_write_string:
   634  00001F                     ??___lltoft:
   635                           
   636                           ; 1 bytes @ 0x1E
   637  00001F                     	ds	1
   638  000020                     ___lldiv@divisor:
   639                           	opt stack 0
   640                           
   641                           ; 4 bytes @ 0x1F
   642  000020                     	ds	1
   643  000021                     ??___ftmul:
   644  000021                     write_string@i:
   645                           	opt stack 0
   646                           
   647                           ; 2 bytes @ 0x20
   648  000021                     	ds	2
   649  000023                     ___lltoft@exp:
   650                           	opt stack 0
   651                           
   652                           ; 1 bytes @ 0x22
   653  000023                     	ds	1
   654  000024                     ?___ftdiv:
   655                           	opt stack 0
   656  000024                     ___ftmul@exp:
   657                           	opt stack 0
   658  000024                     ___ftdiv@f1:
   659                           	opt stack 0
   660  000024                     ___lldiv@quotient:
   661                           	opt stack 0
   662                           
   663                           ; 4 bytes @ 0x23
   664  000024                     	ds	1
   665  000025                     ___ftmul@f3_as_product:
   666                           	opt stack 0
   667                           
   668                           ; 3 bytes @ 0x24
   669  000025                     	ds	2
   670  000027                     ___ftdiv@f2:
   671                           	opt stack 0
   672                           
   673                           ; 3 bytes @ 0x26
   674  000027                     	ds	1
   675  000028                     ___ftmul@cntr:
   676                           	opt stack 0
   677  000028                     ___lldiv@counter:
   678                           	opt stack 0
   679                           
   680                           ; 1 bytes @ 0x27
   681  000028                     	ds	1
   682  000029                     ___ftmul@sign:
   683                           	opt stack 0
   684  000029                     data_print@data:
   685                           	opt stack 0
   686                           
   687                           ; 4 bytes @ 0x28
   688  000029                     	ds	1
   689  00002A                     ??___ftdiv:
   690  00002A                     ___ftge@ff1:
   691                           	opt stack 0
   692                           
   693                           ; 3 bytes @ 0x29
   694  00002A                     	ds	3
   695  00002D                     ___ftdiv@cntr:
   696                           	opt stack 0
   697  00002D                     ___ftge@ff2:
   698                           	opt stack 0
   699                           
   700                           ; 3 bytes @ 0x2C
   701  00002D                     	ds	1
   702  00002E                     ___ftdiv@f3:
   703                           	opt stack 0
   704                           
   705                           ; 3 bytes @ 0x2D
   706  00002E                     	ds	2
   707  000030                     ??___ftge:
   708                           
   709                           ; 1 bytes @ 0x2F
   710  000030                     	ds	1
   711  000031                     ___ftdiv@exp:
   712                           	opt stack 0
   713                           
   714                           ; 1 bytes @ 0x30
   715  000031                     	ds	1
   716  000032                     ___ftdiv@sign:
   717                           	opt stack 0
   718                           
   719                           ; 1 bytes @ 0x31
   720  000032                     	ds	1
   721  000033                     ?___fttol:
   722                           	opt stack 0
   723  000033                     ___fttol@f1:
   724                           	opt stack 0
   725                           
   726                           ; 3 bytes @ 0x32
   727  000033                     	ds	4
   728  000037                     vel_med@i:
   729                           	opt stack 0
   730  000037                     acel_med@i:
   731                           	opt stack 0
   732  000037                     delay_sec@sec:
   733                           	opt stack 0
   734                           
   735                           ; 3 bytes @ 0x36
   736  000037                     	ds	2
   737  000039                     data_tmr@ftp:
   738                           	opt stack 0
   739                           
   740                           ; 2 bytes @ 0x38
   741  000039                     	ds	1
   742  00003A                     ??_delay_sec:
   743                           
   744                           ; 1 bytes @ 0x39
   745  00003A                     	ds	1
   746  00003B                     tblptru	equ	0xFF8
   747                           tblptrh	equ	0xFF7
   748                           tblptrl	equ	0xFF6
   749                           tablat	equ	0xFF5
   750                           postinc0	equ	0xFEE
   751                           wreg	equ	0xFE8
   752                           postdec1	equ	0xFE5
   753                           fsr1l	equ	0xFE1
   754                           
   755                           ; 1 bytes @ 0x3A
   756 ;;
   757 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   758 ;;
   759 ;; *************** function _main *****************
   760 ;; Defined at:
   761 ;;		line 533 in file "main.c"
   762 ;; Parameters:    Size  Location     Type
   763 ;;		None
   764 ;; Auto vars:     Size  Location     Type
   765 ;;		None
   766 ;; Return value:  Size  Location     Type
   767 ;;                  1    wreg      void 
   768 ;; Registers used:
   769 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   770 ;; Tracked objects:
   771 ;;		On entry : 0/0
   772 ;;		On exit  : 0/0
   773 ;;		Unchanged: 0/0
   774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   775 ;;      Params:         0       0       0       0       0       0       0       0       0
   776 ;;      Locals:         0       0       0       0       0       0       0       0       0
   777 ;;      Temps:          0       2       0       0       0       0       0       0       0
   778 ;;      Totals:         0       2       0       0       0       0       0       0       0
   779 ;;Total ram usage:        2 bytes
   780 ;; Hardware stack levels required when called:    6
   781 ;; This function calls:
   782 ;;		_acq_data
   783 ;;		_clear_data
   784 ;;		_clear_scr
   785 ;;		_config_int
   786 ;;		_config_io
   787 ;;		_config_lcd
   788 ;;		_config_osc
   789 ;;		_config_tmr
   790 ;;		_jump_line
   791 ;;		_msg_init
   792 ;;		_write_string
   793 ;; This function is called by:
   794 ;;		Startup code after reset
   795 ;; This function uses a non-reentrant model
   796 ;;
   797                           
   798                           	psect	text0
   799  001EC8                     __ptext0:
   800                           	opt stack 0
   801  001EC8                     _main:
   802                           	opt stack 25
   803                           
   804                           ;main.c: 535: clear_scr();
   805                           
   806                           ;incstack = 0
   807  001EC8  EC72  F010         	call	_clear_scr	;wreg free
   808                           
   809                           ;main.c: 536: config_osc();
   810  001ECC  EC62  F011         	call	_config_osc	;wreg free
   811                           
   812                           ;main.c: 537: config_io();
   813  001ED0  EC07  F011         	call	_config_io	;wreg free
   814                           
   815                           ;main.c: 538: config_int();
   816  001ED4  EC32  F011         	call	_config_int	;wreg free
   817                           
   818                           ;main.c: 539: config_tmr();
   819  001ED8  EC1E  F011         	call	_config_tmr	;wreg free
   820                           
   821                           ;main.c: 540: config_lcd();
   822  001EDC  ECE4  F00E         	call	_config_lcd	;wreg free
   823                           
   824                           ;main.c: 542: clear_scr();
   825  001EE0  EC72  F010         	call	_clear_scr	;wreg free
   826                           
   827                           ;main.c: 543: clear_data();
   828  001EE4  ECBE  F009         	call	_clear_data	;wreg free
   829                           
   830                           ;main.c: 545: msg_init();
   831  001EE8  ECB1  F00C         	call	_msg_init	;wreg free
   832                           
   833                           ;main.c: 547: clear_scr();
   834  001EEC  EC72  F010         	call	_clear_scr	;wreg free
   835  001EF0                     
   836                           ;main.c: 551: clear_data();
   837  001EF0  ECBE  F009         	call	_clear_data	;wreg free
   838                           
   839                           ;main.c: 552: write_string("WRTUNNEL PRONTO");
   840  001EF4  0E13               	movlw	low STR_10
   841  001EF6  6E1D               	movwf	write_string@string,c
   842  001EF8  0E08               	movlw	high STR_10
   843  001EFA  6E1E               	movwf	write_string@string+1,c
   844  001EFC  ECA3  F00F         	call	_write_string	;wreg free
   845                           
   846                           ;main.c: 553: jump_line();
   847  001F00  EC45  F011         	call	_jump_line	;wreg free
   848                           
   849                           ;main.c: 554: write_string("PARA CHUTE");
   850  001F04  0E4A               	movlw	low STR_11
   851  001F06  6E1D               	movwf	write_string@string,c
   852  001F08  0E08               	movlw	high STR_11
   853  001F0A  6E1E               	movwf	write_string@string+1,c
   854  001F0C  ECA3  F00F         	call	_write_string	;wreg free
   855                           
   856                           ;main.c: 555: TMR0 = 0;
   857  001F10  0E00               	movlw	0
   858  001F12  6ED7               	movwf	4055,c	;volatile
   859  001F14  0E00               	movlw	0
   860  001F16  6ED6               	movwf	4054,c	;volatile
   861  001F18  AC83               	btfss	3971,6,c	;volatile
   862  001F1A  D7FE               	goto	l208
   863                           
   864                           ;main.c: 558: clear_scr();
   865  001F1C  EC72  F010         	call	_clear_scr	;wreg free
   866                           
   867                           ;main.c: 562: acq_data();
   868  001F20  EC24  F00F         	call	_acq_data	;wreg free
   869                           
   870                           ;main.c: 564: _delay((unsigned long)((10000)*(1000000/4000.0)));
   871  001F24  0E0D               	movlw	13
   872  001F26  0100               	movlb	0	; () banked
   873  001F28  6FE8               	movwf	(??_main+1)& (0+255),b
   874  001F2A  0EAF               	movlw	175
   875  001F2C  0100               	movlb	0	; () banked
   876  001F2E  6FE7               	movwf	??_main& (0+255),b
   877  001F30  0EB6               	movlw	182
   878  001F32                     u2597:
   879  001F32  2EE8               	decfsz	wreg,f,c
   880  001F34  D7FE               	bra	u2597
   881  001F36  2FE7               	decfsz	??_main& (0+255),f,b
   882  001F38  D7FC               	bra	u2597
   883  001F3A  2FE8               	decfsz	(??_main+1)& (0+255),f,b
   884  001F3C  D7FA               	bra	u2597
   885  001F3E  F000               	nop	
   886                           
   887                           ;main.c: 566: clear_scr();
   888  001F40  EC72  F010         	call	_clear_scr	;wreg free
   889  001F44  D7D5               	goto	l206
   890  001F46                     __end_of_main:
   891                           	opt stack 0
   892                           tblptru	equ	0xFF8
   893                           tblptrh	equ	0xFF7
   894                           tblptrl	equ	0xFF6
   895                           tablat	equ	0xFF5
   896                           postinc0	equ	0xFEE
   897                           wreg	equ	0xFE8
   898                           postdec1	equ	0xFE5
   899                           fsr1l	equ	0xFE1
   900                           
   901 ;; *************** function _msg_init *****************
   902 ;; Defined at:
   903 ;;		line 372 in file "main.c"
   904 ;; Parameters:    Size  Location     Type
   905 ;;		None
   906 ;; Auto vars:     Size  Location     Type
   907 ;;  i               2   15[BANK0 ] int 
   908 ;; Return value:  Size  Location     Type
   909 ;;                  1    wreg      void 
   910 ;; Registers used:
   911 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   912 ;; Tracked objects:
   913 ;;		On entry : 0/0
   914 ;;		On exit  : 0/0
   915 ;;		Unchanged: 0/0
   916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   917 ;;      Params:         0       0       0       0       0       0       0       0       0
   918 ;;      Locals:         0       2       0       0       0       0       0       0       0
   919 ;;      Temps:          0       0       0       0       0       0       0       0       0
   920 ;;      Totals:         0       2       0       0       0       0       0       0       0
   921 ;;Total ram usage:        2 bytes
   922 ;; Hardware stack levels used:    1
   923 ;; Hardware stack levels required when called:    4
   924 ;; This function calls:
   925 ;;		_clear_scr
   926 ;;		_delay_sec
   927 ;;		_jump_line
   928 ;;		_write_string
   929 ;; This function is called by:
   930 ;;		_main
   931 ;; This function uses a non-reentrant model
   932 ;;
   933                           
   934                           	psect	text1
   935  001962                     __ptext1:
   936                           	opt stack 0
   937  001962                     _msg_init:
   938                           	opt stack 26
   939                           
   940                           ;main.c: 373: clear_scr();
   941                           
   942                           ;incstack = 0
   943  001962  EC72  F010         	call	_clear_scr	;wreg free
   944                           
   945                           ;main.c: 374: write_string(" WARTHOG ROBOTICS");
   946  001966  0E01               	movlw	low STR_1
   947  001968  6E1D               	movwf	write_string@string,c
   948  00196A  0E08               	movlw	high STR_1
   949  00196C  6E1E               	movwf	write_string@string+1,c
   950  00196E  ECA3  F00F         	call	_write_string	;wreg free
   951                           
   952                           ;main.c: 375: jump_line();
   953  001972  EC45  F011         	call	_jump_line	;wreg free
   954                           
   955                           ;main.c: 376: write_string(" EESC - USP");
   956  001976  0E3E               	movlw	low STR_2
   957  001978  6E1D               	movwf	write_string@string,c
   958  00197A  0E08               	movlw	high STR_2
   959  00197C  6E1E               	movwf	write_string@string+1,c
   960  00197E  ECA3  F00F         	call	_write_string	;wreg free
   961                           
   962                           ;main.c: 377: delay_sec(2);
   963  001982  0E00               	movlw	0
   964  001984  6E37               	movwf	delay_sec@sec,c
   965  001986  0E00               	movlw	0
   966  001988  6E38               	movwf	delay_sec@sec+1,c
   967  00198A  0E40               	movlw	64
   968  00198C  6E39               	movwf	delay_sec@sec+2,c
   969  00198E  EC61  F00E         	call	_delay_sec	;wreg free
   970                           
   971                           ;main.c: 378: clear_scr();
   972  001992  EC72  F010         	call	_clear_scr	;wreg free
   973                           
   974                           ;main.c: 379: write_string(" WRTUNNEL 4.0");
   975  001996  0E23               	movlw	low STR_3
   976  001998  6E1D               	movwf	write_string@string,c
   977  00199A  0E08               	movlw	high STR_3
   978  00199C  6E1E               	movwf	write_string@string+1,c
   979  00199E  ECA3  F00F         	call	_write_string	;wreg free
   980                           
   981                           ;main.c: 380: jump_line();
   982  0019A2  EC45  F011         	call	_jump_line	;wreg free
   983                           
   984                           ;main.c: 381: write_string(" PROTOTIPO");
   985  0019A6  0E55               	movlw	low STR_4
   986  0019A8  6E1D               	movwf	write_string@string,c
   987  0019AA  0E08               	movlw	high STR_4
   988  0019AC  6E1E               	movwf	write_string@string+1,c
   989  0019AE  ECA3  F00F         	call	_write_string	;wreg free
   990                           
   991                           ;main.c: 382: delay_sec(2);
   992  0019B2  0E00               	movlw	0
   993  0019B4  6E37               	movwf	delay_sec@sec,c
   994  0019B6  0E00               	movlw	0
   995  0019B8  6E38               	movwf	delay_sec@sec+1,c
   996  0019BA  0E40               	movlw	64
   997  0019BC  6E39               	movwf	delay_sec@sec+2,c
   998  0019BE  EC61  F00E         	call	_delay_sec	;wreg free
   999                           
  1000                           ;main.c: 383: clear_scr();
  1001  0019C2  EC72  F010         	call	_clear_scr	;wreg free
  1002                           
  1003                           ;main.c: 384: write_string("Configurando");
  1004  0019C6  0E31               	movlw	low STR_5
  1005  0019C8  6E1D               	movwf	write_string@string,c
  1006  0019CA  0E08               	movlw	high STR_5
  1007  0019CC  6E1E               	movwf	write_string@string+1,c
  1008  0019CE  ECA3  F00F         	call	_write_string	;wreg free
  1009                           
  1010                           ;main.c: 385: delay_sec(1);
  1011  0019D2  0E00               	movlw	0
  1012  0019D4  6E37               	movwf	delay_sec@sec,c
  1013  0019D6  0E80               	movlw	128
  1014  0019D8  6E38               	movwf	delay_sec@sec+1,c
  1015  0019DA  0E3F               	movlw	63
  1016  0019DC  6E39               	movwf	delay_sec@sec+2,c
  1017  0019DE  EC61  F00E         	call	_delay_sec	;wreg free
  1018                           
  1019                           ;main.c: 386: for(int i=0;i<6;i++) {
  1020  0019E2  0E00               	movlw	0
  1021  0019E4  0100               	movlb	0	; () banked
  1022  0019E6  6FC2               	movwf	(msg_init@i+1)& (0+255),b
  1023  0019E8  0E00               	movlw	0
  1024  0019EA  6FC1               	movwf	msg_init@i& (0+255),b
  1025  0019EC  0100               	movlb	0	; () banked
  1026  0019EE  BFC2               	btfsc	(msg_init@i+1)& (0+255),7,b
  1027  0019F0  D008               	goto	l152
  1028  0019F2  0100               	movlb	0	; () banked
  1029  0019F4  51C2               	movf	(msg_init@i+1)& (0+255),w,b
  1030  0019F6  E126               	bnz	l155
  1031  0019F8  0E06               	movlw	6
  1032  0019FA  0100               	movlb	0	; () banked
  1033  0019FC  5DC1               	subwf	msg_init@i& (0+255),w,b
  1034  0019FE  B0D8               	btfsc	status,0,c
  1035  001A00  0012               	return	
  1036  001A02                     l152:
  1037                           
  1038                           ; BSR set to: 0
  1039                           ;main.c: 387: write_string(".");
  1040                           
  1041                           ; BSR set to: 0
  1042  001A02  0E6E               	movlw	low STR_6
  1043  001A04  6E1D               	movwf	write_string@string,c
  1044  001A06  0E08               	movlw	high STR_6
  1045  001A08  6E1E               	movwf	write_string@string+1,c
  1046  001A0A  ECA3  F00F         	call	_write_string	;wreg free
  1047                           
  1048                           ;main.c: 388: delay_sec(0.25);
  1049  001A0E  0E00               	movlw	0
  1050  001A10  6E37               	movwf	delay_sec@sec,c
  1051  001A12  0E80               	movlw	128
  1052  001A14  6E38               	movwf	delay_sec@sec+1,c
  1053  001A16  0E3E               	movlw	62
  1054  001A18  6E39               	movwf	delay_sec@sec+2,c
  1055  001A1A  EC61  F00E         	call	_delay_sec	;wreg free
  1056                           
  1057                           ;main.c: 389: if(i==2){
  1058  001A1E  0E02               	movlw	2
  1059  001A20  0100               	movlb	0	; () banked
  1060  001A22  19C1               	xorwf	msg_init@i& (0+255),w,b
  1061  001A24  0100               	movlb	0	; () banked
  1062  001A26  11C2               	iorwf	(msg_init@i+1)& (0+255),w,b
  1063  001A28  A4D8               	btfss	status,2,c
  1064  001A2A  D008               	goto	l154
  1065                           
  1066                           ; BSR set to: 0
  1067                           ;main.c: 390: clear_scr();
  1068  001A2C  EC72  F010         	call	_clear_scr	;wreg free
  1069                           
  1070                           ;main.c: 391: write_string("Configurando");
  1071  001A30  0E31               	movlw	low STR_5
  1072  001A32  6E1D               	movwf	write_string@string,c
  1073  001A34  0E08               	movlw	high STR_5
  1074  001A36  6E1E               	movwf	write_string@string+1,c
  1075  001A38  ECA3  F00F         	call	_write_string	;wreg free
  1076  001A3C                     l154:
  1077  001A3C  0100               	movlb	0	; () banked
  1078  001A3E  4BC1               	infsnz	msg_init@i& (0+255),f,b
  1079  001A40  2BC2               	incf	(msg_init@i+1)& (0+255),f,b
  1080  001A42  D7D4               	goto	L1
  1081  001A44                     l155:
  1082                           
  1083                           ; BSR set to: 0
  1084  001A44  0012               	return		;funcret
  1085  001A46                     __end_of_msg_init:
  1086                           	opt stack 0
  1087                           tblptru	equ	0xFF8
  1088                           tblptrh	equ	0xFF7
  1089                           tblptrl	equ	0xFF6
  1090                           tablat	equ	0xFF5
  1091                           postinc0	equ	0xFEE
  1092                           wreg	equ	0xFE8
  1093                           postdec1	equ	0xFE5
  1094                           fsr1l	equ	0xFE1
  1095                           status	equ	0xFD8
  1096                           
  1097 ;; *************** function _delay_sec *****************
  1098 ;; Defined at:
  1099 ;;		line 365 in file "main.c"
  1100 ;; Parameters:    Size  Location     Type
  1101 ;;  sec             3   54[COMRAM] float 
  1102 ;; Auto vars:     Size  Location     Type
  1103 ;;  i               2   13[BANK0 ] int 
  1104 ;;  j               2   11[BANK0 ] int 
  1105 ;; Return value:  Size  Location     Type
  1106 ;;                  1    wreg      void 
  1107 ;; Registers used:
  1108 ;;		wreg, status,2, status,0, cstack
  1109 ;; Tracked objects:
  1110 ;;		On entry : 0/0
  1111 ;;		On exit  : 0/0
  1112 ;;		Unchanged: 0/0
  1113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1114 ;;      Params:         3       0       0       0       0       0       0       0       0
  1115 ;;      Locals:         0       4       0       0       0       0       0       0       0
  1116 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1117 ;;      Totals:         4       4       0       0       0       0       0       0       0
  1118 ;;Total ram usage:        8 bytes
  1119 ;; Hardware stack levels used:    1
  1120 ;; Hardware stack levels required when called:    3
  1121 ;; This function calls:
  1122 ;;		___awtoft
  1123 ;;		___ftge
  1124 ;;		___ftmul
  1125 ;;		___fttol
  1126 ;; This function is called by:
  1127 ;;		_msg_init
  1128 ;; This function uses a non-reentrant model
  1129 ;;
  1130                           
  1131                           	psect	text2
  1132  001CC2                     __ptext2:
  1133                           	opt stack 0
  1134  001CC2                     _delay_sec:
  1135                           	opt stack 26
  1136                           
  1137                           ;main.c: 366: int i,j;
  1138                           ;main.c: 367: j=sec;
  1139                           
  1140                           ; BSR set to: 0
  1141                           ;incstack = 0
  1142  001CC2  C037  F033         	movff	delay_sec@sec,___fttol@f1
  1143  001CC6  C038  F034         	movff	delay_sec@sec+1,___fttol@f1+1
  1144  001CCA  C039  F035         	movff	delay_sec@sec+2,___fttol@f1+2
  1145  001CCE  EC2D  F00B         	call	___fttol	;wreg free
  1146  001CD2  C033  F0BD         	movff	?___fttol,delay_sec@j
  1147  001CD6  C034  F0BE         	movff	?___fttol+1,delay_sec@j+1
  1148                           
  1149                           ;main.c: 368: for (i=0; i<10*sec; i++)
  1150  001CDA  0E00               	movlw	0
  1151  001CDC  0100               	movlb	0	; () banked
  1152  001CDE  6FC0               	movwf	(delay_sec@i+1)& (0+255),b
  1153  001CE0  0E00               	movlw	0
  1154  001CE2  6FBF               	movwf	delay_sec@i& (0+255),b
  1155  001CE4  D00B               	goto	l146
  1156  001CE6                     
  1157                           ;main.c: 369: _delay((unsigned long)((100)*(1000000/4000.0)));
  1158                           
  1159                           ; BSR set to: 0
  1160  001CE6  0E21               	movlw	33
  1161  001CE8  6E3A               	movwf	??_delay_sec& (0+255),c
  1162  001CEA  0E76               	movlw	118
  1163  001CEC                     u2607:
  1164  001CEC  2EE8               	decfsz	wreg,f,c
  1165  001CEE  D7FE               	bra	u2607
  1166  001CF0  2E3A               	decfsz	??_delay_sec& (0+255),f,c
  1167  001CF2  D7FC               	bra	u2607
  1168  001CF4  D000               	nop2	
  1169  001CF6  0100               	movlb	0	; () banked
  1170  001CF8  4BBF               	infsnz	delay_sec@i& (0+255),f,b
  1171  001CFA  2BC0               	incf	(delay_sec@i+1)& (0+255),f,b
  1172  001CFC                     l146:
  1173                           
  1174                           ; BSR set to: 0
  1175                           
  1176                           ; BSR set to: 0
  1177  001CFC  C0BF  F01B         	movff	delay_sec@i,___awtoft@c
  1178  001D00  C0C0  F01C         	movff	delay_sec@i+1,___awtoft@c+1
  1179  001D04  ECEB  F010         	call	___awtoft	;wreg free
  1180  001D08  C01B  F02A         	movff	?___awtoft,___ftge@ff1
  1181  001D0C  C01C  F02B         	movff	?___awtoft+1,___ftge@ff1+1
  1182  001D10  C01D  F02C         	movff	?___awtoft+2,___ftge@ff1+2
  1183  001D14  0E00               	movlw	0
  1184  001D16  6E1E               	movwf	___ftmul@f2,c
  1185  001D18  0E20               	movlw	32
  1186  001D1A  6E1F               	movwf	___ftmul@f2+1,c
  1187  001D1C  0E41               	movlw	65
  1188  001D1E  6E20               	movwf	___ftmul@f2+2,c
  1189  001D20  C037  F01B         	movff	delay_sec@sec,___ftmul@f1
  1190  001D24  C038  F01C         	movff	delay_sec@sec+1,___ftmul@f1+1
  1191  001D28  C039  F01D         	movff	delay_sec@sec+2,___ftmul@f1+2
  1192  001D2C  ECC4  F00B         	call	___ftmul	;wreg free
  1193  001D30  C01B  F02D         	movff	?___ftmul,___ftge@ff2
  1194  001D34  C01C  F02E         	movff	?___ftmul+1,___ftge@ff2+1
  1195  001D38  C01D  F02F         	movff	?___ftmul+2,___ftge@ff2+2
  1196  001D3C  EC19  F00E         	call	___ftge	;wreg free
  1197  001D40  B0D8               	btfsc	status,0,c
  1198  001D42  0012               	return	
  1199  001D44  D7D0               	goto	l147
  1200  001D46                     __end_of_delay_sec:
  1201                           	opt stack 0
  1202                           tblptru	equ	0xFF8
  1203                           tblptrh	equ	0xFF7
  1204                           tblptrl	equ	0xFF6
  1205                           tablat	equ	0xFF5
  1206                           postinc0	equ	0xFEE
  1207                           wreg	equ	0xFE8
  1208                           postdec1	equ	0xFE5
  1209                           fsr1l	equ	0xFE1
  1210                           status	equ	0xFD8
  1211                           
  1212 ;; *************** function ___ftmul *****************
  1213 ;; Defined at:
  1214 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftmul.c"
  1215 ;; Parameters:    Size  Location     Type
  1216 ;;  f1              3   26[COMRAM] float 
  1217 ;;  f2              3   29[COMRAM] float 
  1218 ;; Auto vars:     Size  Location     Type
  1219 ;;  f3_as_produc    3   36[COMRAM] unsigned um
  1220 ;;  sign            1   40[COMRAM] unsigned char 
  1221 ;;  cntr            1   39[COMRAM] unsigned char 
  1222 ;;  exp             1   35[COMRAM] unsigned char 
  1223 ;; Return value:  Size  Location     Type
  1224 ;;                  3   26[COMRAM] float 
  1225 ;; Registers used:
  1226 ;;		wreg, status,2, status,0, cstack
  1227 ;; Tracked objects:
  1228 ;;		On entry : 0/0
  1229 ;;		On exit  : 0/0
  1230 ;;		Unchanged: 0/0
  1231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1232 ;;      Params:         6       0       0       0       0       0       0       0       0
  1233 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1234 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1235 ;;      Totals:        15       0       0       0       0       0       0       0       0
  1236 ;;Total ram usage:       15 bytes
  1237 ;; Hardware stack levels used:    1
  1238 ;; Hardware stack levels required when called:    2
  1239 ;; This function calls:
  1240 ;;		___ftpack
  1241 ;; This function is called by:
  1242 ;;		_delay_sec
  1243 ;; This function uses a non-reentrant model
  1244 ;;
  1245                           
  1246                           	psect	text3
  1247  001788                     __ptext3:
  1248                           	opt stack 0
  1249  001788                     ___ftmul:
  1250                           	opt stack 26
  1251                           
  1252                           ;incstack = 0
  1253  001788  C01D  F021         	movff	___ftmul@f1+2,??___ftmul
  1254  00178C  6A22               	clrf	(??___ftmul+1)& (0+255),c
  1255  00178E  6A23               	clrf	(??___ftmul+2)& (0+255),c
  1256  001790  341C               	rlcf	___ftmul@f1+1,w,c
  1257  001792  3621               	rlcf	??___ftmul& (0+255),f,c
  1258  001794  E301               	bnc	u2371
  1259  001796  8022               	bsf	(??___ftmul+1)& (0+255),0,c
  1260  001798                     u2371:
  1261  001798  5021               	movf	??___ftmul,w,c
  1262  00179A  6E24               	movwf	___ftmul@exp,c
  1263  00179C  5024               	movf	___ftmul@exp,w,c
  1264  00179E  A4D8               	btfss	status,2,c
  1265  0017A0  D007               	goto	l506
  1266  0017A2  0E00               	movlw	0
  1267  0017A4  6E1B               	movwf	?___ftmul,c
  1268  0017A6  0E00               	movlw	0
  1269  0017A8  6E1C               	movwf	?___ftmul+1,c
  1270  0017AA  0E00               	movlw	0
  1271  0017AC  6E1D               	movwf	?___ftmul+2,c
  1272  0017AE  0012               	return	
  1273  0017B0                     l506:
  1274  0017B0  C020  F021         	movff	___ftmul@f2+2,??___ftmul
  1275  0017B4  6A22               	clrf	(??___ftmul+1)& (0+255),c
  1276  0017B6  6A23               	clrf	(??___ftmul+2)& (0+255),c
  1277  0017B8  341F               	rlcf	___ftmul@f2+1,w,c
  1278  0017BA  3621               	rlcf	??___ftmul& (0+255),f,c
  1279  0017BC  E301               	bnc	u2391
  1280  0017BE  8022               	bsf	(??___ftmul+1)& (0+255),0,c
  1281  0017C0                     u2391:
  1282  0017C0  5021               	movf	??___ftmul,w,c
  1283  0017C2  6E29               	movwf	___ftmul@sign,c
  1284  0017C4  5029               	movf	___ftmul@sign,w,c
  1285  0017C6  A4D8               	btfss	status,2,c
  1286  0017C8  D007               	goto	l508
  1287  0017CA  0E00               	movlw	0
  1288  0017CC  6E1B               	movwf	?___ftmul,c
  1289  0017CE  0E00               	movlw	0
  1290  0017D0  6E1C               	movwf	?___ftmul+1,c
  1291  0017D2  0E00               	movlw	0
  1292  0017D4  6E1D               	movwf	?___ftmul+2,c
  1293  0017D6  0012               	return	
  1294  0017D8                     l508:
  1295  0017D8  5029               	movf	___ftmul@sign,w,c
  1296  0017DA  0F7B               	addlw	123
  1297  0017DC  2624               	addwf	___ftmul@exp,f,c
  1298  0017DE  C01D  F029         	movff	___ftmul@f1+2,___ftmul@sign
  1299  0017E2  5020               	movf	___ftmul@f2+2,w,c
  1300  0017E4  1A29               	xorwf	___ftmul@sign,f,c
  1301  0017E6  0E80               	movlw	128
  1302  0017E8  1629               	andwf	___ftmul@sign,f,c
  1303  0017EA  8E1C               	bsf	___ftmul@f1+1,7,c
  1304  0017EC  8E1F               	bsf	___ftmul@f2+1,7,c
  1305  0017EE  0EFF               	movlw	255
  1306  0017F0  161E               	andwf	___ftmul@f2,f,c
  1307  0017F2  0EFF               	movlw	255
  1308  0017F4  161F               	andwf	___ftmul@f2+1,f,c
  1309  0017F6  0E00               	movlw	0
  1310  0017F8  1620               	andwf	___ftmul@f2+2,f,c
  1311  0017FA  0E00               	movlw	0
  1312  0017FC  6E25               	movwf	___ftmul@f3_as_product,c
  1313  0017FE  0E00               	movlw	0
  1314  001800  6E26               	movwf	___ftmul@f3_as_product+1,c
  1315  001802  0E00               	movlw	0
  1316  001804  6E27               	movwf	___ftmul@f3_as_product+2,c
  1317  001806  0E07               	movlw	7
  1318  001808  6E28               	movwf	___ftmul@cntr,c
  1319  00180A  A01B               	btfss	___ftmul@f1,0,c
  1320  00180C  D006               	goto	l510
  1321  00180E  501E               	movf	___ftmul@f2,w,c
  1322  001810  2625               	addwf	___ftmul@f3_as_product,f,c
  1323  001812  501F               	movf	___ftmul@f2+1,w,c
  1324  001814  2226               	addwfc	___ftmul@f3_as_product+1,f,c
  1325  001816  5020               	movf	___ftmul@f2+2,w,c
  1326  001818  2227               	addwfc	___ftmul@f3_as_product+2,f,c
  1327  00181A                     l510:
  1328  00181A  90D8               	bcf	status,0,c
  1329  00181C  321D               	rrcf	___ftmul@f1+2,f,c
  1330  00181E  321C               	rrcf	___ftmul@f1+1,f,c
  1331  001820  321B               	rrcf	___ftmul@f1,f,c
  1332  001822  90D8               	bcf	status,0,c
  1333  001824  361E               	rlcf	___ftmul@f2,f,c
  1334  001826  361F               	rlcf	___ftmul@f2+1,f,c
  1335  001828  3620               	rlcf	___ftmul@f2+2,f,c
  1336  00182A  2E28               	decfsz	___ftmul@cntr,f,c
  1337  00182C  D7EE               	goto	l509
  1338  00182E  0E09               	movlw	9
  1339  001830  6E28               	movwf	___ftmul@cntr,c
  1340  001832  A01B               	btfss	___ftmul@f1,0,c
  1341  001834  D006               	goto	l513
  1342  001836  501E               	movf	___ftmul@f2,w,c
  1343  001838  2625               	addwf	___ftmul@f3_as_product,f,c
  1344  00183A  501F               	movf	___ftmul@f2+1,w,c
  1345  00183C  2226               	addwfc	___ftmul@f3_as_product+1,f,c
  1346  00183E  5020               	movf	___ftmul@f2+2,w,c
  1347  001840  2227               	addwfc	___ftmul@f3_as_product+2,f,c
  1348  001842                     l513:
  1349  001842  90D8               	bcf	status,0,c
  1350  001844  321D               	rrcf	___ftmul@f1+2,f,c
  1351  001846  321C               	rrcf	___ftmul@f1+1,f,c
  1352  001848  321B               	rrcf	___ftmul@f1,f,c
  1353  00184A  90D8               	bcf	status,0,c
  1354  00184C  3227               	rrcf	___ftmul@f3_as_product+2,f,c
  1355  00184E  3226               	rrcf	___ftmul@f3_as_product+1,f,c
  1356  001850  3225               	rrcf	___ftmul@f3_as_product,f,c
  1357  001852  2E28               	decfsz	___ftmul@cntr,f,c
  1358  001854  D7EE               	goto	l512
  1359  001856  C025  F013         	movff	___ftmul@f3_as_product,___ftpack@arg
  1360  00185A  C026  F014         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  1361  00185E  C027  F015         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  1362  001862  C024  F016         	movff	___ftmul@exp,___ftpack@exp
  1363  001866  C029  F017         	movff	___ftmul@sign,___ftpack@sign
  1364  00186A  EC23  F00D         	call	___ftpack	;wreg free
  1365  00186E  C013  F01B         	movff	?___ftpack,?___ftmul
  1366  001872  C014  F01C         	movff	?___ftpack+1,?___ftmul+1
  1367  001876  C015  F01D         	movff	?___ftpack+2,?___ftmul+2
  1368  00187A  0012               	return	
  1369  00187C                     __end_of___ftmul:
  1370                           	opt stack 0
  1371                           tblptru	equ	0xFF8
  1372                           tblptrh	equ	0xFF7
  1373                           tblptrl	equ	0xFF6
  1374                           tablat	equ	0xFF5
  1375                           postinc0	equ	0xFEE
  1376                           wreg	equ	0xFE8
  1377                           postdec1	equ	0xFE5
  1378                           fsr1l	equ	0xFE1
  1379                           status	equ	0xFD8
  1380                           
  1381 ;; *************** function ___ftge *****************
  1382 ;; Defined at:
  1383 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftge.c"
  1384 ;; Parameters:    Size  Location     Type
  1385 ;;  ff1             3   41[COMRAM] float 
  1386 ;;  ff2             3   44[COMRAM] float 
  1387 ;; Auto vars:     Size  Location     Type
  1388 ;;		None
  1389 ;; Return value:  Size  Location     Type
  1390 ;;		None               void
  1391 ;; Registers used:
  1392 ;;		wreg, status,2, status,0
  1393 ;; Tracked objects:
  1394 ;;		On entry : 0/0
  1395 ;;		On exit  : 0/0
  1396 ;;		Unchanged: 0/0
  1397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1398 ;;      Params:         6       0       0       0       0       0       0       0       0
  1399 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1400 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1401 ;;      Totals:         9       0       0       0       0       0       0       0       0
  1402 ;;Total ram usage:        9 bytes
  1403 ;; Hardware stack levels used:    1
  1404 ;; Hardware stack levels required when called:    1
  1405 ;; This function calls:
  1406 ;;		Nothing
  1407 ;; This function is called by:
  1408 ;;		_delay_sec
  1409 ;; This function uses a non-reentrant model
  1410 ;;
  1411                           
  1412                           	psect	text4
  1413  001C32                     __ptext4:
  1414                           	opt stack 0
  1415  001C32                     ___ftge:
  1416                           	opt stack 27
  1417                           
  1418                           ;incstack = 0
  1419  001C32  AE2C               	btfss	___ftge@ff1+2,7,c
  1420  001C34  D016               	goto	l499
  1421  001C36  C02A  F030         	movff	___ftge@ff1,??___ftge
  1422  001C3A  C02B  F031         	movff	___ftge@ff1+1,??___ftge+1
  1423  001C3E  C02C  F032         	movff	___ftge@ff1+2,??___ftge+2
  1424  001C42  1E30               	comf	??___ftge,f,c
  1425  001C44  1E31               	comf	??___ftge+1,f,c
  1426  001C46  1E32               	comf	??___ftge+2,f,c
  1427  001C48  2A30               	incf	??___ftge,f,c
  1428  001C4A  0E00               	movlw	0
  1429  001C4C  2231               	addwfc	??___ftge+1,f,c
  1430  001C4E  2232               	addwfc	??___ftge+2,f,c
  1431  001C50  0E00               	movlw	0
  1432  001C52  2430               	addwf	??___ftge,w,c
  1433  001C54  6E2A               	movwf	___ftge@ff1,c
  1434  001C56  0E00               	movlw	0
  1435  001C58  2031               	addwfc	??___ftge+1,w,c
  1436  001C5A  6E2B               	movwf	___ftge@ff1+1,c
  1437  001C5C  0E80               	movlw	128
  1438  001C5E  2032               	addwfc	??___ftge+2,w,c
  1439  001C60  6E2C               	movwf	___ftge@ff1+2,c
  1440  001C62                     l499:
  1441  001C62  AE2F               	btfss	___ftge@ff2+2,7,c
  1442  001C64  D016               	goto	l500
  1443  001C66  C02D  F030         	movff	___ftge@ff2,??___ftge
  1444  001C6A  C02E  F031         	movff	___ftge@ff2+1,??___ftge+1
  1445  001C6E  C02F  F032         	movff	___ftge@ff2+2,??___ftge+2
  1446  001C72  1E30               	comf	??___ftge,f,c
  1447  001C74  1E31               	comf	??___ftge+1,f,c
  1448  001C76  1E32               	comf	??___ftge+2,f,c
  1449  001C78  2A30               	incf	??___ftge,f,c
  1450  001C7A  0E00               	movlw	0
  1451  001C7C  2231               	addwfc	??___ftge+1,f,c
  1452  001C7E  2232               	addwfc	??___ftge+2,f,c
  1453  001C80  0E00               	movlw	0
  1454  001C82  2430               	addwf	??___ftge,w,c
  1455  001C84  6E2D               	movwf	___ftge@ff2,c
  1456  001C86  0E00               	movlw	0
  1457  001C88  2031               	addwfc	??___ftge+1,w,c
  1458  001C8A  6E2E               	movwf	___ftge@ff2+1,c
  1459  001C8C  0E80               	movlw	128
  1460  001C8E  2032               	addwfc	??___ftge+2,w,c
  1461  001C90  6E2F               	movwf	___ftge@ff2+2,c
  1462  001C92                     l500:
  1463  001C92  0E00               	movlw	0
  1464  001C94  1A2A               	xorwf	___ftge@ff1,f,c
  1465  001C96  0E00               	movlw	0
  1466  001C98  1A2B               	xorwf	___ftge@ff1+1,f,c
  1467  001C9A  0E80               	movlw	128
  1468  001C9C  1A2C               	xorwf	___ftge@ff1+2,f,c
  1469  001C9E  0E00               	movlw	0
  1470  001CA0  1A2D               	xorwf	___ftge@ff2,f,c
  1471  001CA2  0E00               	movlw	0
  1472  001CA4  1A2E               	xorwf	___ftge@ff2+1,f,c
  1473  001CA6  0E80               	movlw	128
  1474  001CA8  1A2F               	xorwf	___ftge@ff2+2,f,c
  1475  001CAA  502D               	movf	___ftge@ff2,w,c
  1476  001CAC  5C2A               	subwf	___ftge@ff1,w,c
  1477  001CAE  502E               	movf	___ftge@ff2+1,w,c
  1478  001CB0  582B               	subwfb	___ftge@ff1+1,w,c
  1479  001CB2  502F               	movf	___ftge@ff2+2,w,c
  1480  001CB4  582C               	subwfb	___ftge@ff1+2,w,c
  1481  001CB6  B0D8               	btfsc	status,0,c
  1482  001CB8  D002               	goto	l2204
  1483  001CBA  90D8               	bcf	status,0,c
  1484  001CBC  0012               	return	
  1485  001CBE                     l2204:
  1486  001CBE  80D8               	bsf	status,0,c
  1487  001CC0  0012               	return	
  1488  001CC2                     __end_of___ftge:
  1489                           	opt stack 0
  1490                           tblptru	equ	0xFF8
  1491                           tblptrh	equ	0xFF7
  1492                           tblptrl	equ	0xFF6
  1493                           tablat	equ	0xFF5
  1494                           postinc0	equ	0xFEE
  1495                           wreg	equ	0xFE8
  1496                           postdec1	equ	0xFE5
  1497                           fsr1l	equ	0xFE1
  1498                           status	equ	0xFD8
  1499                           
  1500 ;; *************** function ___awtoft *****************
  1501 ;; Defined at:
  1502 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\awtoft.c"
  1503 ;; Parameters:    Size  Location     Type
  1504 ;;  c               2   26[COMRAM] int 
  1505 ;; Auto vars:     Size  Location     Type
  1506 ;;  sign            1   29[COMRAM] unsigned char 
  1507 ;; Return value:  Size  Location     Type
  1508 ;;                  3   26[COMRAM] float 
  1509 ;; Registers used:
  1510 ;;		wreg, status,2, status,0, cstack
  1511 ;; Tracked objects:
  1512 ;;		On entry : 0/0
  1513 ;;		On exit  : 0/0
  1514 ;;		Unchanged: 0/0
  1515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1516 ;;      Params:         3       0       0       0       0       0       0       0       0
  1517 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1518 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1519 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1520 ;;Total ram usage:        4 bytes
  1521 ;; Hardware stack levels used:    1
  1522 ;; Hardware stack levels required when called:    2
  1523 ;; This function calls:
  1524 ;;		___ftpack
  1525 ;; This function is called by:
  1526 ;;		_delay_sec
  1527 ;; This function uses a non-reentrant model
  1528 ;;
  1529                           
  1530                           	psect	text5
  1531  0021D6                     __ptext5:
  1532                           	opt stack 0
  1533  0021D6                     ___awtoft:
  1534                           	opt stack 26
  1535                           
  1536                           ;incstack = 0
  1537  0021D6  0E00               	movlw	0
  1538  0021D8  6E1E               	movwf	___awtoft@sign,c
  1539  0021DA  AE1C               	btfss	___awtoft@c+1,7,c
  1540  0021DC  D006               	goto	l408
  1541  0021DE  6C1B               	negf	___awtoft@c,c
  1542  0021E0  1E1C               	comf	___awtoft@c+1,f,c
  1543  0021E2  B0D8               	btfsc	status,0,c
  1544  0021E4  2A1C               	incf	___awtoft@c+1,f,c
  1545  0021E6  0E01               	movlw	1
  1546  0021E8  6E1E               	movwf	___awtoft@sign,c
  1547  0021EA                     l408:
  1548  0021EA  C01B  F013         	movff	___awtoft@c,___ftpack@arg
  1549  0021EE  C01C  F014         	movff	___awtoft@c+1,___ftpack@arg+1
  1550  0021F2  6A15               	clrf	___ftpack@arg+2,c
  1551  0021F4  0E8E               	movlw	142
  1552  0021F6  6E16               	movwf	___ftpack@exp,c
  1553  0021F8  C01E  F017         	movff	___awtoft@sign,___ftpack@sign
  1554  0021FC  EC23  F00D         	call	___ftpack	;wreg free
  1555  002200  C013  F01B         	movff	?___ftpack,?___awtoft
  1556  002204  C014  F01C         	movff	?___ftpack+1,?___awtoft+1
  1557  002208  C015  F01D         	movff	?___ftpack+2,?___awtoft+2
  1558  00220C  0012               	return	
  1559  00220E                     __end_of___awtoft:
  1560                           	opt stack 0
  1561                           tblptru	equ	0xFF8
  1562                           tblptrh	equ	0xFF7
  1563                           tblptrl	equ	0xFF6
  1564                           tablat	equ	0xFF5
  1565                           postinc0	equ	0xFEE
  1566                           wreg	equ	0xFE8
  1567                           postdec1	equ	0xFE5
  1568                           fsr1l	equ	0xFE1
  1569                           status	equ	0xFD8
  1570                           
  1571 ;; *************** function _clear_scr *****************
  1572 ;; Defined at:
  1573 ;;		line 322 in file "main.c"
  1574 ;; Parameters:    Size  Location     Type
  1575 ;;		None
  1576 ;; Auto vars:     Size  Location     Type
  1577 ;;		None
  1578 ;; Return value:  Size  Location     Type
  1579 ;;                  1    wreg      void 
  1580 ;; Registers used:
  1581 ;;		wreg, status,2, cstack
  1582 ;; Tracked objects:
  1583 ;;		On entry : 0/0
  1584 ;;		On exit  : 0/0
  1585 ;;		Unchanged: 0/0
  1586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1587 ;;      Params:         0       0       0       0       0       0       0       0       0
  1588 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1589 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1590 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1591 ;;Total ram usage:        0 bytes
  1592 ;; Hardware stack levels used:    1
  1593 ;; Hardware stack levels required when called:    3
  1594 ;; This function calls:
  1595 ;;		_set_inst
  1596 ;; This function is called by:
  1597 ;;		_msg_init
  1598 ;;		_main
  1599 ;; This function uses a non-reentrant model
  1600 ;;
  1601                           
  1602                           	psect	text6
  1603  0020E4                     __ptext6:
  1604                           	opt stack 0
  1605  0020E4                     _clear_scr:
  1606                           	opt stack 26
  1607                           
  1608                           ;main.c: 323: set_inst(0,0,0,0,0,0,0,1);
  1609                           
  1610                           ;incstack = 0
  1611  0020E4  0E00               	movlw	0
  1612  0020E6  6E13               	movwf	set_inst@b,c
  1613  0020E8  0E00               	movlw	0
  1614  0020EA  6E14               	movwf	set_inst@c,c
  1615  0020EC  0E00               	movlw	0
  1616  0020EE  6E15               	movwf	set_inst@d,c
  1617  0020F0  0E00               	movlw	0
  1618  0020F2  6E16               	movwf	set_inst@e,c
  1619  0020F4  0E00               	movlw	0
  1620  0020F6  6E17               	movwf	set_inst@f,c
  1621  0020F8  0E00               	movlw	0
  1622  0020FA  6E18               	movwf	set_inst@g,c
  1623  0020FC  0E01               	movlw	1
  1624  0020FE  6E19               	movwf	set_inst@h,c
  1625  002100  0E00               	movlw	0
  1626  002102  ECDC  F00F         	call	_set_inst
  1627                           
  1628                           ;main.c: 324: set_inst(1,0,0,0,0,0,0,0);
  1629  002106  0E00               	movlw	0
  1630  002108  6E13               	movwf	set_inst@b,c
  1631  00210A  0E00               	movlw	0
  1632  00210C  6E14               	movwf	set_inst@c,c
  1633  00210E  0E00               	movlw	0
  1634  002110  6E15               	movwf	set_inst@d,c
  1635  002112  0E00               	movlw	0
  1636  002114  6E16               	movwf	set_inst@e,c
  1637  002116  0E00               	movlw	0
  1638  002118  6E17               	movwf	set_inst@f,c
  1639  00211A  0E00               	movlw	0
  1640  00211C  6E18               	movwf	set_inst@g,c
  1641  00211E  0E00               	movlw	0
  1642  002120  6E19               	movwf	set_inst@h,c
  1643  002122  0E01               	movlw	1
  1644  002124  ECDC  F00F         	call	_set_inst
  1645                           
  1646                           ;main.c: 325: LATAbits.LATA1=0;
  1647  002128  9289               	bcf	3977,1,c	;volatile
  1648                           
  1649                           ;main.c: 326: LATAbits.LATA2=0;
  1650  00212A  9489               	bcf	3977,2,c	;volatile
  1651                           
  1652                           ;main.c: 327: LATAbits.LATA3=0;
  1653  00212C  9689               	bcf	3977,3,c	;volatile
  1654                           
  1655                           ;main.c: 328: LATAbits.LATA4=0;
  1656  00212E  9889               	bcf	3977,4,c	;volatile
  1657                           
  1658                           ;main.c: 329: LATAbits.LATA5=0;
  1659  002130  9A89               	bcf	3977,5,c	;volatile
  1660                           
  1661                           ;main.c: 330: LATEbits.LATE0=0;
  1662  002132  908D               	bcf	3981,0,c	;volatile
  1663                           
  1664                           ;main.c: 331: LATEbits.LATE1=0;
  1665  002134  928D               	bcf	3981,1,c	;volatile
  1666                           
  1667                           ;main.c: 332: LATEbits.LATE2=0;
  1668  002136  948D               	bcf	3981,2,c	;volatile
  1669  002138  0012               	return		;funcret
  1670  00213A                     __end_of_clear_scr:
  1671                           	opt stack 0
  1672                           tblptru	equ	0xFF8
  1673                           tblptrh	equ	0xFF7
  1674                           tblptrl	equ	0xFF6
  1675                           tablat	equ	0xFF5
  1676                           postinc0	equ	0xFEE
  1677                           wreg	equ	0xFE8
  1678                           postdec1	equ	0xFE5
  1679                           fsr1l	equ	0xFE1
  1680                           status	equ	0xFD8
  1681                           
  1682 ;; *************** function _config_tmr *****************
  1683 ;; Defined at:
  1684 ;;		line 228 in file "main.c"
  1685 ;; Parameters:    Size  Location     Type
  1686 ;;		None
  1687 ;; Auto vars:     Size  Location     Type
  1688 ;;		None
  1689 ;; Return value:  Size  Location     Type
  1690 ;;                  1    wreg      void 
  1691 ;; Registers used:
  1692 ;;		wreg, status,2
  1693 ;; Tracked objects:
  1694 ;;		On entry : 0/0
  1695 ;;		On exit  : 0/0
  1696 ;;		Unchanged: 0/0
  1697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1698 ;;      Params:         0       0       0       0       0       0       0       0       0
  1699 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1700 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1701 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1702 ;;Total ram usage:        0 bytes
  1703 ;; Hardware stack levels used:    1
  1704 ;; Hardware stack levels required when called:    1
  1705 ;; This function calls:
  1706 ;;		Nothing
  1707 ;; This function is called by:
  1708 ;;		_main
  1709 ;; This function uses a non-reentrant model
  1710 ;;
  1711                           
  1712                           	psect	text7
  1713  00223C                     __ptext7:
  1714                           	opt stack 0
  1715  00223C                     _config_tmr:
  1716                           	opt stack 29
  1717                           
  1718                           ;main.c: 230: T0CONbits.TMR0ON = 0;
  1719                           
  1720                           ;incstack = 0
  1721  00223C  9ED5               	bcf	4053,7,c	;volatile
  1722                           
  1723                           ;main.c: 231: T0CONbits.T08BIT = 0;
  1724  00223E  9CD5               	bcf	4053,6,c	;volatile
  1725                           
  1726                           ;main.c: 232: T0CONbits.T0CS = 0;
  1727  002240  9AD5               	bcf	4053,5,c	;volatile
  1728                           
  1729                           ;main.c: 233: T0CONbits.T0SE = 1;
  1730  002242  88D5               	bsf	4053,4,c	;volatile
  1731                           
  1732                           ;main.c: 235: T0CONbits.PSA = 1;
  1733  002244  86D5               	bsf	4053,3,c	;volatile
  1734                           
  1735                           ;main.c: 236: T0CONbits.T0PS2 = 0;
  1736  002246  94D5               	bcf	4053,2,c	;volatile
  1737                           
  1738                           ;main.c: 237: T0CONbits.T0PS1 = 1;
  1739  002248  82D5               	bsf	4053,1,c	;volatile
  1740                           
  1741                           ;main.c: 238: T0CONbits.T0PS0 = 1;
  1742  00224A  80D5               	bsf	4053,0,c	;volatile
  1743                           
  1744                           ;main.c: 240: TMR0L = 0;
  1745  00224C  0E00               	movlw	0
  1746  00224E  6ED6               	movwf	4054,c	;volatile
  1747                           
  1748                           ;main.c: 241: TMR0H = 0;
  1749  002250  0E00               	movlw	0
  1750  002252  6ED7               	movwf	4055,c	;volatile
  1751                           
  1752                           ;main.c: 244: INTCONbits.TMR0IE = 1;
  1753  002254  8AF2               	bsf	intcon,5,c	;volatile
  1754                           
  1755                           ;main.c: 245: PIE1bits.TMR1IE = 0;
  1756  002256  909D               	bcf	3997,0,c	;volatile
  1757                           
  1758                           ;main.c: 246: PIE1bits.TMR2IE = 0;
  1759  002258  929D               	bcf	3997,1,c	;volatile
  1760                           
  1761                           ;main.c: 247: PIE2bits.TMR3IE = 0;
  1762  00225A  92A0               	bcf	4000,1,c	;volatile
  1763                           
  1764                           ;main.c: 249: INTCON2bits.TMR0IP = 1;
  1765  00225C  84F1               	bsf	intcon2,2,c	;volatile
  1766                           
  1767                           ;main.c: 250: IPR1bits.TMR1IP = 0;
  1768  00225E  909F               	bcf	3999,0,c	;volatile
  1769                           
  1770                           ;main.c: 251: IPR2bits.TMR3IP = 0;
  1771  002260  92A2               	bcf	4002,1,c	;volatile
  1772  002262  0012               	return		;funcret
  1773  002264                     __end_of_config_tmr:
  1774                           	opt stack 0
  1775                           tblptru	equ	0xFF8
  1776                           tblptrh	equ	0xFF7
  1777                           tblptrl	equ	0xFF6
  1778                           tablat	equ	0xFF5
  1779                           intcon	equ	0xFF2
  1780                           intcon2	equ	0xFF1
  1781                           postinc0	equ	0xFEE
  1782                           wreg	equ	0xFE8
  1783                           postdec1	equ	0xFE5
  1784                           fsr1l	equ	0xFE1
  1785                           status	equ	0xFD8
  1786                           
  1787 ;; *************** function _config_osc *****************
  1788 ;; Defined at:
  1789 ;;		line 166 in file "main.c"
  1790 ;; Parameters:    Size  Location     Type
  1791 ;;		None
  1792 ;; Auto vars:     Size  Location     Type
  1793 ;;		None
  1794 ;; Return value:  Size  Location     Type
  1795 ;;                  1    wreg      void 
  1796 ;; Registers used:
  1797 ;;		None
  1798 ;; Tracked objects:
  1799 ;;		On entry : 0/0
  1800 ;;		On exit  : 0/0
  1801 ;;		Unchanged: 0/0
  1802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1803 ;;      Params:         0       0       0       0       0       0       0       0       0
  1804 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1805 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1806 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1807 ;;Total ram usage:        0 bytes
  1808 ;; Hardware stack levels used:    1
  1809 ;; Hardware stack levels required when called:    1
  1810 ;; This function calls:
  1811 ;;		Nothing
  1812 ;; This function is called by:
  1813 ;;		_main
  1814 ;; This function uses a non-reentrant model
  1815 ;;
  1816                           
  1817                           	psect	text8
  1818  0022C4                     __ptext8:
  1819                           	opt stack 0
  1820  0022C4                     _config_osc:
  1821                           	opt stack 29
  1822                           
  1823                           ;main.c: 167: OSCCONbits.IRCF0=0;
  1824                           
  1825                           ;incstack = 0
  1826  0022C4  98D3               	bcf	4051,4,c	;volatile
  1827                           
  1828                           ;main.c: 168: OSCCONbits.IRCF1=0;
  1829  0022C6  9AD3               	bcf	4051,5,c	;volatile
  1830                           
  1831                           ;main.c: 169: OSCCONbits.IRCF2=1;
  1832  0022C8  8CD3               	bsf	4051,6,c	;volatile
  1833                           
  1834                           ;main.c: 170: OSCCONbits.IOFS=1;
  1835  0022CA  84D3               	bsf	4051,2,c	;volatile
  1836                           
  1837                           ;main.c: 171: OSCCONbits.SCS1=1;
  1838  0022CC  82D3               	bsf	4051,1,c	;volatile
  1839  0022CE  0012               	return		;funcret
  1840  0022D0                     __end_of_config_osc:
  1841                           	opt stack 0
  1842                           tblptru	equ	0xFF8
  1843                           tblptrh	equ	0xFF7
  1844                           tblptrl	equ	0xFF6
  1845                           tablat	equ	0xFF5
  1846                           intcon	equ	0xFF2
  1847                           intcon2	equ	0xFF1
  1848                           postinc0	equ	0xFEE
  1849                           wreg	equ	0xFE8
  1850                           postdec1	equ	0xFE5
  1851                           fsr1l	equ	0xFE1
  1852                           status	equ	0xFD8
  1853                           
  1854 ;; *************** function _config_lcd *****************
  1855 ;; Defined at:
  1856 ;;		line 276 in file "main.c"
  1857 ;; Parameters:    Size  Location     Type
  1858 ;;		None
  1859 ;; Auto vars:     Size  Location     Type
  1860 ;;		None
  1861 ;; Return value:  Size  Location     Type
  1862 ;;                  1    wreg      void 
  1863 ;; Registers used:
  1864 ;;		wreg, status,2, cstack
  1865 ;; Tracked objects:
  1866 ;;		On entry : 0/0
  1867 ;;		On exit  : 0/0
  1868 ;;		Unchanged: 0/0
  1869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1870 ;;      Params:         0       0       0       0       0       0       0       0       0
  1871 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1872 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1873 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1874 ;;Total ram usage:        1 bytes
  1875 ;; Hardware stack levels used:    1
  1876 ;; Hardware stack levels required when called:    3
  1877 ;; This function calls:
  1878 ;;		_set_inst
  1879 ;; This function is called by:
  1880 ;;		_main
  1881 ;; This function uses a non-reentrant model
  1882 ;;
  1883                           
  1884                           	psect	text9
  1885  001DC8                     __ptext9:
  1886                           	opt stack 0
  1887  001DC8                     _config_lcd:
  1888                           	opt stack 27
  1889                           
  1890                           ;main.c: 277: set_inst(0,0,1,1,1,0,0,0);
  1891                           
  1892                           ;incstack = 0
  1893  001DC8  0E00               	movlw	0
  1894  001DCA  6E13               	movwf	set_inst@b,c
  1895  001DCC  0E01               	movlw	1
  1896  001DCE  6E14               	movwf	set_inst@c,c
  1897  001DD0  0E01               	movlw	1
  1898  001DD2  6E15               	movwf	set_inst@d,c
  1899  001DD4  0E01               	movlw	1
  1900  001DD6  6E16               	movwf	set_inst@e,c
  1901  001DD8  0E00               	movlw	0
  1902  001DDA  6E17               	movwf	set_inst@f,c
  1903  001DDC  0E00               	movlw	0
  1904  001DDE  6E18               	movwf	set_inst@g,c
  1905  001DE0  0E00               	movlw	0
  1906  001DE2  6E19               	movwf	set_inst@h,c
  1907  001DE4  0E00               	movlw	0
  1908  001DE6  ECDC  F00F         	call	_set_inst
  1909                           
  1910                           ;main.c: 278: set_inst(0,0,0,0,1,1,0,0);
  1911  001DEA  0E00               	movlw	0
  1912  001DEC  6E13               	movwf	set_inst@b,c
  1913  001DEE  0E00               	movlw	0
  1914  001DF0  6E14               	movwf	set_inst@c,c
  1915  001DF2  0E00               	movlw	0
  1916  001DF4  6E15               	movwf	set_inst@d,c
  1917  001DF6  0E01               	movlw	1
  1918  001DF8  6E16               	movwf	set_inst@e,c
  1919  001DFA  0E01               	movlw	1
  1920  001DFC  6E17               	movwf	set_inst@f,c
  1921  001DFE  0E00               	movlw	0
  1922  001E00  6E18               	movwf	set_inst@g,c
  1923  001E02  0E00               	movlw	0
  1924  001E04  6E19               	movwf	set_inst@h,c
  1925  001E06  0E00               	movlw	0
  1926  001E08  ECDC  F00F         	call	_set_inst
  1927                           
  1928                           ;main.c: 279: set_inst(0,0,0,0,0,1,1,0);
  1929  001E0C  0E00               	movlw	0
  1930  001E0E  6E13               	movwf	set_inst@b,c
  1931  001E10  0E00               	movlw	0
  1932  001E12  6E14               	movwf	set_inst@c,c
  1933  001E14  0E00               	movlw	0
  1934  001E16  6E15               	movwf	set_inst@d,c
  1935  001E18  0E00               	movlw	0
  1936  001E1A  6E16               	movwf	set_inst@e,c
  1937  001E1C  0E01               	movlw	1
  1938  001E1E  6E17               	movwf	set_inst@f,c
  1939  001E20  0E01               	movlw	1
  1940  001E22  6E18               	movwf	set_inst@g,c
  1941  001E24  0E00               	movlw	0
  1942  001E26  6E19               	movwf	set_inst@h,c
  1943  001E28  0E00               	movlw	0
  1944  001E2A  ECDC  F00F         	call	_set_inst
  1945                           
  1946                           ;main.c: 288: _delay((unsigned long)((100)*(1000000/4000.0)));
  1947  001E2E  0E21               	movlw	33
  1948  001E30  6E1B               	movwf	??_config_lcd& (0+255),c
  1949  001E32  0E76               	movlw	118
  1950  001E34                     u2617:
  1951  001E34  2EE8               	decfsz	wreg,f,c
  1952  001E36  D7FE               	bra	u2617
  1953  001E38  2E1B               	decfsz	??_config_lcd& (0+255),f,c
  1954  001E3A  D7FC               	bra	u2617
  1955  001E3C  D000               	nop2	
  1956                           
  1957                           ;main.c: 289: _delay((unsigned long)((5)*(1000000/4000.0)));
  1958  001E3E  0EFA               	movlw	250
  1959  001E40                     u2627:
  1960  001E40  D000               	nop2	
  1961  001E42  2EE8               	decfsz	wreg,f,c
  1962  001E44  D7FD               	bra	u2627
  1963  001E46  0012               	return		;funcret
  1964  001E48                     __end_of_config_lcd:
  1965                           	opt stack 0
  1966                           tblptru	equ	0xFF8
  1967                           tblptrh	equ	0xFF7
  1968                           tblptrl	equ	0xFF6
  1969                           tablat	equ	0xFF5
  1970                           intcon	equ	0xFF2
  1971                           intcon2	equ	0xFF1
  1972                           postinc0	equ	0xFEE
  1973                           wreg	equ	0xFE8
  1974                           postdec1	equ	0xFE5
  1975                           fsr1l	equ	0xFE1
  1976                           status	equ	0xFD8
  1977                           
  1978 ;; *************** function _config_io *****************
  1979 ;; Defined at:
  1980 ;;		line 174 in file "main.c"
  1981 ;; Parameters:    Size  Location     Type
  1982 ;;		None
  1983 ;; Auto vars:     Size  Location     Type
  1984 ;;		None
  1985 ;; Return value:  Size  Location     Type
  1986 ;;                  1    wreg      void 
  1987 ;; Registers used:
  1988 ;;		None
  1989 ;; Tracked objects:
  1990 ;;		On entry : 0/0
  1991 ;;		On exit  : 0/0
  1992 ;;		Unchanged: 0/0
  1993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1994 ;;      Params:         0       0       0       0       0       0       0       0       0
  1995 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1996 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1997 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1998 ;;Total ram usage:        0 bytes
  1999 ;; Hardware stack levels used:    1
  2000 ;; Hardware stack levels required when called:    1
  2001 ;; This function calls:
  2002 ;;		Nothing
  2003 ;; This function is called by:
  2004 ;;		_main
  2005 ;; This function uses a non-reentrant model
  2006 ;;
  2007                           
  2008                           	psect	text10
  2009  00220E                     __ptext10:
  2010                           	opt stack 0
  2011  00220E                     _config_io:
  2012                           	opt stack 29
  2013                           
  2014                           ;main.c: 176: TRISCbits.TRISC0 = 0;
  2015                           
  2016                           ;incstack = 0
  2017  00220E  9094               	bcf	3988,0,c	;volatile
  2018                           
  2019                           ;main.c: 177: TRISCbits.TRISC1 = 0;
  2020  002210  9294               	bcf	3988,1,c	;volatile
  2021                           
  2022                           ;main.c: 178: TRISCbits.TRISC2 = 0;
  2023  002212  9494               	bcf	3988,2,c	;volatile
  2024                           
  2025                           ;main.c: 180: TRISAbits.TRISA1 = 0;
  2026  002214  9292               	bcf	3986,1,c	;volatile
  2027                           
  2028                           ;main.c: 181: TRISAbits.TRISA2 = 0;
  2029  002216  9492               	bcf	3986,2,c	;volatile
  2030                           
  2031                           ;main.c: 182: TRISAbits.TRISA3 = 0;
  2032  002218  9692               	bcf	3986,3,c	;volatile
  2033                           
  2034                           ;main.c: 183: TRISAbits.TRISA4 = 0;
  2035  00221A  9892               	bcf	3986,4,c	;volatile
  2036                           
  2037                           ;main.c: 184: TRISAbits.TRISA5 = 0;
  2038  00221C  9A92               	bcf	3986,5,c	;volatile
  2039                           
  2040                           ;main.c: 185: TRISEbits.TRISE0 = 0;
  2041  00221E  9096               	bcf	3990,0,c	;volatile
  2042                           
  2043                           ;main.c: 186: TRISEbits.TRISE1 = 0;
  2044  002220  9296               	bcf	3990,1,c	;volatile
  2045                           
  2046                           ;main.c: 187: TRISEbits.TRISE2 = 0;
  2047  002222  9496               	bcf	3990,2,c	;volatile
  2048                           
  2049                           ;main.c: 189: LATCbits.LATC1=0;
  2050  002224  928B               	bcf	3979,1,c	;volatile
  2051                           
  2052                           ;main.c: 190: LATCbits.LATC2=0;
  2053  002226  948B               	bcf	3979,2,c	;volatile
  2054                           
  2055                           ;main.c: 191: LATCbits.LATC0=0;
  2056  002228  908B               	bcf	3979,0,c	;volatile
  2057                           
  2058                           ;main.c: 192: LATAbits.LATA1=0;
  2059  00222A  9289               	bcf	3977,1,c	;volatile
  2060                           
  2061                           ;main.c: 193: LATAbits.LATA2=0;
  2062  00222C  9489               	bcf	3977,2,c	;volatile
  2063                           
  2064                           ;main.c: 194: LATAbits.LATA3=0;
  2065  00222E  9689               	bcf	3977,3,c	;volatile
  2066                           
  2067                           ;main.c: 195: LATAbits.LATA4=0;
  2068  002230  9889               	bcf	3977,4,c	;volatile
  2069                           
  2070                           ;main.c: 196: LATAbits.LATA5=0;
  2071  002232  9A89               	bcf	3977,5,c	;volatile
  2072                           
  2073                           ;main.c: 197: LATEbits.LATE0=0;
  2074  002234  908D               	bcf	3981,0,c	;volatile
  2075                           
  2076                           ;main.c: 198: LATEbits.LATE1=0;
  2077  002236  928D               	bcf	3981,1,c	;volatile
  2078                           
  2079                           ;main.c: 199: LATEbits.LATE2=0;
  2080  002238  948D               	bcf	3981,2,c	;volatile
  2081  00223A  0012               	return		;funcret
  2082  00223C                     __end_of_config_io:
  2083                           	opt stack 0
  2084                           tblptru	equ	0xFF8
  2085                           tblptrh	equ	0xFF7
  2086                           tblptrl	equ	0xFF6
  2087                           tablat	equ	0xFF5
  2088                           intcon	equ	0xFF2
  2089                           intcon2	equ	0xFF1
  2090                           postinc0	equ	0xFEE
  2091                           wreg	equ	0xFE8
  2092                           postdec1	equ	0xFE5
  2093                           fsr1l	equ	0xFE1
  2094                           status	equ	0xFD8
  2095                           
  2096 ;; *************** function _config_int *****************
  2097 ;; Defined at:
  2098 ;;		line 202 in file "main.c"
  2099 ;; Parameters:    Size  Location     Type
  2100 ;;		None
  2101 ;; Auto vars:     Size  Location     Type
  2102 ;;		None
  2103 ;; Return value:  Size  Location     Type
  2104 ;;                  1    wreg      void 
  2105 ;; Registers used:
  2106 ;;		wreg, status,2
  2107 ;; Tracked objects:
  2108 ;;		On entry : 0/0
  2109 ;;		On exit  : 0/0
  2110 ;;		Unchanged: 0/0
  2111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2112 ;;      Params:         0       0       0       0       0       0       0       0       0
  2113 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2114 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2115 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2116 ;;Total ram usage:        0 bytes
  2117 ;; Hardware stack levels used:    1
  2118 ;; Hardware stack levels required when called:    1
  2119 ;; This function calls:
  2120 ;;		Nothing
  2121 ;; This function is called by:
  2122 ;;		_main
  2123 ;; This function uses a non-reentrant model
  2124 ;;
  2125                           
  2126                           	psect	text11
  2127  002264                     __ptext11:
  2128                           	opt stack 0
  2129  002264                     _config_int:
  2130                           	opt stack 29
  2131                           
  2132                           ;main.c: 204: RCONbits.IPEN = 1;
  2133                           
  2134                           ;incstack = 0
  2135  002264  8ED0               	bsf	4048,7,c	;volatile
  2136                           
  2137                           ;main.c: 206: INTCONbits.RBIE = 0;
  2138  002266  96F2               	bcf	intcon,3,c	;volatile
  2139                           
  2140                           ;main.c: 207: INTCON2bits.NOT_RBPU = 1;
  2141  002268  8EF1               	bsf	intcon2,7,c	;volatile
  2142                           
  2143                           ;main.c: 209: INTCONbits.GIE_GIEH = 1;
  2144  00226A  8EF2               	bsf	intcon,7,c	;volatile
  2145                           
  2146                           ;main.c: 210: INTCONbits.PEIE_GIEL = 1;
  2147  00226C  8CF2               	bsf	intcon,6,c	;volatile
  2148                           
  2149                           ;main.c: 212: INTCONbits.INT0IE = 0;
  2150  00226E  98F2               	bcf	intcon,4,c	;volatile
  2151                           
  2152                           ;main.c: 213: INTCON3bits.INT1IE = 0;
  2153  002270  96F0               	bcf	intcon3,3,c	;volatile
  2154                           
  2155                           ;main.c: 214: INTCON3bits.INT2IE = 0;
  2156  002272  98F0               	bcf	intcon3,4,c	;volatile
  2157                           
  2158                           ;main.c: 216: INTCON2bits.INTEDG0 = 0;
  2159  002274  9CF1               	bcf	intcon2,6,c	;volatile
  2160                           
  2161                           ;main.c: 217: INTCON2bits.INTEDG1 = 0;
  2162  002276  9AF1               	bcf	intcon2,5,c	;volatile
  2163                           
  2164                           ;main.c: 218: INTCON2bits.INTEDG2 = 1;
  2165  002278  88F1               	bsf	intcon2,4,c	;volatile
  2166                           
  2167                           ;main.c: 220: INTCON3bits.INT1IP = 1;
  2168  00227A  8CF0               	bsf	intcon3,6,c	;volatile
  2169                           
  2170                           ;main.c: 221: INTCON3bits.INT2IP = 1;
  2171  00227C  8EF0               	bsf	intcon3,7,c	;volatile
  2172                           
  2173                           ;main.c: 222: INTCON2bits.RBIP = 1;
  2174  00227E  80F1               	bsf	intcon2,0,c	;volatile
  2175                           
  2176                           ;main.c: 224: PIE1 = 0x00;
  2177  002280  0E00               	movlw	0
  2178  002282  6E9D               	movwf	3997,c	;volatile
  2179                           
  2180                           ;main.c: 225: PIE2 = 0x00;
  2181  002284  0E00               	movlw	0
  2182  002286  6EA0               	movwf	4000,c	;volatile
  2183  002288  0012               	return		;funcret
  2184  00228A                     __end_of_config_int:
  2185                           	opt stack 0
  2186                           tblptru	equ	0xFF8
  2187                           tblptrh	equ	0xFF7
  2188                           tblptrl	equ	0xFF6
  2189                           tablat	equ	0xFF5
  2190                           intcon	equ	0xFF2
  2191                           intcon2	equ	0xFF1
  2192                           intcon3	equ	0xFF0
  2193                           postinc0	equ	0xFEE
  2194                           wreg	equ	0xFE8
  2195                           postdec1	equ	0xFE5
  2196                           fsr1l	equ	0xFE1
  2197                           status	equ	0xFD8
  2198                           
  2199 ;; *************** function _clear_data *****************
  2200 ;; Defined at:
  2201 ;;		line 335 in file "main.c"
  2202 ;; Parameters:    Size  Location     Type
  2203 ;;		None
  2204 ;; Auto vars:     Size  Location     Type
  2205 ;;  i               2   20[COMRAM] int 
  2206 ;; Return value:  Size  Location     Type
  2207 ;;                  1    wreg      void 
  2208 ;; Registers used:
  2209 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2210 ;; Tracked objects:
  2211 ;;		On entry : 0/0
  2212 ;;		On exit  : 0/0
  2213 ;;		Unchanged: 0/0
  2214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2215 ;;      Params:         0       0       0       0       0       0       0       0       0
  2216 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2217 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2218 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2219 ;;Total ram usage:        4 bytes
  2220 ;; Hardware stack levels used:    1
  2221 ;; Hardware stack levels required when called:    1
  2222 ;; This function calls:
  2223 ;;		Nothing
  2224 ;; This function is called by:
  2225 ;;		_main
  2226 ;; This function uses a non-reentrant model
  2227 ;;
  2228                           
  2229                           	psect	text12
  2230  00137C                     __ptext12:
  2231                           	opt stack 0
  2232  00137C                     _clear_data:
  2233                           	opt stack 29
  2234                           
  2235                           ;main.c: 336: int i;
  2236                           ;main.c: 337: static unsigned long cont_aux=0;
  2237                           ;main.c: 338: for(i=0;i<6;i++){
  2238                           
  2239                           ;incstack = 0
  2240  00137C  0E00               	movlw	0
  2241  00137E  6E16               	movwf	clear_data@i+1,c
  2242  001380  0E00               	movlw	0
  2243  001382  6E15               	movwf	clear_data@i,c
  2244  001384                     l2032:
  2245  001384  BE16               	btfsc	clear_data@i+1,7,c
  2246  001386  D006               	goto	l137
  2247  001388  5016               	movf	clear_data@i+1,w,c
  2248  00138A  E11B               	bnz	l2042
  2249  00138C  0E06               	movlw	6
  2250  00138E  5C15               	subwf	clear_data@i,w,c
  2251  001390  B0D8               	btfsc	status,0,c
  2252  001392  D017               	goto	u1680
  2253  001394                     l137:
  2254                           
  2255                           ;main.c: 339: time_data[i]=0;
  2256  001394  0E8E               	movlw	low _time_data
  2257  001396  6E13               	movwf	??_clear_data& (0+255),c
  2258  001398  0E00               	movlw	high _time_data
  2259  00139A  6E14               	movwf	(??_clear_data+1)& (0+255),c
  2260  00139C  90D8               	bcf	status,0,c
  2261  00139E  3415               	rlcf	clear_data@i,w,c
  2262  0013A0  6ED9               	movwf	fsr2l,c
  2263  0013A2  3416               	rlcf	clear_data@i+1,w,c
  2264  0013A4  6EDA               	movwf	fsr2h,c
  2265  0013A6  90D8               	bcf	status,0,c
  2266  0013A8  36D9               	rlcf	fsr2l,f,c
  2267  0013AA  36DA               	rlcf	fsr2h,f,c
  2268  0013AC  5013               	movf	??_clear_data,w,c
  2269  0013AE  26D9               	addwf	fsr2l,f,c
  2270  0013B0  5014               	movf	??_clear_data+1,w,c
  2271  0013B2  22DA               	addwfc	fsr2h,f,c
  2272  0013B4  6ADE               	clrf	postinc2,c
  2273  0013B6  6ADE               	clrf	postinc2,c
  2274  0013B8  6ADE               	clrf	postinc2,c
  2275  0013BA  6ADD               	clrf	postdec2,c
  2276  0013BC  4A15               	infsnz	clear_data@i,f,c
  2277  0013BE  2A16               	incf	clear_data@i+1,f,c
  2278  0013C0  D7E1               	goto	l2032
  2279  0013C2                     u1680:
  2280  0013C2                     l2042:
  2281                           
  2282                           ;main.c: 340: }
  2283                           ;main.c: 341: for(i=0;i<5;i++){
  2284  0013C2  0E00               	movlw	0
  2285  0013C4  6E16               	movwf	clear_data@i+1,c
  2286  0013C6  0E00               	movlw	0
  2287  0013C8  6E15               	movwf	clear_data@i,c
  2288  0013CA                     l2044:
  2289  0013CA  BE16               	btfsc	clear_data@i+1,7,c
  2290  0013CC  D006               	goto	l139
  2291  0013CE  5016               	movf	clear_data@i+1,w,c
  2292  0013D0  E11B               	bnz	l2054
  2293  0013D2  0E05               	movlw	5
  2294  0013D4  5C15               	subwf	clear_data@i,w,c
  2295  0013D6  B0D8               	btfsc	status,0,c
  2296  0013D8  D017               	goto	u1700
  2297  0013DA                     l139:
  2298                           
  2299                           ;main.c: 342: vel_data[i]=0;
  2300  0013DA  0EA2               	movlw	low _vel_data
  2301  0013DC  6E13               	movwf	??_clear_data& (0+255),c
  2302  0013DE  0E00               	movlw	high _vel_data
  2303  0013E0  6E14               	movwf	(??_clear_data+1)& (0+255),c
  2304  0013E2  90D8               	bcf	status,0,c
  2305  0013E4  3415               	rlcf	clear_data@i,w,c
  2306  0013E6  6ED9               	movwf	fsr2l,c
  2307  0013E8  3416               	rlcf	clear_data@i+1,w,c
  2308  0013EA  6EDA               	movwf	fsr2h,c
  2309  0013EC  90D8               	bcf	status,0,c
  2310  0013EE  36D9               	rlcf	fsr2l,f,c
  2311  0013F0  36DA               	rlcf	fsr2h,f,c
  2312  0013F2  5013               	movf	??_clear_data,w,c
  2313  0013F4  26D9               	addwf	fsr2l,f,c
  2314  0013F6  5014               	movf	??_clear_data+1,w,c
  2315  0013F8  22DA               	addwfc	fsr2h,f,c
  2316  0013FA  6ADE               	clrf	postinc2,c
  2317  0013FC  6ADE               	clrf	postinc2,c
  2318  0013FE  6ADE               	clrf	postinc2,c
  2319  001400  6ADD               	clrf	postdec2,c
  2320  001402  4A15               	infsnz	clear_data@i,f,c
  2321  001404  2A16               	incf	clear_data@i+1,f,c
  2322  001406  D7E1               	goto	l2044
  2323  001408                     u1700:
  2324  001408                     l2054:
  2325                           
  2326                           ;main.c: 343: }
  2327                           ;main.c: 344: for(i=0;i<4;i++){
  2328  001408  0E00               	movlw	0
  2329  00140A  6E16               	movwf	clear_data@i+1,c
  2330  00140C  0E00               	movlw	0
  2331  00140E  6E15               	movwf	clear_data@i,c
  2332  001410                     l2056:
  2333  001410  BE16               	btfsc	clear_data@i+1,7,c
  2334  001412  D006               	goto	l141
  2335  001414  5016               	movf	clear_data@i+1,w,c
  2336  001416  E11B               	bnz	l2066
  2337  001418  0E04               	movlw	4
  2338  00141A  5C15               	subwf	clear_data@i,w,c
  2339  00141C  B0D8               	btfsc	status,0,c
  2340  00141E  D017               	goto	u1720
  2341  001420                     l141:
  2342                           
  2343                           ;main.c: 345: acel_data[i]=0;
  2344  001420  0E41               	movlw	low _acel_data
  2345  001422  6E13               	movwf	??_clear_data& (0+255),c
  2346  001424  0E00               	movlw	high _acel_data
  2347  001426  6E14               	movwf	(??_clear_data+1)& (0+255),c
  2348  001428  90D8               	bcf	status,0,c
  2349  00142A  3415               	rlcf	clear_data@i,w,c
  2350  00142C  6ED9               	movwf	fsr2l,c
  2351  00142E  3416               	rlcf	clear_data@i+1,w,c
  2352  001430  6EDA               	movwf	fsr2h,c
  2353  001432  90D8               	bcf	status,0,c
  2354  001434  36D9               	rlcf	fsr2l,f,c
  2355  001436  36DA               	rlcf	fsr2h,f,c
  2356  001438  5013               	movf	??_clear_data,w,c
  2357  00143A  26D9               	addwf	fsr2l,f,c
  2358  00143C  5014               	movf	??_clear_data+1,w,c
  2359  00143E  22DA               	addwfc	fsr2h,f,c
  2360  001440  6ADE               	clrf	postinc2,c
  2361  001442  6ADE               	clrf	postinc2,c
  2362  001444  6ADE               	clrf	postinc2,c
  2363  001446  6ADD               	clrf	postdec2,c
  2364  001448  4A15               	infsnz	clear_data@i,f,c
  2365  00144A  2A16               	incf	clear_data@i+1,f,c
  2366  00144C  D7E1               	goto	l2056
  2367  00144E                     u1720:
  2368  00144E                     l2066:
  2369                           
  2370                           ;main.c: 346: }
  2371                           ;main.c: 347: TMR0L=0;
  2372  00144E  0E00               	movlw	0
  2373  001450  6ED6               	movwf	4054,c	;volatile
  2374                           
  2375                           ;main.c: 348: TMR0H=0;
  2376  001452  0E00               	movlw	0
  2377  001454  6ED7               	movwf	4055,c	;volatile
  2378                           
  2379                           ;main.c: 349: num=0;
  2380  001456  0E00               	movlw	0
  2381  001458  0100               	movlb	0	; () banked
  2382  00145A  6F78               	movwf	_num& (0+255),b
  2383  00145C  0E00               	movlw	0
  2384  00145E  6F79               	movwf	(_num+1)& (0+255),b
  2385  001460  0E00               	movlw	0
  2386  001462  6F7A               	movwf	(_num+2)& (0+255),b
  2387  001464  0E00               	movlw	0
  2388  001466  6F7B               	movwf	(_num+3)& (0+255),b
  2389                           
  2390                           ;main.c: 350: fti1_flag=0;
  2391  001468  0E00               	movlw	0
  2392  00146A  0100               	movlb	0	; () banked
  2393  00146C  6F8D               	movwf	(_fti1_flag+1)& (0+255),b
  2394  00146E  0E00               	movlw	0
  2395  001470  6F8C               	movwf	_fti1_flag& (0+255),b
  2396                           
  2397                           ;main.c: 351: fti2_flag=0;
  2398  001472  0E00               	movlw	0
  2399  001474  0100               	movlb	0	; () banked
  2400  001476  6F8B               	movwf	(_fti2_flag+1)& (0+255),b
  2401  001478  0E00               	movlw	0
  2402  00147A  6F8A               	movwf	_fti2_flag& (0+255),b
  2403                           
  2404                           ;main.c: 352: fti3_flag=0;
  2405  00147C  0E00               	movlw	0
  2406  00147E  0100               	movlb	0	; () banked
  2407  001480  6F89               	movwf	(_fti3_flag+1)& (0+255),b
  2408  001482  0E00               	movlw	0
  2409  001484  6F88               	movwf	_fti3_flag& (0+255),b
  2410                           
  2411                           ;main.c: 353: fti4_flag=0;
  2412  001486  0E00               	movlw	0
  2413  001488  0100               	movlb	0	; () banked
  2414  00148A  6F87               	movwf	(_fti4_flag+1)& (0+255),b
  2415  00148C  0E00               	movlw	0
  2416  00148E  6F86               	movwf	_fti4_flag& (0+255),b
  2417                           
  2418                           ;main.c: 354: error_flag=0;
  2419  001490  0E00               	movlw	0
  2420  001492  0100               	movlb	0	; () banked
  2421  001494  6F85               	movwf	(_error_flag+1)& (0+255),b
  2422  001496  0E00               	movlw	0
  2423  001498  6F84               	movwf	_error_flag& (0+255),b
  2424                           
  2425                           ;main.c: 355: time_aux=0;
  2426  00149A  0E00               	movlw	0
  2427  00149C  6E3B               	movwf	_time_aux,c
  2428  00149E  0E00               	movlw	0
  2429  0014A0  6E3C               	movwf	_time_aux+1,c
  2430  0014A2  0E00               	movlw	0
  2431  0014A4  6E3D               	movwf	_time_aux+2,c
  2432  0014A6  0E00               	movlw	0
  2433  0014A8  6E3E               	movwf	_time_aux+3,c
  2434                           
  2435                           ;main.c: 356: cont_ft=0;
  2436  0014AA  0E00               	movlw	0
  2437  0014AC  6E40               	movwf	_cont_ft+1,c
  2438  0014AE  0E00               	movlw	0
  2439  0014B0  6E3F               	movwf	_cont_ft,c
  2440                           
  2441                           ; BSR set to: 0
  2442                           ;main.c: 357: cont_global=cont_aux;
  2443  0014B2  C060  F07C         	movff	clear_data@cont_aux,_cont_global
  2444  0014B6  C061  F07D         	movff	clear_data@cont_aux+1,_cont_global+1
  2445  0014BA  C062  F07E         	movff	clear_data@cont_aux+2,_cont_global+2
  2446  0014BE  C063  F07F         	movff	clear_data@cont_aux+3,_cont_global+3
  2447                           
  2448                           ;main.c: 358: velocidade_med=0;
  2449  0014C2  0E00               	movlw	0
  2450  0014C4  0100               	movlb	0	; () banked
  2451  0014C6  6F74               	movwf	_velocidade_med& (0+255),b
  2452  0014C8  0E00               	movlw	0
  2453  0014CA  6F75               	movwf	(_velocidade_med+1)& (0+255),b
  2454  0014CC  0E00               	movlw	0
  2455  0014CE  6F76               	movwf	(_velocidade_med+2)& (0+255),b
  2456  0014D0  0E00               	movlw	0
  2457  0014D2  6F77               	movwf	(_velocidade_med+3)& (0+255),b
  2458                           
  2459                           ;main.c: 359: aceleracao_med=0;
  2460  0014D4  0E00               	movlw	0
  2461  0014D6  0100               	movlb	0	; () banked
  2462  0014D8  6F64               	movwf	_aceleracao_med& (0+255),b
  2463  0014DA  0E00               	movlw	0
  2464  0014DC  6F65               	movwf	(_aceleracao_med+1)& (0+255),b
  2465  0014DE  0E00               	movlw	0
  2466  0014E0  6F66               	movwf	(_aceleracao_med+2)& (0+255),b
  2467  0014E2  0E00               	movlw	0
  2468  0014E4  6F67               	movwf	(_aceleracao_med+3)& (0+255),b
  2469                           
  2470                           ;main.c: 360: tempo_med = 0;
  2471  0014E6  0E00               	movlw	0
  2472  0014E8  0100               	movlb	0	; () banked
  2473  0014EA  6F68               	movwf	_tempo_med& (0+255),b
  2474  0014EC  0E00               	movlw	0
  2475  0014EE  6F69               	movwf	(_tempo_med+1)& (0+255),b
  2476  0014F0  0E00               	movlw	0
  2477  0014F2  6F6A               	movwf	(_tempo_med+2)& (0+255),b
  2478  0014F4  0E00               	movlw	0
  2479  0014F6  6F6B               	movwf	(_tempo_med+3)& (0+255),b
  2480                           
  2481                           ;main.c: 361: vel_tot = 0;
  2482  0014F8  0E00               	movlw	0
  2483  0014FA  0100               	movlb	0	; () banked
  2484  0014FC  6F70               	movwf	_vel_tot& (0+255),b
  2485  0014FE  0E00               	movlw	0
  2486  001500  6F71               	movwf	(_vel_tot+1)& (0+255),b
  2487  001502  0E00               	movlw	0
  2488  001504  6F72               	movwf	(_vel_tot+2)& (0+255),b
  2489  001506  0E00               	movlw	0
  2490  001508  6F73               	movwf	(_vel_tot+3)& (0+255),b
  2491                           
  2492                           ;main.c: 362: acel_tot = 0;
  2493  00150A  0E00               	movlw	0
  2494  00150C  0100               	movlb	0	; () banked
  2495  00150E  6F6C               	movwf	_acel_tot& (0+255),b
  2496  001510  0E00               	movlw	0
  2497  001512  6F6D               	movwf	(_acel_tot+1)& (0+255),b
  2498  001514  0E00               	movlw	0
  2499  001516  6F6E               	movwf	(_acel_tot+2)& (0+255),b
  2500  001518  0E00               	movlw	0
  2501  00151A  6F6F               	movwf	(_acel_tot+3)& (0+255),b
  2502                           
  2503                           ; BSR set to: 0
  2504  00151C  0012               	return		;funcret
  2505  00151E                     __end_of_clear_data:
  2506                           	opt stack 0
  2507                           tblptru	equ	0xFF8
  2508                           tblptrh	equ	0xFF7
  2509                           tblptrl	equ	0xFF6
  2510                           tablat	equ	0xFF5
  2511                           intcon	equ	0xFF2
  2512                           intcon2	equ	0xFF1
  2513                           intcon3	equ	0xFF0
  2514                           postinc0	equ	0xFEE
  2515                           wreg	equ	0xFE8
  2516                           postdec1	equ	0xFE5
  2517                           fsr1l	equ	0xFE1
  2518                           postinc2	equ	0xFDE
  2519                           postdec2	equ	0xFDD
  2520                           fsr2h	equ	0xFDA
  2521                           fsr2l	equ	0xFD9
  2522                           status	equ	0xFD8
  2523                           
  2524 ;; *************** function _acq_data *****************
  2525 ;; Defined at:
  2526 ;;		line 500 in file "main.c"
  2527 ;; Parameters:    Size  Location     Type
  2528 ;;		None
  2529 ;; Auto vars:     Size  Location     Type
  2530 ;;		None
  2531 ;; Return value:  Size  Location     Type
  2532 ;;                  1    wreg      void 
  2533 ;; Registers used:
  2534 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2535 ;; Tracked objects:
  2536 ;;		On entry : 0/0
  2537 ;;		On exit  : 0/0
  2538 ;;		Unchanged: 0/0
  2539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2540 ;;      Params:         0       0       0       0       0       0       0       0       0
  2541 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2542 ;;      Temps:          0       1       0       0       0       0       0       0       0
  2543 ;;      Totals:         0       1       0       0       0       0       0       0       0
  2544 ;;Total ram usage:        1 bytes
  2545 ;; Hardware stack levels used:    1
  2546 ;; Hardware stack levels required when called:    5
  2547 ;; This function calls:
  2548 ;;		_data_tmr
  2549 ;; This function is called by:
  2550 ;;		_main
  2551 ;; This function uses a non-reentrant model
  2552 ;;
  2553                           
  2554                           	psect	text13
  2555  001E48                     __ptext13:
  2556                           	opt stack 0
  2557  001E48                     _acq_data:
  2558                           	opt stack 25
  2559                           
  2560                           ;main.c: 501: time_data[1] = 0;
  2561                           
  2562                           ; BSR set to: 0
  2563                           ;incstack = 0
  2564  001E48  0E00               	movlw	0
  2565  001E4A  0100               	movlb	0	; () banked
  2566  001E4C  6F92               	movwf	(_time_data+4)& (0+255),b
  2567  001E4E  0E00               	movlw	0
  2568  001E50  6F93               	movwf	(_time_data+5)& (0+255),b
  2569  001E52  0E00               	movlw	0
  2570  001E54  6F94               	movwf	(_time_data+6)& (0+255),b
  2571  001E56  0E00               	movlw	0
  2572  001E58  6F95               	movwf	(_time_data+7)& (0+255),b
  2573                           
  2574                           ; BSR set to: 0
  2575                           ;main.c: 502: cont_ft++;
  2576  001E5A  4A3F               	infsnz	_cont_ft,f,c
  2577  001E5C  2A40               	incf	_cont_ft+1,f,c
  2578                           
  2579                           ; BSR set to: 0
  2580                           ;main.c: 503: T0CONbits.TMR0ON = 1;
  2581  001E5E  8ED5               	bsf	4053,7,c	;volatile
  2582  001E60                     
  2583                           ; BSR set to: 0
  2584  001E60  AA83               	btfss	3971,5,c	;volatile
  2585  001E62  D7FE               	goto	l193
  2586                           
  2587                           ;main.c: 505: T0CONbits.TMR0ON = 0;
  2588  001E64  9ED5               	bcf	4053,7,c	;volatile
  2589                           
  2590                           ;main.c: 508: cont_ft++;
  2591  001E66  4A3F               	infsnz	_cont_ft,f,c
  2592  001E68  2A40               	incf	_cont_ft+1,f,c
  2593                           
  2594                           ;main.c: 509: data_tmr(0);
  2595  001E6A  0E00               	movlw	0
  2596  001E6C  6E3A               	movwf	data_tmr@ftp+1,c
  2597  001E6E  0E00               	movlw	0
  2598  001E70  6E39               	movwf	data_tmr@ftp,c
  2599  001E72  EC8F  F00A         	call	_data_tmr	;wreg free
  2600                           
  2601                           ;main.c: 511: TMR0 = 0;
  2602  001E76  0E00               	movlw	0
  2603  001E78  6ED7               	movwf	4055,c	;volatile
  2604  001E7A  0E00               	movlw	0
  2605  001E7C  6ED6               	movwf	4054,c	;volatile
  2606                           
  2607                           ;main.c: 512: T0CONbits.TMR0ON = 1;
  2608  001E7E  8ED5               	bsf	4053,7,c	;volatile
  2609  001E80  A883               	btfss	3971,4,c	;volatile
  2610  001E82  D7FE               	goto	l196
  2611                           
  2612                           ;main.c: 514: T0CONbits.TMR0ON = 0;
  2613  001E84  9ED5               	bcf	4053,7,c	;volatile
  2614                           
  2615                           ;main.c: 517: cont_ft++;
  2616  001E86  4A3F               	infsnz	_cont_ft,f,c
  2617  001E88  2A40               	incf	_cont_ft+1,f,c
  2618                           
  2619                           ;main.c: 518: data_tmr(0);
  2620  001E8A  0E00               	movlw	0
  2621  001E8C  6E3A               	movwf	data_tmr@ftp+1,c
  2622  001E8E  0E00               	movlw	0
  2623  001E90  6E39               	movwf	data_tmr@ftp,c
  2624  001E92  EC8F  F00A         	call	_data_tmr	;wreg free
  2625                           
  2626                           ;main.c: 520: TMR0 = 0;
  2627  001E96  0E00               	movlw	0
  2628  001E98  6ED7               	movwf	4055,c	;volatile
  2629  001E9A  0E00               	movlw	0
  2630  001E9C  6ED6               	movwf	4054,c	;volatile
  2631                           
  2632                           ;main.c: 521: T0CONbits.TMR0ON = 1;
  2633  001E9E  8ED5               	bsf	4053,7,c	;volatile
  2634  001EA0  AE82               	btfss	3970,7,c	;volatile
  2635  001EA2  D7FE               	goto	l199
  2636                           
  2637                           ;main.c: 523: T0CONbits.TMR0ON = 0;
  2638  001EA4  9ED5               	bcf	4053,7,c	;volatile
  2639                           
  2640                           ;main.c: 526: cont_ft++;
  2641  001EA6  4A3F               	infsnz	_cont_ft,f,c
  2642  001EA8  2A40               	incf	_cont_ft+1,f,c
  2643                           
  2644                           ;main.c: 527: _delay((unsigned long)((500)*(1000000/4000.0)));
  2645  001EAA  0EA3               	movlw	163
  2646  001EAC  0100               	movlb	0	; () banked
  2647  001EAE  6FE6               	movwf	??_acq_data& (0+255),b
  2648  001EB0  0E55               	movlw	85
  2649  001EB2                     u2637:
  2650  001EB2  2EE8               	decfsz	wreg,f,c
  2651  001EB4  D7FE               	bra	u2637
  2652  001EB6  2FE6               	decfsz	??_acq_data& (0+255),f,b
  2653  001EB8  D7FC               	bra	u2637
  2654                           
  2655                           ;main.c: 529: data_tmr(0);
  2656  001EBA  0E00               	movlw	0
  2657  001EBC  6E3A               	movwf	data_tmr@ftp+1,c
  2658  001EBE  0E00               	movlw	0
  2659  001EC0  6E39               	movwf	data_tmr@ftp,c
  2660  001EC2  EC8F  F00A         	call	_data_tmr	;wreg free
  2661  001EC6  0012               	return		;funcret
  2662  001EC8                     __end_of_acq_data:
  2663                           	opt stack 0
  2664                           tblptru	equ	0xFF8
  2665                           tblptrh	equ	0xFF7
  2666                           tblptrl	equ	0xFF6
  2667                           tablat	equ	0xFF5
  2668                           intcon	equ	0xFF2
  2669                           intcon2	equ	0xFF1
  2670                           intcon3	equ	0xFF0
  2671                           postinc0	equ	0xFEE
  2672                           wreg	equ	0xFE8
  2673                           postdec1	equ	0xFE5
  2674                           fsr1l	equ	0xFE1
  2675                           postinc2	equ	0xFDE
  2676                           postdec2	equ	0xFDD
  2677                           fsr2h	equ	0xFDA
  2678                           fsr2l	equ	0xFD9
  2679                           status	equ	0xFD8
  2680                           
  2681 ;; *************** function _data_tmr *****************
  2682 ;; Defined at:
  2683 ;;		line 480 in file "main.c"
  2684 ;; Parameters:    Size  Location     Type
  2685 ;;  ftp             2   56[COMRAM] unsigned int 
  2686 ;; Auto vars:     Size  Location     Type
  2687 ;;		None
  2688 ;; Return value:  Size  Location     Type
  2689 ;;                  1    wreg      void 
  2690 ;; Registers used:
  2691 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2692 ;; Tracked objects:
  2693 ;;		On entry : 0/0
  2694 ;;		On exit  : 0/0
  2695 ;;		Unchanged: 0/0
  2696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2697 ;;      Params:         2       0       0       0       0       0       0       0       0
  2698 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2699 ;;      Temps:          0       4       0       0       0       0       0       0       0
  2700 ;;      Totals:         2       4       0       0       0       0       0       0       0
  2701 ;;Total ram usage:        6 bytes
  2702 ;; Hardware stack levels used:    1
  2703 ;; Hardware stack levels required when called:    4
  2704 ;; This function calls:
  2705 ;;		_acel_med
  2706 ;;		_data_print
  2707 ;;		_jump_line
  2708 ;;		_vel_med
  2709 ;;		_write_string
  2710 ;; This function is called by:
  2711 ;;		_acq_data
  2712 ;; This function uses a non-reentrant model
  2713 ;;
  2714                           
  2715                           	psect	text14
  2716  00151E                     __ptext14:
  2717                           	opt stack 0
  2718  00151E                     _data_tmr:
  2719                           	opt stack 25
  2720                           
  2721                           ;main.c: 481: time_aux = (unsigned long)TMR0H*256 + (unsigned long)TMR0L;
  2722                           
  2723                           ;incstack = 0
  2724  00151E  50D6               	movf	4054,w,c	;volatile
  2725  001520  CFD7 F0E2          	movff	4055,??_data_tmr	;volatile
  2726  001524  0100               	movlb	0	; () banked
  2727  001526  6BE3               	clrf	(??_data_tmr+1)& (0+255),b
  2728  001528  6BE4               	clrf	(??_data_tmr+2)& (0+255),b
  2729  00152A  6BE5               	clrf	(??_data_tmr+3)& (0+255),b
  2730  00152C  C0E4  F0E5         	movff	??_data_tmr+2,??_data_tmr+3
  2731  001530  C0E3  F0E4         	movff	??_data_tmr+1,??_data_tmr+2
  2732  001534  C0E2  F0E3         	movff	??_data_tmr,??_data_tmr+1
  2733  001538  0100               	movlb	0	; () banked
  2734  00153A  6BE2               	clrf	??_data_tmr& (0+255),b
  2735  00153C  0100               	movlb	0	; () banked
  2736  00153E  25E2               	addwf	??_data_tmr& (0+255),w,b
  2737  001540  6E3B               	movwf	_time_aux,c
  2738  001542  0E00               	movlw	0
  2739  001544  0100               	movlb	0	; () banked
  2740  001546  21E3               	addwfc	(??_data_tmr+1)& (0+255),w,b
  2741  001548  6E3C               	movwf	_time_aux+1,c
  2742  00154A  0E00               	movlw	0
  2743  00154C  0100               	movlb	0	; () banked
  2744  00154E  21E4               	addwfc	(??_data_tmr+2)& (0+255),w,b
  2745  001550  6E3D               	movwf	_time_aux+2,c
  2746  001552  0E00               	movlw	0
  2747  001554  0100               	movlb	0	; () banked
  2748  001556  21E5               	addwfc	(??_data_tmr+3)& (0+255),w,b
  2749  001558  6E3E               	movwf	_time_aux+3,c
  2750                           
  2751                           ;main.c: 482: time_aux = time_aux + 65536*num;
  2752  00155A  C078  F0E2         	movff	_num,??_data_tmr
  2753  00155E  C079  F0E3         	movff	_num+1,??_data_tmr+1
  2754  001562  C07A  F0E4         	movff	_num+2,??_data_tmr+2
  2755  001566  C07B  F0E5         	movff	_num+3,??_data_tmr+3
  2756  00156A  C0E3  F0E5         	movff	??_data_tmr+1,??_data_tmr+3
  2757  00156E  C0E2  F0E4         	movff	??_data_tmr,??_data_tmr+2
  2758  001572  0100               	movlb	0	; () banked
  2759  001574  6BE3               	clrf	(??_data_tmr+1)& (0+255),b
  2760  001576  6BE2               	clrf	??_data_tmr& (0+255),b
  2761  001578  503B               	movf	_time_aux,w,c
  2762  00157A  0100               	movlb	0	; () banked
  2763  00157C  25E2               	addwf	??_data_tmr& (0+255),w,b
  2764  00157E  6E3B               	movwf	_time_aux,c
  2765  001580  503C               	movf	_time_aux+1,w,c
  2766  001582  0100               	movlb	0	; () banked
  2767  001584  21E3               	addwfc	(??_data_tmr+1)& (0+255),w,b
  2768  001586  6E3C               	movwf	_time_aux+1,c
  2769  001588  503D               	movf	_time_aux+2,w,c
  2770  00158A  0100               	movlb	0	; () banked
  2771  00158C  21E4               	addwfc	(??_data_tmr+2)& (0+255),w,b
  2772  00158E  6E3D               	movwf	_time_aux+2,c
  2773  001590  503E               	movf	_time_aux+3,w,c
  2774  001592  0100               	movlb	0	; () banked
  2775  001594  21E5               	addwfc	(??_data_tmr+3)& (0+255),w,b
  2776  001596  6E3E               	movwf	_time_aux+3,c
  2777                           
  2778                           ;main.c: 483: time_aux = (time_aux)*4;
  2779  001598  C03B  F0E2         	movff	_time_aux,??_data_tmr
  2780  00159C  C03C  F0E3         	movff	_time_aux+1,??_data_tmr+1
  2781  0015A0  C03D  F0E4         	movff	_time_aux+2,??_data_tmr+2
  2782  0015A4  C03E  F0E5         	movff	_time_aux+3,??_data_tmr+3
  2783  0015A8  0E02               	movlw	2
  2784  0015AA                     u2485:
  2785  0015AA  90D8               	bcf	status,0,c
  2786  0015AC  0100               	movlb	0	; () banked
  2787  0015AE  37E2               	rlcf	??_data_tmr& (0+255),f,b
  2788  0015B0  37E3               	rlcf	(??_data_tmr+1)& (0+255),f,b
  2789  0015B2  37E4               	rlcf	(??_data_tmr+2)& (0+255),f,b
  2790  0015B4  37E5               	rlcf	(??_data_tmr+3)& (0+255),f,b
  2791  0015B6  2EE8               	decfsz	wreg,f,c
  2792  0015B8  D7F8               	goto	u2485
  2793  0015BA  C0E2  F03B         	movff	??_data_tmr,_time_aux
  2794  0015BE  C0E3  F03C         	movff	??_data_tmr+1,_time_aux+1
  2795  0015C2  C0E4  F03D         	movff	??_data_tmr+2,_time_aux+2
  2796  0015C6  C0E5  F03E         	movff	??_data_tmr+3,_time_aux+3
  2797                           
  2798                           ; BSR set to: 0
  2799                           ;main.c: 485: time_data[cont_ft] = time_aux;
  2800  0015CA  0E8E               	movlw	low _time_data
  2801  0015CC  0100               	movlb	0	; () banked
  2802  0015CE  6FE2               	movwf	??_data_tmr& (0+255),b
  2803  0015D0  0E00               	movlw	high _time_data
  2804  0015D2  0100               	movlb	0	; () banked
  2805  0015D4  6FE3               	movwf	(??_data_tmr+1)& (0+255),b
  2806  0015D6  90D8               	bcf	status,0,c
  2807  0015D8  343F               	rlcf	_cont_ft,w,c
  2808  0015DA  6ED9               	movwf	fsr2l,c
  2809  0015DC  3440               	rlcf	_cont_ft+1,w,c
  2810  0015DE  6EDA               	movwf	fsr2h,c
  2811  0015E0  90D8               	bcf	status,0,c
  2812  0015E2  36D9               	rlcf	fsr2l,f,c
  2813  0015E4  36DA               	rlcf	fsr2h,f,c
  2814  0015E6  0100               	movlb	0	; () banked
  2815  0015E8  51E2               	movf	??_data_tmr& (0+255),w,b
  2816  0015EA  26D9               	addwf	fsr2l,f,c
  2817  0015EC  0100               	movlb	0	; () banked
  2818  0015EE  51E3               	movf	(??_data_tmr+1)& (0+255),w,b
  2819  0015F0  22DA               	addwfc	fsr2h,f,c
  2820  0015F2  C03B  FFDE         	movff	_time_aux,postinc2
  2821  0015F6  C03C  FFDE         	movff	_time_aux+1,postinc2
  2822  0015FA  C03D  FFDE         	movff	_time_aux+2,postinc2
  2823  0015FE  C03E  FFDE         	movff	_time_aux+3,postinc2
  2824                           
  2825                           ; BSR set to: 0
  2826                           ;main.c: 487: if (cont_ft == 4) {
  2827  001602  0E04               	movlw	4
  2828  001604  183F               	xorwf	_cont_ft,w,c
  2829  001606  1040               	iorwf	_cont_ft+1,w,c
  2830  001608  A4D8               	btfss	status,2,c
  2831  00160A  0012               	return	
  2832                           
  2833                           ; BSR set to: 0
  2834                           ;main.c: 488: vel_med();
  2835  00160C  EC33  F008         	call	_vel_med	;wreg free
  2836                           
  2837                           ;main.c: 489: acel_med();
  2838  001610  EC52  F006         	call	_acel_med	;wreg free
  2839                           
  2840                           ;main.c: 491: write_string("VEL: ");
  2841  001614  0E68               	movlw	low STR_8
  2842  001616  6E1D               	movwf	write_string@string,c
  2843  001618  0E08               	movlw	high STR_8
  2844  00161A  6E1E               	movwf	write_string@string+1,c
  2845  00161C  ECA3  F00F         	call	_write_string	;wreg free
  2846                           
  2847                           ;main.c: 492: data_print(velocidade_med);
  2848  001620  C074  F029         	movff	_velocidade_med,data_print@data
  2849  001624  C075  F02A         	movff	_velocidade_med+1,data_print@data+1
  2850  001628  C076  F02B         	movff	_velocidade_med+2,data_print@data+2
  2851  00162C  C077  F02C         	movff	_velocidade_med+3,data_print@data+3
  2852  001630  EC39  F004         	call	_data_print	;wreg free
  2853                           
  2854                           ;main.c: 493: jump_line();
  2855  001634  EC45  F011         	call	_jump_line	;wreg free
  2856                           
  2857                           ;main.c: 494: write_string("ACEL: -");
  2858  001638  0E60               	movlw	low STR_9
  2859  00163A  6E1D               	movwf	write_string@string,c
  2860  00163C  0E08               	movlw	high STR_9
  2861  00163E  6E1E               	movwf	write_string@string+1,c
  2862  001640  ECA3  F00F         	call	_write_string	;wreg free
  2863                           
  2864                           ;main.c: 495: data_print(time_data[2]);
  2865  001644  C096  F029         	movff	_time_data+8,data_print@data
  2866  001648  C097  F02A         	movff	_time_data+9,data_print@data+1
  2867  00164C  C098  F02B         	movff	_time_data+10,data_print@data+2
  2868  001650  C099  F02C         	movff	_time_data+11,data_print@data+3
  2869  001654  EC39  F004         	call	_data_print	;wreg free
  2870  001658  0012               	return	
  2871  00165A                     __end_of_data_tmr:
  2872                           	opt stack 0
  2873                           tblptru	equ	0xFF8
  2874                           tblptrh	equ	0xFF7
  2875                           tblptrl	equ	0xFF6
  2876                           tablat	equ	0xFF5
  2877                           intcon	equ	0xFF2
  2878                           intcon2	equ	0xFF1
  2879                           intcon3	equ	0xFF0
  2880                           postinc0	equ	0xFEE
  2881                           wreg	equ	0xFE8
  2882                           postdec1	equ	0xFE5
  2883                           fsr1l	equ	0xFE1
  2884                           postinc2	equ	0xFDE
  2885                           postdec2	equ	0xFDD
  2886                           fsr2h	equ	0xFDA
  2887                           fsr2l	equ	0xFD9
  2888                           status	equ	0xFD8
  2889                           
  2890 ;; *************** function _write_string *****************
  2891 ;; Defined at:
  2892 ;;		line 312 in file "main.c"
  2893 ;; Parameters:    Size  Location     Type
  2894 ;;  string          2   28[COMRAM] PTR unsigned char 
  2895 ;;		 -> STR_11(11), STR_10(16), STR_9(8), STR_8(6), 
  2896 ;;		 -> print_number@v(20), STR_7(13), STR_6(2), STR_5(13), 
  2897 ;;		 -> STR_4(11), STR_3(14), STR_2(12), STR_1(18), 
  2898 ;; Auto vars:     Size  Location     Type
  2899 ;;  i               2   32[COMRAM] int 
  2900 ;; Return value:  Size  Location     Type
  2901 ;;                  1    wreg      void 
  2902 ;; Registers used:
  2903 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2904 ;; Tracked objects:
  2905 ;;		On entry : 0/0
  2906 ;;		On exit  : 0/0
  2907 ;;		Unchanged: 0/0
  2908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2909 ;;      Params:         2       0       0       0       0       0       0       0       0
  2910 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2911 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2912 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2913 ;;Total ram usage:        6 bytes
  2914 ;; Hardware stack levels used:    1
  2915 ;; Hardware stack levels required when called:    3
  2916 ;; This function calls:
  2917 ;;		_set_data
  2918 ;; This function is called by:
  2919 ;;		_msg_init
  2920 ;;		_data_tmr
  2921 ;;		_main
  2922 ;;		_print_number
  2923 ;; This function uses a non-reentrant model
  2924 ;;
  2925                           
  2926                           	psect	text15
  2927  001F46                     __ptext15:
  2928                           	opt stack 0
  2929  001F46                     _write_string:
  2930                           	opt stack 27
  2931                           
  2932                           ;main.c: 313: int i;
  2933                           ;main.c: 314: for (i=0; string[i]!='\0'; i++)
  2934                           
  2935                           ;incstack = 0
  2936  001F46  0E00               	movlw	0
  2937  001F48  6E22               	movwf	write_string@i+1,c
  2938  001F4A  0E00               	movlw	0
  2939  001F4C  6E21               	movwf	write_string@i,c
  2940  001F4E  D01A               	goto	l123
  2941  001F50                     
  2942                           ;main.c: 315: set_data(string[i]);
  2943  001F50  5021               	movf	write_string@i,w,c
  2944  001F52  241D               	addwf	write_string@string,w,c
  2945  001F54  6E1F               	movwf	??_write_string& (0+255),c
  2946  001F56  5022               	movf	write_string@i+1,w,c
  2947  001F58  201E               	addwfc	write_string@string+1,w,c
  2948  001F5A  6E20               	movwf	(??_write_string+1)& (0+255),c
  2949  001F5C  C01F  FFF6         	movff	??_write_string,tblptrl
  2950  001F60  C020  FFF7         	movff	??_write_string+1,tblptrh
  2951  001F64  6AF8               	clrf	tblptru,c
  2952  001F66  0E07               	movlw	(high __ramtop+-1)
  2953  001F68  64F7               	cpfsgt	tblptrh,c
  2954  001F6A  D003               	bra	u2237
  2955  001F6C  0008               	tblrd		*
  2956  001F6E  50F5               	movf	tablat,w,c
  2957  001F70  D005               	bra	u2230
  2958  001F72                     u2237:
  2959  001F72  CFF6 FFE1          	movff	tblptrl,fsr1l
  2960  001F76  CFF7 FFE2          	movff	tblptrh,fsr1h
  2961  001F7A  50E7               	movf	indf1,w,c
  2962  001F7C                     u2230:
  2963  001F7C  ECCF  F00D         	call	_set_data
  2964  001F80  4A21               	infsnz	write_string@i,f,c
  2965  001F82  2A22               	incf	write_string@i+1,f,c
  2966  001F84                     l123:
  2967  001F84  5021               	movf	write_string@i,w,c
  2968  001F86  241D               	addwf	write_string@string,w,c
  2969  001F88  6E1F               	movwf	??_write_string& (0+255),c
  2970  001F8A  5022               	movf	write_string@i+1,w,c
  2971  001F8C  201E               	addwfc	write_string@string+1,w,c
  2972  001F8E  6E20               	movwf	(??_write_string+1)& (0+255),c
  2973  001F90  C01F  FFF6         	movff	??_write_string,tblptrl
  2974  001F94  C020  FFF7         	movff	??_write_string+1,tblptrh
  2975  001F98  6AF8               	clrf	tblptru,c
  2976  001F9A  0E07               	movlw	(high __ramtop+-1)
  2977  001F9C  64F7               	cpfsgt	tblptrh,c
  2978  001F9E  D003               	bra	u2247
  2979  001FA0  0008               	tblrd		*
  2980  001FA2  50F5               	movf	tablat,w,c
  2981  001FA4  D005               	bra	u2240
  2982  001FA6                     u2247:
  2983  001FA6  CFF6 FFE1          	movff	tblptrl,fsr1l
  2984  001FAA  CFF7 FFE2          	movff	tblptrh,fsr1h
  2985  001FAE  50E7               	movf	indf1,w,c
  2986  001FB0                     u2240:
  2987  001FB0  0900               	iorlw	0
  2988  001FB2  B4D8               	btfsc	status,2,c
  2989  001FB4  0012               	return	
  2990  001FB6  D7CC               	goto	l124
  2991  001FB8                     __end_of_write_string:
  2992                           	opt stack 0
  2993                           tblptru	equ	0xFF8
  2994                           tblptrh	equ	0xFF7
  2995                           tblptrl	equ	0xFF6
  2996                           tablat	equ	0xFF5
  2997                           intcon	equ	0xFF2
  2998                           intcon2	equ	0xFF1
  2999                           intcon3	equ	0xFF0
  3000                           postinc0	equ	0xFEE
  3001                           wreg	equ	0xFE8
  3002                           indf1	equ	0xFE7
  3003                           postdec1	equ	0xFE5
  3004                           fsr1h	equ	0xFE2
  3005                           fsr1l	equ	0xFE1
  3006                           postinc2	equ	0xFDE
  3007                           postdec2	equ	0xFDD
  3008                           fsr2h	equ	0xFDA
  3009                           fsr2l	equ	0xFD9
  3010                           status	equ	0xFD8
  3011                           
  3012 ;; *************** function _vel_med *****************
  3013 ;; Defined at:
  3014 ;;		line 448 in file "main.c"
  3015 ;; Parameters:    Size  Location     Type
  3016 ;;		None
  3017 ;; Auto vars:     Size  Location     Type
  3018 ;;  i               2   54[COMRAM] int 
  3019 ;; Return value:  Size  Location     Type
  3020 ;;                  1    wreg      void 
  3021 ;; Registers used:
  3022 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3023 ;; Tracked objects:
  3024 ;;		On entry : 0/0
  3025 ;;		On exit  : 0/0
  3026 ;;		Unchanged: 0/0
  3027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3028 ;;      Params:         0       0       0       0       0       0       0       0       0
  3029 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3030 ;;      Temps:          0       6       0       0       0       0       0       0       0
  3031 ;;      Totals:         2       6       0       0       0       0       0       0       0
  3032 ;;Total ram usage:        8 bytes
  3033 ;; Hardware stack levels used:    1
  3034 ;; Hardware stack levels required when called:    3
  3035 ;; This function calls:
  3036 ;;		___ftdiv
  3037 ;;		___fttol
  3038 ;;		___lldiv
  3039 ;;		___lltoft
  3040 ;;		___lmul
  3041 ;; This function is called by:
  3042 ;;		_data_tmr
  3043 ;; This function uses a non-reentrant model
  3044 ;;
  3045                           
  3046                           	psect	text16
  3047  001066                     __ptext16:
  3048                           	opt stack 0
  3049  001066                     _vel_med:
  3050                           	opt stack 25
  3051                           
  3052                           ;main.c: 449: int i;
  3053                           ;main.c: 450: for (i=1;i<4;i++) {
  3054                           
  3055                           ;incstack = 0
  3056  001066  0E00               	movlw	0
  3057  001068  6E38               	movwf	vel_med@i+1,c
  3058  00106A  0E01               	movlw	1
  3059  00106C  6E37               	movwf	vel_med@i,c
  3060  00106E  BE38               	btfsc	vel_med@i+1,7,c
  3061  001070  D008               	goto	l172
  3062  001072  5038               	movf	vel_med@i+1,w,c
  3063  001074  E105               	bnz	u2280
  3064  001076  0E04               	movlw	4
  3065  001078  5C37               	subwf	vel_med@i,w,c
  3066  00107A  B0D8               	btfsc	status,0,c
  3067  00107C  D121               	goto	u2300
  3068  00107E  D001               	goto	l172
  3069  001080                     u2280:
  3070  001080  D11F               	goto	u2300
  3071  001082                     l172:
  3072                           
  3073                           ;main.c: 451: if (i == 3) {
  3074  001082  0E03               	movlw	3
  3075  001084  1837               	xorwf	vel_med@i,w,c
  3076  001086  1038               	iorwf	vel_med@i+1,w,c
  3077  001088  A4D8               	btfss	status,2,c
  3078  00108A  D07C               	goto	l174
  3079                           
  3080                           ;main.c: 452: vel_data[i] = 100000000000/(float)time_data[i+1];
  3081  00108C  C037  F0BD         	movff	vel_med@i,??_vel_med
  3082  001090  C038  F0BE         	movff	vel_med@i+1,??_vel_med+1
  3083  001094  0100               	movlb	0	; () banked
  3084  001096  90D8               	bcf	status,0,c
  3085  001098  37BD               	rlcf	??_vel_med& (0+255),f,b
  3086  00109A  37BE               	rlcf	(??_vel_med+1)& (0+255),f,b
  3087  00109C  0100               	movlb	0	; () banked
  3088  00109E  90D8               	bcf	status,0,c
  3089  0010A0  37BD               	rlcf	??_vel_med& (0+255),f,b
  3090  0010A2  37BE               	rlcf	(??_vel_med+1)& (0+255),f,b
  3091  0010A4  0E04               	movlw	4
  3092  0010A6  0100               	movlb	0	; () banked
  3093  0010A8  27BD               	addwf	??_vel_med& (0+255),f,b
  3094  0010AA  0E00               	movlw	0
  3095  0010AC  23BE               	addwfc	(??_vel_med+1)& (0+255),f,b
  3096  0010AE  0E8E               	movlw	low _time_data
  3097  0010B0  0100               	movlb	0	; () banked
  3098  0010B2  25BD               	addwf	??_vel_med& (0+255),w,b
  3099  0010B4  6ED9               	movwf	fsr2l,c
  3100  0010B6  0E00               	movlw	high _time_data
  3101  0010B8  0100               	movlb	0	; () banked
  3102  0010BA  21BE               	addwfc	(??_vel_med+1)& (0+255),w,b
  3103  0010BC  6EDA               	movwf	fsr2h,c
  3104  0010BE  CFDE F01B          	movff	postinc2,___lltoft@c
  3105  0010C2  CFDE F01C          	movff	postinc2,___lltoft@c+1
  3106  0010C6  CFDE F01D          	movff	postinc2,___lltoft@c+2
  3107  0010CA  CFDE F01E          	movff	postinc2,___lltoft@c+3
  3108  0010CE  EC44  F010         	call	___lltoft	;wreg free
  3109  0010D2  C01B  F027         	movff	?___lltoft,___ftdiv@f2
  3110  0010D6  C01C  F028         	movff	?___lltoft+1,___ftdiv@f2+1
  3111  0010DA  C01D  F029         	movff	?___lltoft+2,___ftdiv@f2+2
  3112  0010DE  0EEE               	movlw	238
  3113  0010E0  6E24               	movwf	___ftdiv@f1,c
  3114  0010E2  0E90               	movlw	144
  3115  0010E4  6E25               	movwf	___ftdiv@f1+1,c
  3116  0010E6  0E4E               	movlw	78
  3117  0010E8  6E26               	movwf	___ftdiv@f1+2,c
  3118  0010EA  EC3E  F00C         	call	___ftdiv	;wreg free
  3119  0010EE  C024  F033         	movff	?___ftdiv,___fttol@f1
  3120  0010F2  C025  F034         	movff	?___ftdiv+1,___fttol@f1+1
  3121  0010F6  C026  F035         	movff	?___ftdiv+2,___fttol@f1+2
  3122  0010FA  EC2D  F00B         	call	___fttol	;wreg free
  3123  0010FE  0EA2               	movlw	low _vel_data
  3124  001100  0100               	movlb	0	; () banked
  3125  001102  6FBF               	movwf	(??_vel_med+2)& (0+255),b
  3126  001104  0E00               	movlw	high _vel_data
  3127  001106  0100               	movlb	0	; () banked
  3128  001108  6FC0               	movwf	(??_vel_med+3)& (0+255),b
  3129  00110A  90D8               	bcf	status,0,c
  3130  00110C  3437               	rlcf	vel_med@i,w,c
  3131  00110E  6ED9               	movwf	fsr2l,c
  3132  001110  3438               	rlcf	vel_med@i+1,w,c
  3133  001112  6EDA               	movwf	fsr2h,c
  3134  001114  90D8               	bcf	status,0,c
  3135  001116  36D9               	rlcf	fsr2l,f,c
  3136  001118  36DA               	rlcf	fsr2h,f,c
  3137  00111A  0100               	movlb	0	; () banked
  3138  00111C  51BF               	movf	(??_vel_med+2)& (0+255),w,b
  3139  00111E  26D9               	addwf	fsr2l,f,c
  3140  001120  0100               	movlb	0	; () banked
  3141  001122  51C0               	movf	(??_vel_med+3)& (0+255),w,b
  3142  001124  22DA               	addwfc	fsr2h,f,c
  3143  001126  C033  FFDE         	movff	?___fttol,postinc2
  3144  00112A  C034  FFDE         	movff	?___fttol+1,postinc2
  3145  00112E  C035  FFDE         	movff	?___fttol+2,postinc2
  3146  001132  C036  FFDE         	movff	?___fttol+3,postinc2
  3147                           
  3148                           ;main.c: 453: vel_data[i] = 200*vel_data[i];
  3149  001136  0EA2               	movlw	low _vel_data
  3150  001138  0100               	movlb	0	; () banked
  3151  00113A  6FBD               	movwf	??_vel_med& (0+255),b
  3152  00113C  0E00               	movlw	high _vel_data
  3153  00113E  0100               	movlb	0	; () banked
  3154  001140  6FBE               	movwf	(??_vel_med+1)& (0+255),b
  3155  001142  90D8               	bcf	status,0,c
  3156  001144  3437               	rlcf	vel_med@i,w,c
  3157  001146  6ED9               	movwf	fsr2l,c
  3158  001148  3438               	rlcf	vel_med@i+1,w,c
  3159  00114A  6EDA               	movwf	fsr2h,c
  3160  00114C  90D8               	bcf	status,0,c
  3161  00114E  36D9               	rlcf	fsr2l,f,c
  3162  001150  36DA               	rlcf	fsr2h,f,c
  3163  001152  0100               	movlb	0	; () banked
  3164  001154  51BD               	movf	??_vel_med& (0+255),w,b
  3165  001156  26D9               	addwf	fsr2l,f,c
  3166  001158  0100               	movlb	0	; () banked
  3167  00115A  51BE               	movf	(??_vel_med+1)& (0+255),w,b
  3168  00115C  22DA               	addwfc	fsr2h,f,c
  3169  00115E  CFDE F013          	movff	postinc2,___lmul@multiplier
  3170  001162  CFDE F014          	movff	postinc2,___lmul@multiplier+1
  3171  001166  CFDE F015          	movff	postinc2,___lmul@multiplier+2
  3172  00116A  CFDE F016          	movff	postinc2,___lmul@multiplier+3
  3173  00116E  0EC8               	movlw	200
  3174  001170  6E17               	movwf	___lmul@multiplicand,c
  3175  001172  0E00               	movlw	0
  3176  001174  6E18               	movwf	___lmul@multiplicand+1,c
  3177  001176  0E00               	movlw	0
  3178  001178  6E19               	movwf	___lmul@multiplicand+2,c
  3179  00117A  0E00               	movlw	0
  3180  00117C  6E1A               	movwf	___lmul@multiplicand+3,c
  3181  00117E  EC9D  F010         	call	___lmul	;wreg free
  3182  001182  D07B               	goto	L2
  3183  001184                     l174:
  3184                           
  3185                           ;main.c: 455: else {
  3186                           ;main.c: 456: vel_data[i] = 100000000000/(float)time_data[i+1];
  3187                           
  3188                           ; BSR set to: 0
  3189  001184  C037  F0BD         	movff	vel_med@i,??_vel_med
  3190  001188  C038  F0BE         	movff	vel_med@i+1,??_vel_med+1
  3191  00118C  0100               	movlb	0	; () banked
  3192  00118E  90D8               	bcf	status,0,c
  3193  001190  37BD               	rlcf	??_vel_med& (0+255),f,b
  3194  001192  37BE               	rlcf	(??_vel_med+1)& (0+255),f,b
  3195  001194  0100               	movlb	0	; () banked
  3196  001196  90D8               	bcf	status,0,c
  3197  001198  37BD               	rlcf	??_vel_med& (0+255),f,b
  3198  00119A  37BE               	rlcf	(??_vel_med+1)& (0+255),f,b
  3199  00119C  0E04               	movlw	4
  3200  00119E  0100               	movlb	0	; () banked
  3201  0011A0  27BD               	addwf	??_vel_med& (0+255),f,b
  3202  0011A2  0E00               	movlw	0
  3203  0011A4  23BE               	addwfc	(??_vel_med+1)& (0+255),f,b
  3204  0011A6  0E8E               	movlw	low _time_data
  3205  0011A8  0100               	movlb	0	; () banked
  3206  0011AA  25BD               	addwf	??_vel_med& (0+255),w,b
  3207  0011AC  6ED9               	movwf	fsr2l,c
  3208  0011AE  0E00               	movlw	high _time_data
  3209  0011B0  0100               	movlb	0	; () banked
  3210  0011B2  21BE               	addwfc	(??_vel_med+1)& (0+255),w,b
  3211  0011B4  6EDA               	movwf	fsr2h,c
  3212  0011B6  CFDE F01B          	movff	postinc2,___lltoft@c
  3213  0011BA  CFDE F01C          	movff	postinc2,___lltoft@c+1
  3214  0011BE  CFDE F01D          	movff	postinc2,___lltoft@c+2
  3215  0011C2  CFDE F01E          	movff	postinc2,___lltoft@c+3
  3216  0011C6  EC44  F010         	call	___lltoft	;wreg free
  3217  0011CA  C01B  F027         	movff	?___lltoft,___ftdiv@f2
  3218  0011CE  C01C  F028         	movff	?___lltoft+1,___ftdiv@f2+1
  3219  0011D2  C01D  F029         	movff	?___lltoft+2,___ftdiv@f2+2
  3220  0011D6  0EEE               	movlw	238
  3221  0011D8  6E24               	movwf	___ftdiv@f1,c
  3222  0011DA  0E90               	movlw	144
  3223  0011DC  6E25               	movwf	___ftdiv@f1+1,c
  3224  0011DE  0E4E               	movlw	78
  3225  0011E0  6E26               	movwf	___ftdiv@f1+2,c
  3226  0011E2  EC3E  F00C         	call	___ftdiv	;wreg free
  3227  0011E6  C024  F033         	movff	?___ftdiv,___fttol@f1
  3228  0011EA  C025  F034         	movff	?___ftdiv+1,___fttol@f1+1
  3229  0011EE  C026  F035         	movff	?___ftdiv+2,___fttol@f1+2
  3230  0011F2  EC2D  F00B         	call	___fttol	;wreg free
  3231  0011F6  0EA2               	movlw	low _vel_data
  3232  0011F8  0100               	movlb	0	; () banked
  3233  0011FA  6FBF               	movwf	(??_vel_med+2)& (0+255),b
  3234  0011FC  0E00               	movlw	high _vel_data
  3235  0011FE  0100               	movlb	0	; () banked
  3236  001200  6FC0               	movwf	(??_vel_med+3)& (0+255),b
  3237  001202  90D8               	bcf	status,0,c
  3238  001204  3437               	rlcf	vel_med@i,w,c
  3239  001206  6ED9               	movwf	fsr2l,c
  3240  001208  3438               	rlcf	vel_med@i+1,w,c
  3241  00120A  6EDA               	movwf	fsr2h,c
  3242  00120C  90D8               	bcf	status,0,c
  3243  00120E  36D9               	rlcf	fsr2l,f,c
  3244  001210  36DA               	rlcf	fsr2h,f,c
  3245  001212  0100               	movlb	0	; () banked
  3246  001214  51BF               	movf	(??_vel_med+2)& (0+255),w,b
  3247  001216  26D9               	addwf	fsr2l,f,c
  3248  001218  0100               	movlb	0	; () banked
  3249  00121A  51C0               	movf	(??_vel_med+3)& (0+255),w,b
  3250  00121C  22DA               	addwfc	fsr2h,f,c
  3251  00121E  C033  FFDE         	movff	?___fttol,postinc2
  3252  001222  C034  FFDE         	movff	?___fttol+1,postinc2
  3253  001226  C035  FFDE         	movff	?___fttol+2,postinc2
  3254  00122A  C036  FFDE         	movff	?___fttol+3,postinc2
  3255                           
  3256                           ;main.c: 457: vel_data[i] = 100*vel_data[i];
  3257  00122E  0EA2               	movlw	low _vel_data
  3258  001230  0100               	movlb	0	; () banked
  3259  001232  6FBD               	movwf	??_vel_med& (0+255),b
  3260  001234  0E00               	movlw	high _vel_data
  3261  001236  0100               	movlb	0	; () banked
  3262  001238  6FBE               	movwf	(??_vel_med+1)& (0+255),b
  3263  00123A  90D8               	bcf	status,0,c
  3264  00123C  3437               	rlcf	vel_med@i,w,c
  3265  00123E  6ED9               	movwf	fsr2l,c
  3266  001240  3438               	rlcf	vel_med@i+1,w,c
  3267  001242  6EDA               	movwf	fsr2h,c
  3268  001244  90D8               	bcf	status,0,c
  3269  001246  36D9               	rlcf	fsr2l,f,c
  3270  001248  36DA               	rlcf	fsr2h,f,c
  3271  00124A  0100               	movlb	0	; () banked
  3272  00124C  51BD               	movf	??_vel_med& (0+255),w,b
  3273  00124E  26D9               	addwf	fsr2l,f,c
  3274  001250  0100               	movlb	0	; () banked
  3275  001252  51BE               	movf	(??_vel_med+1)& (0+255),w,b
  3276  001254  22DA               	addwfc	fsr2h,f,c
  3277  001256  CFDE F013          	movff	postinc2,___lmul@multiplier
  3278  00125A  CFDE F014          	movff	postinc2,___lmul@multiplier+1
  3279  00125E  CFDE F015          	movff	postinc2,___lmul@multiplier+2
  3280  001262  CFDE F016          	movff	postinc2,___lmul@multiplier+3
  3281  001266  0E64               	movlw	100
  3282  001268  6E17               	movwf	___lmul@multiplicand,c
  3283  00126A  0E00               	movlw	0
  3284  00126C  6E18               	movwf	___lmul@multiplicand+1,c
  3285  00126E  0E00               	movlw	0
  3286  001270  6E19               	movwf	___lmul@multiplicand+2,c
  3287  001272  0E00               	movlw	0
  3288  001274  6E1A               	movwf	___lmul@multiplicand+3,c
  3289  001276  EC9D  F010         	call	___lmul	;wreg free
  3290  00127A                     L2:
  3291  00127A  0EA2               	movlw	low _vel_data
  3292  00127C  0100               	movlb	0	; () banked
  3293  00127E  6FBF               	movwf	(??_vel_med+2)& (0+255),b
  3294  001280  0E00               	movlw	high _vel_data
  3295  001282  0100               	movlb	0	; () banked
  3296  001284  6FC0               	movwf	(??_vel_med+3)& (0+255),b
  3297  001286  90D8               	bcf	status,0,c
  3298  001288  3437               	rlcf	vel_med@i,w,c
  3299  00128A  6ED9               	movwf	fsr2l,c
  3300  00128C  3438               	rlcf	vel_med@i+1,w,c
  3301  00128E  6EDA               	movwf	fsr2h,c
  3302  001290  90D8               	bcf	status,0,c
  3303  001292  36D9               	rlcf	fsr2l,f,c
  3304  001294  36DA               	rlcf	fsr2h,f,c
  3305  001296  0100               	movlb	0	; () banked
  3306  001298  51BF               	movf	(??_vel_med+2)& (0+255),w,b
  3307  00129A  26D9               	addwf	fsr2l,f,c
  3308  00129C  0100               	movlb	0	; () banked
  3309  00129E  51C0               	movf	(??_vel_med+3)& (0+255),w,b
  3310  0012A0  22DA               	addwfc	fsr2h,f,c
  3311  0012A2  C013  FFDE         	movff	?___lmul,postinc2
  3312  0012A6  C014  FFDE         	movff	?___lmul+1,postinc2
  3313  0012AA  C015  FFDE         	movff	?___lmul+2,postinc2
  3314  0012AE  C016  FFDE         	movff	?___lmul+3,postinc2
  3315                           
  3316                           ; BSR set to: 0
  3317                           
  3318                           ; BSR set to: 0
  3319  0012B2  4A37               	infsnz	vel_med@i,f,c
  3320  0012B4  2A38               	incf	vel_med@i+1,f,c
  3321                           
  3322                           ; BSR set to: 0
  3323  0012B6  BE38               	btfsc	vel_med@i+1,7,c
  3324  0012B8  D6E4               	goto	l172
  3325  0012BA  5038               	movf	vel_med@i+1,w,c
  3326  0012BC  E101               	bnz	l2474
  3327  0012BE  D6DB               	goto	L3
  3328  0012C0                     u2300:
  3329  0012C0                     l2474:
  3330                           
  3331                           ;main.c: 458: }
  3332                           ;main.c: 459: }
  3333                           ;main.c: 460: for (i=1;i<4;i++) {
  3334  0012C0  0E00               	movlw	0
  3335  0012C2  6E38               	movwf	vel_med@i+1,c
  3336  0012C4  0E01               	movlw	1
  3337  0012C6  6E37               	movwf	vel_med@i,c
  3338  0012C8                     l2476:
  3339  0012C8  BE38               	btfsc	vel_med@i+1,7,c
  3340  0012CA  D006               	goto	l176
  3341  0012CC  5038               	movf	vel_med@i+1,w,c
  3342  0012CE  E13B               	bnz	l2486
  3343  0012D0  0E04               	movlw	4
  3344  0012D2  5C37               	subwf	vel_med@i,w,c
  3345  0012D4  B0D8               	btfsc	status,0,c
  3346  0012D6  D037               	goto	u2320
  3347  0012D8                     l176:
  3348                           
  3349                           ;main.c: 461: vel_tot = vel_tot + vel_data[i];
  3350  0012D8  0EA2               	movlw	low _vel_data
  3351  0012DA  0100               	movlb	0	; () banked
  3352  0012DC  6FBD               	movwf	??_vel_med& (0+255),b
  3353  0012DE  0E00               	movlw	high _vel_data
  3354  0012E0  0100               	movlb	0	; () banked
  3355  0012E2  6FBE               	movwf	(??_vel_med+1)& (0+255),b
  3356  0012E4  90D8               	bcf	status,0,c
  3357  0012E6  3437               	rlcf	vel_med@i,w,c
  3358  0012E8  6ED9               	movwf	fsr2l,c
  3359  0012EA  3438               	rlcf	vel_med@i+1,w,c
  3360  0012EC  6EDA               	movwf	fsr2h,c
  3361  0012EE  90D8               	bcf	status,0,c
  3362  0012F0  36D9               	rlcf	fsr2l,f,c
  3363  0012F2  36DA               	rlcf	fsr2h,f,c
  3364  0012F4  0100               	movlb	0	; () banked
  3365  0012F6  51BD               	movf	??_vel_med& (0+255),w,b
  3366  0012F8  26D9               	addwf	fsr2l,f,c
  3367  0012FA  0100               	movlb	0	; () banked
  3368  0012FC  51BE               	movf	(??_vel_med+1)& (0+255),w,b
  3369  0012FE  22DA               	addwfc	fsr2h,f,c
  3370  001300  CFDE F0BF          	movff	postinc2,??_vel_med+2
  3371  001304  CFDE F0C0          	movff	postinc2,??_vel_med+3
  3372  001308  CFDE F0C1          	movff	postinc2,??_vel_med+4
  3373  00130C  CFDE F0C2          	movff	postinc2,??_vel_med+5
  3374  001310  0100               	movlb	0	; () banked
  3375  001312  5170               	movf	_vel_tot& (0+255),w,b
  3376  001314  0100               	movlb	0	; () banked
  3377  001316  25BF               	addwf	(??_vel_med+2)& (0+255),w,b
  3378  001318  0100               	movlb	0	; () banked
  3379  00131A  6F70               	movwf	_vel_tot& (0+255),b
  3380  00131C  0100               	movlb	0	; () banked
  3381  00131E  5171               	movf	(_vel_tot+1)& (0+255),w,b
  3382  001320  0100               	movlb	0	; () banked
  3383  001322  21C0               	addwfc	(??_vel_med+3)& (0+255),w,b
  3384  001324  0100               	movlb	0	; () banked
  3385  001326  6F71               	movwf	(_vel_tot+1)& (0+255),b
  3386  001328  0100               	movlb	0	; () banked
  3387  00132A  5172               	movf	(_vel_tot+2)& (0+255),w,b
  3388  00132C  0100               	movlb	0	; () banked
  3389  00132E  21C1               	addwfc	(??_vel_med+4)& (0+255),w,b
  3390  001330  0100               	movlb	0	; () banked
  3391  001332  6F72               	movwf	(_vel_tot+2)& (0+255),b
  3392  001334  0100               	movlb	0	; () banked
  3393  001336  5173               	movf	(_vel_tot+3)& (0+255),w,b
  3394  001338  0100               	movlb	0	; () banked
  3395  00133A  21C2               	addwfc	(??_vel_med+5)& (0+255),w,b
  3396  00133C  0100               	movlb	0	; () banked
  3397  00133E  6F73               	movwf	(_vel_tot+3)& (0+255),b
  3398                           
  3399                           ; BSR set to: 0
  3400  001340  4A37               	infsnz	vel_med@i,f,c
  3401  001342  2A38               	incf	vel_med@i+1,f,c
  3402  001344  D7C1               	goto	l2476
  3403  001346                     u2320:
  3404  001346                     l2486:
  3405                           
  3406                           ;main.c: 462: }
  3407                           ;main.c: 463: velocidade_med = vel_tot/3;
  3408  001346  C070  F01C         	movff	_vel_tot,___lldiv@dividend
  3409  00134A  C071  F01D         	movff	_vel_tot+1,___lldiv@dividend+1
  3410  00134E  C072  F01E         	movff	_vel_tot+2,___lldiv@dividend+2
  3411  001352  C073  F01F         	movff	_vel_tot+3,___lldiv@dividend+3
  3412  001356  0E03               	movlw	3
  3413  001358  6E20               	movwf	___lldiv@divisor,c
  3414  00135A  0E00               	movlw	0
  3415  00135C  6E21               	movwf	___lldiv@divisor+1,c
  3416  00135E  0E00               	movlw	0
  3417  001360  6E22               	movwf	___lldiv@divisor+2,c
  3418  001362  0E00               	movlw	0
  3419  001364  6E23               	movwf	___lldiv@divisor+3,c
  3420  001366  ECA3  F00E         	call	___lldiv	;wreg free
  3421  00136A  C01C  F074         	movff	?___lldiv,_velocidade_med
  3422  00136E  C01D  F075         	movff	?___lldiv+1,_velocidade_med+1
  3423  001372  C01E  F076         	movff	?___lldiv+2,_velocidade_med+2
  3424  001376  C01F  F077         	movff	?___lldiv+3,_velocidade_med+3
  3425  00137A  0012               	return		;funcret
  3426  00137C                     __end_of_vel_med:
  3427                           	opt stack 0
  3428                           tblptru	equ	0xFF8
  3429                           tblptrh	equ	0xFF7
  3430                           tblptrl	equ	0xFF6
  3431                           tablat	equ	0xFF5
  3432                           intcon	equ	0xFF2
  3433                           intcon2	equ	0xFF1
  3434                           intcon3	equ	0xFF0
  3435                           postinc0	equ	0xFEE
  3436                           wreg	equ	0xFE8
  3437                           indf1	equ	0xFE7
  3438                           postdec1	equ	0xFE5
  3439                           fsr1h	equ	0xFE2
  3440                           fsr1l	equ	0xFE1
  3441                           postinc2	equ	0xFDE
  3442                           postdec2	equ	0xFDD
  3443                           fsr2h	equ	0xFDA
  3444                           fsr2l	equ	0xFD9
  3445                           status	equ	0xFD8
  3446                           
  3447 ;; *************** function _jump_line *****************
  3448 ;; Defined at:
  3449 ;;		line 318 in file "main.c"
  3450 ;; Parameters:    Size  Location     Type
  3451 ;;		None
  3452 ;; Auto vars:     Size  Location     Type
  3453 ;;		None
  3454 ;; Return value:  Size  Location     Type
  3455 ;;                  1    wreg      void 
  3456 ;; Registers used:
  3457 ;;		wreg, status,2, cstack
  3458 ;; Tracked objects:
  3459 ;;		On entry : 0/0
  3460 ;;		On exit  : 0/0
  3461 ;;		Unchanged: 0/0
  3462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3463 ;;      Params:         0       0       0       0       0       0       0       0       0
  3464 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3465 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3466 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3467 ;;Total ram usage:        0 bytes
  3468 ;; Hardware stack levels used:    1
  3469 ;; Hardware stack levels required when called:    3
  3470 ;; This function calls:
  3471 ;;		_set_inst
  3472 ;; This function is called by:
  3473 ;;		_msg_init
  3474 ;;		_data_tmr
  3475 ;;		_main
  3476 ;; This function uses a non-reentrant model
  3477 ;;
  3478                           
  3479                           	psect	text17
  3480  00228A                     __ptext17:
  3481                           	opt stack 0
  3482  00228A                     _jump_line:
  3483                           	opt stack 26
  3484                           
  3485                           ;main.c: 319: set_inst(1,1,0,0,0,0,0,0);
  3486                           
  3487                           ;incstack = 0
  3488  00228A  0E01               	movlw	1
  3489  00228C  6E13               	movwf	set_inst@b,c
  3490  00228E  0E00               	movlw	0
  3491  002290  6E14               	movwf	set_inst@c,c
  3492  002292  0E00               	movlw	0
  3493  002294  6E15               	movwf	set_inst@d,c
  3494  002296  0E00               	movlw	0
  3495  002298  6E16               	movwf	set_inst@e,c
  3496  00229A  0E00               	movlw	0
  3497  00229C  6E17               	movwf	set_inst@f,c
  3498  00229E  0E00               	movlw	0
  3499  0022A0  6E18               	movwf	set_inst@g,c
  3500  0022A2  0E00               	movlw	0
  3501  0022A4  6E19               	movwf	set_inst@h,c
  3502  0022A6  0E01               	movlw	1
  3503  0022A8  ECDC  F00F         	call	_set_inst
  3504  0022AC  0012               	return		;funcret
  3505  0022AE                     __end_of_jump_line:
  3506                           	opt stack 0
  3507                           tblptru	equ	0xFF8
  3508                           tblptrh	equ	0xFF7
  3509                           tblptrl	equ	0xFF6
  3510                           tablat	equ	0xFF5
  3511                           intcon	equ	0xFF2
  3512                           intcon2	equ	0xFF1
  3513                           intcon3	equ	0xFF0
  3514                           postinc0	equ	0xFEE
  3515                           wreg	equ	0xFE8
  3516                           indf1	equ	0xFE7
  3517                           postdec1	equ	0xFE5
  3518                           fsr1h	equ	0xFE2
  3519                           fsr1l	equ	0xFE1
  3520                           postinc2	equ	0xFDE
  3521                           postdec2	equ	0xFDD
  3522                           fsr2h	equ	0xFDA
  3523                           fsr2l	equ	0xFD9
  3524                           status	equ	0xFD8
  3525                           
  3526 ;; *************** function _set_inst *****************
  3527 ;; Defined at:
  3528 ;;		line 261 in file "main.c"
  3529 ;; Parameters:    Size  Location     Type
  3530 ;;  a               1    wreg     unsigned char 
  3531 ;;  b               1   18[COMRAM] unsigned char 
  3532 ;;  c               1   19[COMRAM] unsigned char 
  3533 ;;  d               1   20[COMRAM] unsigned char 
  3534 ;;  e               1   21[COMRAM] unsigned char 
  3535 ;;  f               1   22[COMRAM] unsigned char 
  3536 ;;  g               1   23[COMRAM] unsigned char 
  3537 ;;  h               1   24[COMRAM] unsigned char 
  3538 ;; Auto vars:     Size  Location     Type
  3539 ;;  a               1   25[COMRAM] unsigned char 
  3540 ;; Return value:  Size  Location     Type
  3541 ;;                  1    wreg      void 
  3542 ;; Registers used:
  3543 ;;		wreg, cstack
  3544 ;; Tracked objects:
  3545 ;;		On entry : 0/0
  3546 ;;		On exit  : 0/0
  3547 ;;		Unchanged: 0/0
  3548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3549 ;;      Params:         7       0       0       0       0       0       0       0       0
  3550 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3551 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3552 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3553 ;;Total ram usage:        8 bytes
  3554 ;; Hardware stack levels used:    1
  3555 ;; Hardware stack levels required when called:    2
  3556 ;; This function calls:
  3557 ;;		_pulse
  3558 ;; This function is called by:
  3559 ;;		_config_lcd
  3560 ;;		_jump_line
  3561 ;;		_clear_scr
  3562 ;; This function uses a non-reentrant model
  3563 ;;
  3564                           
  3565                           	psect	text18
  3566  001FB8                     __ptext18:
  3567                           	opt stack 0
  3568  001FB8                     _set_inst:
  3569                           	opt stack 26
  3570                           
  3571                           ;incstack = 0
  3572                           ;set_inst@a stored from wreg
  3573  001FB8  6E1A               	movwf	set_inst@a,c
  3574                           
  3575                           ;main.c: 262: LATCbits.LATC2 = 0;
  3576  001FBA  948B               	bcf	3979,2,c	;volatile
  3577                           
  3578                           ;main.c: 263: _delay((unsigned long)((100)*(1000000/4000000.0)));
  3579  001FBC  0E08               	movlw	8
  3580  001FBE                     u2647:
  3581  001FBE  2EE8               	decfsz	wreg,f,c
  3582  001FC0  D7FE               	bra	u2647
  3583  001FC2  F000               	nop	
  3584                           
  3585                           ;main.c: 264: LATAbits.LATA1=a;
  3586  001FC4  B01A               	btfsc	set_inst@a,0,c
  3587  001FC6  D002               	bra	u1915
  3588  001FC8  9289               	bcf	3977,1,c	;volatile
  3589  001FCA  D001               	bra	u1916
  3590  001FCC                     u1915:
  3591  001FCC  8289               	bsf	3977,1,c	;volatile
  3592  001FCE                     u1916:
  3593                           
  3594                           ;main.c: 265: LATAbits.LATA2=b;
  3595  001FCE  B013               	btfsc	set_inst@b,0,c
  3596  001FD0  D002               	bra	u1925
  3597  001FD2  9489               	bcf	3977,2,c	;volatile
  3598  001FD4  D001               	bra	u1926
  3599  001FD6                     u1925:
  3600  001FD6  8489               	bsf	3977,2,c	;volatile
  3601  001FD8                     u1926:
  3602                           
  3603                           ;main.c: 266: LATAbits.LATA3=c;
  3604  001FD8  B014               	btfsc	set_inst@c,0,c
  3605  001FDA  D002               	bra	u1935
  3606  001FDC  9689               	bcf	3977,3,c	;volatile
  3607  001FDE  D001               	bra	u1936
  3608  001FE0                     u1935:
  3609  001FE0  8689               	bsf	3977,3,c	;volatile
  3610  001FE2                     u1936:
  3611                           
  3612                           ;main.c: 267: LATAbits.LATA4=d;
  3613  001FE2  B015               	btfsc	set_inst@d,0,c
  3614  001FE4  D002               	bra	u1945
  3615  001FE6  9889               	bcf	3977,4,c	;volatile
  3616  001FE8  D001               	bra	u1946
  3617  001FEA                     u1945:
  3618  001FEA  8889               	bsf	3977,4,c	;volatile
  3619  001FEC                     u1946:
  3620                           
  3621                           ;main.c: 268: LATAbits.LATA5=e;
  3622  001FEC  B016               	btfsc	set_inst@e,0,c
  3623  001FEE  D002               	bra	u1955
  3624  001FF0  9A89               	bcf	3977,5,c	;volatile
  3625  001FF2  D001               	bra	u1956
  3626  001FF4                     u1955:
  3627  001FF4  8A89               	bsf	3977,5,c	;volatile
  3628  001FF6                     u1956:
  3629                           
  3630                           ;main.c: 269: LATEbits.LATE0=f;
  3631  001FF6  B017               	btfsc	set_inst@f,0,c
  3632  001FF8  D002               	bra	u1965
  3633  001FFA  908D               	bcf	3981,0,c	;volatile
  3634  001FFC  D001               	bra	u1966
  3635  001FFE                     u1965:
  3636  001FFE  808D               	bsf	3981,0,c	;volatile
  3637  002000                     u1966:
  3638                           
  3639                           ;main.c: 270: LATEbits.LATE1=g;
  3640  002000  B018               	btfsc	set_inst@g,0,c
  3641  002002  D002               	bra	u1975
  3642  002004  928D               	bcf	3981,1,c	;volatile
  3643  002006  D001               	bra	u1976
  3644  002008                     u1975:
  3645  002008  828D               	bsf	3981,1,c	;volatile
  3646  00200A                     u1976:
  3647                           
  3648                           ;main.c: 271: LATEbits.LATE2=h;
  3649  00200A  B019               	btfsc	set_inst@h,0,c
  3650  00200C  D002               	bra	u1985
  3651  00200E  948D               	bcf	3981,2,c	;volatile
  3652  002010  D001               	bra	u1986
  3653  002012                     u1985:
  3654  002012  848D               	bsf	3981,2,c	;volatile
  3655  002014                     u1986:
  3656                           
  3657                           ;main.c: 272: _delay((unsigned long)((5)*(1000000/4000.0)));
  3658  002014  0EFA               	movlw	250
  3659  002016                     u2657:
  3660  002016  D000               	nop2	
  3661  002018  2EE8               	decfsz	wreg,f,c
  3662  00201A  D7FD               	bra	u2657
  3663                           
  3664                           ;main.c: 273: pulse();
  3665  00201C  EC57  F011         	call	_pulse	;wreg free
  3666  002020  0012               	return		;funcret
  3667  002022                     __end_of_set_inst:
  3668                           	opt stack 0
  3669                           tblptru	equ	0xFF8
  3670                           tblptrh	equ	0xFF7
  3671                           tblptrl	equ	0xFF6
  3672                           tablat	equ	0xFF5
  3673                           intcon	equ	0xFF2
  3674                           intcon2	equ	0xFF1
  3675                           intcon3	equ	0xFF0
  3676                           postinc0	equ	0xFEE
  3677                           wreg	equ	0xFE8
  3678                           indf1	equ	0xFE7
  3679                           postdec1	equ	0xFE5
  3680                           fsr1h	equ	0xFE2
  3681                           fsr1l	equ	0xFE1
  3682                           postinc2	equ	0xFDE
  3683                           postdec2	equ	0xFDD
  3684                           fsr2h	equ	0xFDA
  3685                           fsr2l	equ	0xFD9
  3686                           status	equ	0xFD8
  3687                           
  3688 ;; *************** function _data_print *****************
  3689 ;; Defined at:
  3690 ;;		line 419 in file "main.c"
  3691 ;; Parameters:    Size  Location     Type
  3692 ;;  data            4   40[COMRAM] unsigned long 
  3693 ;; Auto vars:     Size  Location     Type
  3694 ;;  data0           4   44[BANK0 ] unsigned long 
  3695 ;;  data00          4   40[BANK0 ] unsigned long 
  3696 ;;  data7           4   36[BANK0 ] unsigned long 
  3697 ;;  data6           4   32[BANK0 ] unsigned long 
  3698 ;;  data5           4   28[BANK0 ] unsigned long 
  3699 ;;  data4           4   24[BANK0 ] unsigned long 
  3700 ;;  data3           4   20[BANK0 ] unsigned long 
  3701 ;;  data2           4   16[BANK0 ] unsigned long 
  3702 ;;  data1           4   12[BANK0 ] unsigned long 
  3703 ;;  data10          4    8[BANK0 ] unsigned long 
  3704 ;;  data9           4    4[BANK0 ] unsigned long 
  3705 ;;  data8           4    0[BANK0 ] unsigned long 
  3706 ;; Return value:  Size  Location     Type
  3707 ;;                  1    wreg      void 
  3708 ;; Registers used:
  3709 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3710 ;; Tracked objects:
  3711 ;;		On entry : 0/0
  3712 ;;		On exit  : 0/0
  3713 ;;		Unchanged: 0/0
  3714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3715 ;;      Params:         4       0       0       0       0       0       0       0       0
  3716 ;;      Locals:         0      48       0       0       0       0       0       0       0
  3717 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3718 ;;      Totals:         4      48       0       0       0       0       0       0       0
  3719 ;;Total ram usage:       52 bytes
  3720 ;; Hardware stack levels used:    1
  3721 ;; Hardware stack levels required when called:    3
  3722 ;; This function calls:
  3723 ;;		___lldiv
  3724 ;;		___llmod
  3725 ;;		_set_data
  3726 ;; This function is called by:
  3727 ;;		_data_tmr
  3728 ;; This function uses a non-reentrant model
  3729 ;;
  3730                           
  3731                           	psect	text19
  3732  000872                     __ptext19:
  3733                           	opt stack 0
  3734  000872                     _data_print:
  3735                           	opt stack 25
  3736                           
  3737                           ;main.c: 421: unsigned long data00=0,data0=0,data1=0,data2=0,data3=0,data4=0,data5=0,dat
      +                          a6=0,data7=0,data8=0,data9=0,data10=0;
  3738                           
  3739                           ;incstack = 0
  3740  000872  0E00               	movlw	0
  3741  000874  0100               	movlb	0	; () banked
  3742  000876  6FDA               	movwf	data_print@data00& (0+255),b
  3743  000878  0E00               	movlw	0
  3744  00087A  6FDB               	movwf	(data_print@data00+1)& (0+255),b
  3745  00087C  0E00               	movlw	0
  3746  00087E  6FDC               	movwf	(data_print@data00+2)& (0+255),b
  3747  000880  0E00               	movlw	0
  3748  000882  6FDD               	movwf	(data_print@data00+3)& (0+255),b
  3749  000884  0E00               	movlw	0
  3750  000886  0100               	movlb	0	; () banked
  3751  000888  6FDE               	movwf	data_print@data0& (0+255),b
  3752  00088A  0E00               	movlw	0
  3753  00088C  6FDF               	movwf	(data_print@data0+1)& (0+255),b
  3754  00088E  0E00               	movlw	0
  3755  000890  6FE0               	movwf	(data_print@data0+2)& (0+255),b
  3756  000892  0E00               	movlw	0
  3757  000894  6FE1               	movwf	(data_print@data0+3)& (0+255),b
  3758  000896  0E00               	movlw	0
  3759  000898  0100               	movlb	0	; () banked
  3760  00089A  6FBE               	movwf	data_print@data1& (0+255),b
  3761  00089C  0E00               	movlw	0
  3762  00089E  6FBF               	movwf	(data_print@data1+1)& (0+255),b
  3763  0008A0  0E00               	movlw	0
  3764  0008A2  6FC0               	movwf	(data_print@data1+2)& (0+255),b
  3765  0008A4  0E00               	movlw	0
  3766  0008A6  6FC1               	movwf	(data_print@data1+3)& (0+255),b
  3767  0008A8  0E00               	movlw	0
  3768  0008AA  0100               	movlb	0	; () banked
  3769  0008AC  6FC2               	movwf	data_print@data2& (0+255),b
  3770  0008AE  0E00               	movlw	0
  3771  0008B0  6FC3               	movwf	(data_print@data2+1)& (0+255),b
  3772  0008B2  0E00               	movlw	0
  3773  0008B4  6FC4               	movwf	(data_print@data2+2)& (0+255),b
  3774  0008B6  0E00               	movlw	0
  3775  0008B8  6FC5               	movwf	(data_print@data2+3)& (0+255),b
  3776  0008BA  0E00               	movlw	0
  3777  0008BC  0100               	movlb	0	; () banked
  3778  0008BE  6FC6               	movwf	data_print@data3& (0+255),b
  3779  0008C0  0E00               	movlw	0
  3780  0008C2  6FC7               	movwf	(data_print@data3+1)& (0+255),b
  3781  0008C4  0E00               	movlw	0
  3782  0008C6  6FC8               	movwf	(data_print@data3+2)& (0+255),b
  3783  0008C8  0E00               	movlw	0
  3784  0008CA  6FC9               	movwf	(data_print@data3+3)& (0+255),b
  3785  0008CC  0E00               	movlw	0
  3786  0008CE  0100               	movlb	0	; () banked
  3787  0008D0  6FCA               	movwf	data_print@data4& (0+255),b
  3788  0008D2  0E00               	movlw	0
  3789  0008D4  6FCB               	movwf	(data_print@data4+1)& (0+255),b
  3790  0008D6  0E00               	movlw	0
  3791  0008D8  6FCC               	movwf	(data_print@data4+2)& (0+255),b
  3792  0008DA  0E00               	movlw	0
  3793  0008DC  6FCD               	movwf	(data_print@data4+3)& (0+255),b
  3794  0008DE  0E00               	movlw	0
  3795  0008E0  0100               	movlb	0	; () banked
  3796  0008E2  6FCE               	movwf	data_print@data5& (0+255),b
  3797  0008E4  0E00               	movlw	0
  3798  0008E6  6FCF               	movwf	(data_print@data5+1)& (0+255),b
  3799  0008E8  0E00               	movlw	0
  3800  0008EA  6FD0               	movwf	(data_print@data5+2)& (0+255),b
  3801  0008EC  0E00               	movlw	0
  3802  0008EE  6FD1               	movwf	(data_print@data5+3)& (0+255),b
  3803  0008F0  0E00               	movlw	0
  3804  0008F2  0100               	movlb	0	; () banked
  3805  0008F4  6FD2               	movwf	data_print@data6& (0+255),b
  3806  0008F6  0E00               	movlw	0
  3807  0008F8  6FD3               	movwf	(data_print@data6+1)& (0+255),b
  3808  0008FA  0E00               	movlw	0
  3809  0008FC  6FD4               	movwf	(data_print@data6+2)& (0+255),b
  3810  0008FE  0E00               	movlw	0
  3811  000900  6FD5               	movwf	(data_print@data6+3)& (0+255),b
  3812  000902  0E00               	movlw	0
  3813  000904  0100               	movlb	0	; () banked
  3814  000906  6FD6               	movwf	data_print@data7& (0+255),b
  3815  000908  0E00               	movlw	0
  3816  00090A  6FD7               	movwf	(data_print@data7+1)& (0+255),b
  3817  00090C  0E00               	movlw	0
  3818  00090E  6FD8               	movwf	(data_print@data7+2)& (0+255),b
  3819  000910  0E00               	movlw	0
  3820  000912  6FD9               	movwf	(data_print@data7+3)& (0+255),b
  3821  000914  0E00               	movlw	0
  3822  000916  0100               	movlb	0	; () banked
  3823  000918  6FB2               	movwf	data_print@data8& (0+255),b
  3824  00091A  0E00               	movlw	0
  3825  00091C  6FB3               	movwf	(data_print@data8+1)& (0+255),b
  3826  00091E  0E00               	movlw	0
  3827  000920  6FB4               	movwf	(data_print@data8+2)& (0+255),b
  3828  000922  0E00               	movlw	0
  3829  000924  6FB5               	movwf	(data_print@data8+3)& (0+255),b
  3830  000926  0E00               	movlw	0
  3831  000928  0100               	movlb	0	; () banked
  3832  00092A  6FB6               	movwf	data_print@data9& (0+255),b
  3833  00092C  0E00               	movlw	0
  3834  00092E  6FB7               	movwf	(data_print@data9+1)& (0+255),b
  3835  000930  0E00               	movlw	0
  3836  000932  6FB8               	movwf	(data_print@data9+2)& (0+255),b
  3837  000934  0E00               	movlw	0
  3838  000936  6FB9               	movwf	(data_print@data9+3)& (0+255),b
  3839  000938  0E00               	movlw	0
  3840  00093A  0100               	movlb	0	; () banked
  3841  00093C  6FBA               	movwf	data_print@data10& (0+255),b
  3842  00093E  0E00               	movlw	0
  3843  000940  6FBB               	movwf	(data_print@data10+1)& (0+255),b
  3844  000942  0E00               	movlw	0
  3845  000944  6FBC               	movwf	(data_print@data10+2)& (0+255),b
  3846  000946  0E00               	movlw	0
  3847  000948  6FBD               	movwf	(data_print@data10+3)& (0+255),b
  3848                           
  3849                           ; BSR set to: 0
  3850                           ;main.c: 422: data00 = data/100000000;
  3851  00094A  C029  F01C         	movff	data_print@data,___lldiv@dividend
  3852  00094E  C02A  F01D         	movff	data_print@data+1,___lldiv@dividend+1
  3853  000952  C02B  F01E         	movff	data_print@data+2,___lldiv@dividend+2
  3854  000956  C02C  F01F         	movff	data_print@data+3,___lldiv@dividend+3
  3855  00095A  0E00               	movlw	0
  3856  00095C  6E20               	movwf	___lldiv@divisor,c
  3857  00095E  0EE1               	movlw	225
  3858  000960  6E21               	movwf	___lldiv@divisor+1,c
  3859  000962  0EF5               	movlw	245
  3860  000964  6E22               	movwf	___lldiv@divisor+2,c
  3861  000966  0E05               	movlw	5
  3862  000968  6E23               	movwf	___lldiv@divisor+3,c
  3863  00096A  ECA3  F00E         	call	___lldiv	;wreg free
  3864  00096E  C01C  F0DA         	movff	?___lldiv,data_print@data00
  3865  000972  C01D  F0DB         	movff	?___lldiv+1,data_print@data00+1
  3866  000976  C01E  F0DC         	movff	?___lldiv+2,data_print@data00+2
  3867  00097A  C01F  F0DD         	movff	?___lldiv+3,data_print@data00+3
  3868                           
  3869                           ;main.c: 423: if (data00 != 0){
  3870  00097E  0100               	movlb	0	; () banked
  3871  000980  51DA               	movf	data_print@data00& (0+255),w,b
  3872  000982  0100               	movlb	0	; () banked
  3873  000984  11DB               	iorwf	(data_print@data00+1)& (0+255),w,b
  3874  000986  0100               	movlb	0	; () banked
  3875  000988  11DC               	iorwf	(data_print@data00+2)& (0+255),w,b
  3876  00098A  0100               	movlb	0	; () banked
  3877  00098C  11DD               	iorwf	(data_print@data00+3)& (0+255),w,b
  3878  00098E  B4D8               	btfsc	status,2,c
  3879  000990  D005               	goto	l167
  3880                           
  3881                           ; BSR set to: 0
  3882                           ;main.c: 424: set_data(data00+'0');
  3883  000992  0100               	movlb	0	; () banked
  3884  000994  51DA               	movf	data_print@data00& (0+255),w,b
  3885  000996  0F30               	addlw	48
  3886  000998  ECCF  F00D         	call	_set_data
  3887  00099C                     l167:
  3888                           
  3889                           ;main.c: 425: }
  3890                           ;main.c: 426: data0 = (data%100000000)/10000000;
  3891  00099C  0E00               	movlw	0
  3892  00099E  6E17               	movwf	___llmod@divisor,c
  3893  0009A0  0EE1               	movlw	225
  3894  0009A2  6E18               	movwf	___llmod@divisor+1,c
  3895  0009A4  0EF5               	movlw	245
  3896  0009A6  6E19               	movwf	___llmod@divisor+2,c
  3897  0009A8  0E05               	movlw	5
  3898  0009AA  6E1A               	movwf	___llmod@divisor+3,c
  3899  0009AC  C029  F013         	movff	data_print@data,___llmod@dividend
  3900  0009B0  C02A  F014         	movff	data_print@data+1,___llmod@dividend+1
  3901  0009B4  C02B  F015         	movff	data_print@data+2,___llmod@dividend+2
  3902  0009B8  C02C  F016         	movff	data_print@data+3,___llmod@dividend+3
  3903  0009BC  EC11  F010         	call	___llmod	;wreg free
  3904  0009C0  C013  F01C         	movff	?___llmod,___lldiv@dividend
  3905  0009C4  C014  F01D         	movff	?___llmod+1,___lldiv@dividend+1
  3906  0009C8  C015  F01E         	movff	?___llmod+2,___lldiv@dividend+2
  3907  0009CC  C016  F01F         	movff	?___llmod+3,___lldiv@dividend+3
  3908  0009D0  0E80               	movlw	128
  3909  0009D2  6E20               	movwf	___lldiv@divisor,c
  3910  0009D4  0E96               	movlw	150
  3911  0009D6  6E21               	movwf	___lldiv@divisor+1,c
  3912  0009D8  0E98               	movlw	152
  3913  0009DA  6E22               	movwf	___lldiv@divisor+2,c
  3914  0009DC  0E00               	movlw	0
  3915  0009DE  6E23               	movwf	___lldiv@divisor+3,c
  3916  0009E0  ECA3  F00E         	call	___lldiv	;wreg free
  3917  0009E4  C01C  F0DE         	movff	?___lldiv,data_print@data0
  3918  0009E8  C01D  F0DF         	movff	?___lldiv+1,data_print@data0+1
  3919  0009EC  C01E  F0E0         	movff	?___lldiv+2,data_print@data0+2
  3920  0009F0  C01F  F0E1         	movff	?___lldiv+3,data_print@data0+3
  3921                           
  3922                           ;main.c: 427: if (data0 != 0){
  3923  0009F4  0100               	movlb	0	; () banked
  3924  0009F6  51DE               	movf	data_print@data0& (0+255),w,b
  3925  0009F8  0100               	movlb	0	; () banked
  3926  0009FA  11DF               	iorwf	(data_print@data0+1)& (0+255),w,b
  3927  0009FC  0100               	movlb	0	; () banked
  3928  0009FE  11E0               	iorwf	(data_print@data0+2)& (0+255),w,b
  3929  000A00  0100               	movlb	0	; () banked
  3930  000A02  11E1               	iorwf	(data_print@data0+3)& (0+255),w,b
  3931  000A04  B4D8               	btfsc	status,2,c
  3932  000A06  D005               	goto	l168
  3933                           
  3934                           ; BSR set to: 0
  3935                           ;main.c: 428: set_data(data0+'0');
  3936  000A08  0100               	movlb	0	; () banked
  3937  000A0A  51DE               	movf	data_print@data0& (0+255),w,b
  3938  000A0C  0F30               	addlw	48
  3939  000A0E  ECCF  F00D         	call	_set_data
  3940  000A12                     l168:
  3941                           
  3942                           ;main.c: 429: }
  3943                           ;main.c: 430: data1 = (data%10000000)/1000000;
  3944  000A12  0E80               	movlw	128
  3945  000A14  6E17               	movwf	___llmod@divisor,c
  3946  000A16  0E96               	movlw	150
  3947  000A18  6E18               	movwf	___llmod@divisor+1,c
  3948  000A1A  0E98               	movlw	152
  3949  000A1C  6E19               	movwf	___llmod@divisor+2,c
  3950  000A1E  0E00               	movlw	0
  3951  000A20  6E1A               	movwf	___llmod@divisor+3,c
  3952  000A22  C029  F013         	movff	data_print@data,___llmod@dividend
  3953  000A26  C02A  F014         	movff	data_print@data+1,___llmod@dividend+1
  3954  000A2A  C02B  F015         	movff	data_print@data+2,___llmod@dividend+2
  3955  000A2E  C02C  F016         	movff	data_print@data+3,___llmod@dividend+3
  3956  000A32  EC11  F010         	call	___llmod	;wreg free
  3957  000A36  C013  F01C         	movff	?___llmod,___lldiv@dividend
  3958  000A3A  C014  F01D         	movff	?___llmod+1,___lldiv@dividend+1
  3959  000A3E  C015  F01E         	movff	?___llmod+2,___lldiv@dividend+2
  3960  000A42  C016  F01F         	movff	?___llmod+3,___lldiv@dividend+3
  3961  000A46  0E40               	movlw	64
  3962  000A48  6E20               	movwf	___lldiv@divisor,c
  3963  000A4A  0E42               	movlw	66
  3964  000A4C  6E21               	movwf	___lldiv@divisor+1,c
  3965  000A4E  0E0F               	movlw	15
  3966  000A50  6E22               	movwf	___lldiv@divisor+2,c
  3967  000A52  0E00               	movlw	0
  3968  000A54  6E23               	movwf	___lldiv@divisor+3,c
  3969  000A56  ECA3  F00E         	call	___lldiv	;wreg free
  3970  000A5A  C01C  F0BE         	movff	?___lldiv,data_print@data1
  3971  000A5E  C01D  F0BF         	movff	?___lldiv+1,data_print@data1+1
  3972  000A62  C01E  F0C0         	movff	?___lldiv+2,data_print@data1+2
  3973  000A66  C01F  F0C1         	movff	?___lldiv+3,data_print@data1+3
  3974                           
  3975                           ;main.c: 431: set_data(data1+'0');
  3976  000A6A  0100               	movlb	0	; () banked
  3977  000A6C  51BE               	movf	data_print@data1& (0+255),w,b
  3978  000A6E  0F30               	addlw	48
  3979  000A70  ECCF  F00D         	call	_set_data
  3980                           
  3981                           ;main.c: 432: set_data('.');
  3982  000A74  0E2E               	movlw	46
  3983  000A76  ECCF  F00D         	call	_set_data
  3984                           
  3985                           ;main.c: 433: data2 = (data%1000000)/100000;
  3986  000A7A  0E40               	movlw	64
  3987  000A7C  6E17               	movwf	___llmod@divisor,c
  3988  000A7E  0E42               	movlw	66
  3989  000A80  6E18               	movwf	___llmod@divisor+1,c
  3990  000A82  0E0F               	movlw	15
  3991  000A84  6E19               	movwf	___llmod@divisor+2,c
  3992  000A86  0E00               	movlw	0
  3993  000A88  6E1A               	movwf	___llmod@divisor+3,c
  3994  000A8A  C029  F013         	movff	data_print@data,___llmod@dividend
  3995  000A8E  C02A  F014         	movff	data_print@data+1,___llmod@dividend+1
  3996  000A92  C02B  F015         	movff	data_print@data+2,___llmod@dividend+2
  3997  000A96  C02C  F016         	movff	data_print@data+3,___llmod@dividend+3
  3998  000A9A  EC11  F010         	call	___llmod	;wreg free
  3999  000A9E  C013  F01C         	movff	?___llmod,___lldiv@dividend
  4000  000AA2  C014  F01D         	movff	?___llmod+1,___lldiv@dividend+1
  4001  000AA6  C015  F01E         	movff	?___llmod+2,___lldiv@dividend+2
  4002  000AAA  C016  F01F         	movff	?___llmod+3,___lldiv@dividend+3
  4003  000AAE  0EA0               	movlw	160
  4004  000AB0  6E20               	movwf	___lldiv@divisor,c
  4005  000AB2  0E86               	movlw	134
  4006  000AB4  6E21               	movwf	___lldiv@divisor+1,c
  4007  000AB6  0E01               	movlw	1
  4008  000AB8  6E22               	movwf	___lldiv@divisor+2,c
  4009  000ABA  0E00               	movlw	0
  4010  000ABC  6E23               	movwf	___lldiv@divisor+3,c
  4011  000ABE  ECA3  F00E         	call	___lldiv	;wreg free
  4012  000AC2  C01C  F0C2         	movff	?___lldiv,data_print@data2
  4013  000AC6  C01D  F0C3         	movff	?___lldiv+1,data_print@data2+1
  4014  000ACA  C01E  F0C4         	movff	?___lldiv+2,data_print@data2+2
  4015  000ACE  C01F  F0C5         	movff	?___lldiv+3,data_print@data2+3
  4016                           
  4017                           ;main.c: 434: set_data(data2+'0');
  4018  000AD2  0100               	movlb	0	; () banked
  4019  000AD4  51C2               	movf	data_print@data2& (0+255),w,b
  4020  000AD6  0F30               	addlw	48
  4021  000AD8  ECCF  F00D         	call	_set_data
  4022                           
  4023                           ;main.c: 435: data3 = (data%100000)/10000;
  4024  000ADC  0EA0               	movlw	160
  4025  000ADE  6E17               	movwf	___llmod@divisor,c
  4026  000AE0  0E86               	movlw	134
  4027  000AE2  6E18               	movwf	___llmod@divisor+1,c
  4028  000AE4  0E01               	movlw	1
  4029  000AE6  6E19               	movwf	___llmod@divisor+2,c
  4030  000AE8  0E00               	movlw	0
  4031  000AEA  6E1A               	movwf	___llmod@divisor+3,c
  4032  000AEC  C029  F013         	movff	data_print@data,___llmod@dividend
  4033  000AF0  C02A  F014         	movff	data_print@data+1,___llmod@dividend+1
  4034  000AF4  C02B  F015         	movff	data_print@data+2,___llmod@dividend+2
  4035  000AF8  C02C  F016         	movff	data_print@data+3,___llmod@dividend+3
  4036  000AFC  EC11  F010         	call	___llmod	;wreg free
  4037  000B00  C013  F01C         	movff	?___llmod,___lldiv@dividend
  4038  000B04  C014  F01D         	movff	?___llmod+1,___lldiv@dividend+1
  4039  000B08  C015  F01E         	movff	?___llmod+2,___lldiv@dividend+2
  4040  000B0C  C016  F01F         	movff	?___llmod+3,___lldiv@dividend+3
  4041  000B10  0E10               	movlw	16
  4042  000B12  6E20               	movwf	___lldiv@divisor,c
  4043  000B14  0E27               	movlw	39
  4044  000B16  6E21               	movwf	___lldiv@divisor+1,c
  4045  000B18  0E00               	movlw	0
  4046  000B1A  6E22               	movwf	___lldiv@divisor+2,c
  4047  000B1C  0E00               	movlw	0
  4048  000B1E  6E23               	movwf	___lldiv@divisor+3,c
  4049  000B20  ECA3  F00E         	call	___lldiv	;wreg free
  4050  000B24  C01C  F0C6         	movff	?___lldiv,data_print@data3
  4051  000B28  C01D  F0C7         	movff	?___lldiv+1,data_print@data3+1
  4052  000B2C  C01E  F0C8         	movff	?___lldiv+2,data_print@data3+2
  4053  000B30  C01F  F0C9         	movff	?___lldiv+3,data_print@data3+3
  4054                           
  4055                           ;main.c: 436: set_data(data3+'0');
  4056  000B34  0100               	movlb	0	; () banked
  4057  000B36  51C6               	movf	data_print@data3& (0+255),w,b
  4058  000B38  0F30               	addlw	48
  4059  000B3A  ECCF  F00D         	call	_set_data
  4060                           
  4061                           ;main.c: 437: data4 = (data%10000)/1000;
  4062  000B3E  0E10               	movlw	16
  4063  000B40  6E17               	movwf	___llmod@divisor,c
  4064  000B42  0E27               	movlw	39
  4065  000B44  6E18               	movwf	___llmod@divisor+1,c
  4066  000B46  0E00               	movlw	0
  4067  000B48  6E19               	movwf	___llmod@divisor+2,c
  4068  000B4A  0E00               	movlw	0
  4069  000B4C  6E1A               	movwf	___llmod@divisor+3,c
  4070  000B4E  C029  F013         	movff	data_print@data,___llmod@dividend
  4071  000B52  C02A  F014         	movff	data_print@data+1,___llmod@dividend+1
  4072  000B56  C02B  F015         	movff	data_print@data+2,___llmod@dividend+2
  4073  000B5A  C02C  F016         	movff	data_print@data+3,___llmod@dividend+3
  4074  000B5E  EC11  F010         	call	___llmod	;wreg free
  4075  000B62  C013  F01C         	movff	?___llmod,___lldiv@dividend
  4076  000B66  C014  F01D         	movff	?___llmod+1,___lldiv@dividend+1
  4077  000B6A  C015  F01E         	movff	?___llmod+2,___lldiv@dividend+2
  4078  000B6E  C016  F01F         	movff	?___llmod+3,___lldiv@dividend+3
  4079  000B72  0EE8               	movlw	232
  4080  000B74  6E20               	movwf	___lldiv@divisor,c
  4081  000B76  0E03               	movlw	3
  4082  000B78  6E21               	movwf	___lldiv@divisor+1,c
  4083  000B7A  0E00               	movlw	0
  4084  000B7C  6E22               	movwf	___lldiv@divisor+2,c
  4085  000B7E  0E00               	movlw	0
  4086  000B80  6E23               	movwf	___lldiv@divisor+3,c
  4087  000B82  ECA3  F00E         	call	___lldiv	;wreg free
  4088  000B86  C01C  F0CA         	movff	?___lldiv,data_print@data4
  4089  000B8A  C01D  F0CB         	movff	?___lldiv+1,data_print@data4+1
  4090  000B8E  C01E  F0CC         	movff	?___lldiv+2,data_print@data4+2
  4091  000B92  C01F  F0CD         	movff	?___lldiv+3,data_print@data4+3
  4092                           
  4093                           ;main.c: 438: set_data(data4+'0');
  4094  000B96  0100               	movlb	0	; () banked
  4095  000B98  51CA               	movf	data_print@data4& (0+255),w,b
  4096  000B9A  0F30               	addlw	48
  4097  000B9C  ECCF  F00D         	call	_set_data
  4098                           
  4099                           ;main.c: 439: data5 = (data%1000)/100;
  4100  000BA0  0EE8               	movlw	232
  4101  000BA2  6E17               	movwf	___llmod@divisor,c
  4102  000BA4  0E03               	movlw	3
  4103  000BA6  6E18               	movwf	___llmod@divisor+1,c
  4104  000BA8  0E00               	movlw	0
  4105  000BAA  6E19               	movwf	___llmod@divisor+2,c
  4106  000BAC  0E00               	movlw	0
  4107  000BAE  6E1A               	movwf	___llmod@divisor+3,c
  4108  000BB0  C029  F013         	movff	data_print@data,___llmod@dividend
  4109  000BB4  C02A  F014         	movff	data_print@data+1,___llmod@dividend+1
  4110  000BB8  C02B  F015         	movff	data_print@data+2,___llmod@dividend+2
  4111  000BBC  C02C  F016         	movff	data_print@data+3,___llmod@dividend+3
  4112  000BC0  EC11  F010         	call	___llmod	;wreg free
  4113  000BC4  C013  F01C         	movff	?___llmod,___lldiv@dividend
  4114  000BC8  C014  F01D         	movff	?___llmod+1,___lldiv@dividend+1
  4115  000BCC  C015  F01E         	movff	?___llmod+2,___lldiv@dividend+2
  4116  000BD0  C016  F01F         	movff	?___llmod+3,___lldiv@dividend+3
  4117  000BD4  0E64               	movlw	100
  4118  000BD6  6E20               	movwf	___lldiv@divisor,c
  4119  000BD8  0E00               	movlw	0
  4120  000BDA  6E21               	movwf	___lldiv@divisor+1,c
  4121  000BDC  0E00               	movlw	0
  4122  000BDE  6E22               	movwf	___lldiv@divisor+2,c
  4123  000BE0  0E00               	movlw	0
  4124  000BE2  6E23               	movwf	___lldiv@divisor+3,c
  4125  000BE4  ECA3  F00E         	call	___lldiv	;wreg free
  4126  000BE8  C01C  F0CE         	movff	?___lldiv,data_print@data5
  4127  000BEC  C01D  F0CF         	movff	?___lldiv+1,data_print@data5+1
  4128  000BF0  C01E  F0D0         	movff	?___lldiv+2,data_print@data5+2
  4129  000BF4  C01F  F0D1         	movff	?___lldiv+3,data_print@data5+3
  4130                           
  4131                           ;main.c: 440: set_data(data5+'0');
  4132  000BF8  0100               	movlb	0	; () banked
  4133  000BFA  51CE               	movf	data_print@data5& (0+255),w,b
  4134  000BFC  0F30               	addlw	48
  4135  000BFE  ECCF  F00D         	call	_set_data
  4136                           
  4137                           ;main.c: 441: data6 = (data%100)/10;
  4138  000C02  0E64               	movlw	100
  4139  000C04  6E17               	movwf	___llmod@divisor,c
  4140  000C06  0E00               	movlw	0
  4141  000C08  6E18               	movwf	___llmod@divisor+1,c
  4142  000C0A  0E00               	movlw	0
  4143  000C0C  6E19               	movwf	___llmod@divisor+2,c
  4144  000C0E  0E00               	movlw	0
  4145  000C10  6E1A               	movwf	___llmod@divisor+3,c
  4146  000C12  C029  F013         	movff	data_print@data,___llmod@dividend
  4147  000C16  C02A  F014         	movff	data_print@data+1,___llmod@dividend+1
  4148  000C1A  C02B  F015         	movff	data_print@data+2,___llmod@dividend+2
  4149  000C1E  C02C  F016         	movff	data_print@data+3,___llmod@dividend+3
  4150  000C22  EC11  F010         	call	___llmod	;wreg free
  4151  000C26  C013  F01C         	movff	?___llmod,___lldiv@dividend
  4152  000C2A  C014  F01D         	movff	?___llmod+1,___lldiv@dividend+1
  4153  000C2E  C015  F01E         	movff	?___llmod+2,___lldiv@dividend+2
  4154  000C32  C016  F01F         	movff	?___llmod+3,___lldiv@dividend+3
  4155  000C36  0E0A               	movlw	10
  4156  000C38  6E20               	movwf	___lldiv@divisor,c
  4157  000C3A  0E00               	movlw	0
  4158  000C3C  6E21               	movwf	___lldiv@divisor+1,c
  4159  000C3E  0E00               	movlw	0
  4160  000C40  6E22               	movwf	___lldiv@divisor+2,c
  4161  000C42  0E00               	movlw	0
  4162  000C44  6E23               	movwf	___lldiv@divisor+3,c
  4163  000C46  ECA3  F00E         	call	___lldiv	;wreg free
  4164  000C4A  C01C  F0D2         	movff	?___lldiv,data_print@data6
  4165  000C4E  C01D  F0D3         	movff	?___lldiv+1,data_print@data6+1
  4166  000C52  C01E  F0D4         	movff	?___lldiv+2,data_print@data6+2
  4167  000C56  C01F  F0D5         	movff	?___lldiv+3,data_print@data6+3
  4168                           
  4169                           ;main.c: 442: set_data(data6+'0');
  4170  000C5A  0100               	movlb	0	; () banked
  4171  000C5C  51D2               	movf	data_print@data6& (0+255),w,b
  4172  000C5E  0F30               	addlw	48
  4173  000C60  ECCF  F00D         	call	_set_data
  4174                           
  4175                           ;main.c: 443: data7 = data%10;
  4176  000C64  C029  F013         	movff	data_print@data,___llmod@dividend
  4177  000C68  C02A  F014         	movff	data_print@data+1,___llmod@dividend+1
  4178  000C6C  C02B  F015         	movff	data_print@data+2,___llmod@dividend+2
  4179  000C70  C02C  F016         	movff	data_print@data+3,___llmod@dividend+3
  4180  000C74  0E0A               	movlw	10
  4181  000C76  6E17               	movwf	___llmod@divisor,c
  4182  000C78  0E00               	movlw	0
  4183  000C7A  6E18               	movwf	___llmod@divisor+1,c
  4184  000C7C  0E00               	movlw	0
  4185  000C7E  6E19               	movwf	___llmod@divisor+2,c
  4186  000C80  0E00               	movlw	0
  4187  000C82  6E1A               	movwf	___llmod@divisor+3,c
  4188  000C84  EC11  F010         	call	___llmod	;wreg free
  4189  000C88  C013  F0D6         	movff	?___llmod,data_print@data7
  4190  000C8C  C014  F0D7         	movff	?___llmod+1,data_print@data7+1
  4191  000C90  C015  F0D8         	movff	?___llmod+2,data_print@data7+2
  4192  000C94  C016  F0D9         	movff	?___llmod+3,data_print@data7+3
  4193                           
  4194                           ;main.c: 444: set_data(data7+'0');
  4195  000C98  0100               	movlb	0	; () banked
  4196  000C9A  51D6               	movf	data_print@data7& (0+255),w,b
  4197  000C9C  0F30               	addlw	48
  4198  000C9E  ECCF  F00D         	call	_set_data
  4199  000CA2  0012               	return		;funcret
  4200  000CA4                     __end_of_data_print:
  4201                           	opt stack 0
  4202                           tblptru	equ	0xFF8
  4203                           tblptrh	equ	0xFF7
  4204                           tblptrl	equ	0xFF6
  4205                           tablat	equ	0xFF5
  4206                           intcon	equ	0xFF2
  4207                           intcon2	equ	0xFF1
  4208                           intcon3	equ	0xFF0
  4209                           postinc0	equ	0xFEE
  4210                           wreg	equ	0xFE8
  4211                           indf1	equ	0xFE7
  4212                           postdec1	equ	0xFE5
  4213                           fsr1h	equ	0xFE2
  4214                           fsr1l	equ	0xFE1
  4215                           postinc2	equ	0xFDE
  4216                           postdec2	equ	0xFDD
  4217                           fsr2h	equ	0xFDA
  4218                           fsr2l	equ	0xFD9
  4219                           status	equ	0xFD8
  4220                           
  4221 ;; *************** function _set_data *****************
  4222 ;; Defined at:
  4223 ;;		line 292 in file "main.c"
  4224 ;; Parameters:    Size  Location     Type
  4225 ;;  data            1    wreg     unsigned char 
  4226 ;; Auto vars:     Size  Location     Type
  4227 ;;  data            1   26[COMRAM] unsigned char 
  4228 ;;  v               8   18[COMRAM] unsigned char [8]
  4229 ;;  i               1   27[COMRAM] unsigned char 
  4230 ;; Return value:  Size  Location     Type
  4231 ;;                  1    wreg      void 
  4232 ;; Registers used:
  4233 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4234 ;; Tracked objects:
  4235 ;;		On entry : 0/0
  4236 ;;		On exit  : 0/0
  4237 ;;		Unchanged: 0/0
  4238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4239 ;;      Params:         0       0       0       0       0       0       0       0       0
  4240 ;;      Locals:        10       0       0       0       0       0       0       0       0
  4241 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4242 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4243 ;;Total ram usage:       10 bytes
  4244 ;; Hardware stack levels used:    1
  4245 ;; Hardware stack levels required when called:    2
  4246 ;; This function calls:
  4247 ;;		_pulse
  4248 ;; This function is called by:
  4249 ;;		_write_string
  4250 ;;		_data_print
  4251 ;; This function uses a non-reentrant model
  4252 ;;
  4253                           
  4254                           	psect	text20
  4255  001B9E                     __ptext20:
  4256                           	opt stack 0
  4257  001B9E                     _set_data:
  4258                           	opt stack 27
  4259                           
  4260                           ;incstack = 0
  4261                           ;set_data@data stored from wreg
  4262  001B9E  6E1B               	movwf	set_data@data,c
  4263                           
  4264                           ;main.c: 293: LATCbits.LATC2 = 1 ;
  4265  001BA0  848B               	bsf	3979,2,c	;volatile
  4266                           
  4267                           ;main.c: 294: unsigned char v[8], i;
  4268                           ;main.c: 295: for(i = 0; i < 8; ++i) {
  4269  001BA2  0E00               	movlw	0
  4270  001BA4  6E1C               	movwf	set_data@i,c
  4271  001BA6                     l2278:
  4272  001BA6  0E07               	movlw	7
  4273  001BA8  641C               	cpfsgt	set_data@i,c
  4274  001BAA  D001               	goto	l118
  4275  001BAC  D00F               	goto	u2000
  4276  001BAE                     l118:
  4277                           
  4278                           ;main.c: 296: v[i] = (unsigned char) data % 2;
  4279  001BAE  501C               	movf	set_data@i,w,c
  4280  001BB0  0D01               	mullw	1
  4281  001BB2  0E13               	movlw	low set_data@v
  4282  001BB4  24F3               	addwf	prodl,w,c
  4283  001BB6  6ED9               	movwf	fsr2l,c
  4284  001BB8  0E00               	movlw	high set_data@v
  4285  001BBA  20F4               	addwfc	prodh,w,c
  4286  001BBC  6EDA               	movwf	fsr2h,c
  4287  001BBE  501B               	movf	set_data@data,w,c
  4288  001BC0  0B01               	andlw	1
  4289  001BC2  6EDF               	movwf	indf2,c
  4290                           
  4291                           ;main.c: 297: data /= 2;
  4292  001BC4  90D8               	bcf	status,0,c
  4293  001BC6  321B               	rrcf	set_data@data,f,c
  4294  001BC8  2A1C               	incf	set_data@i,f,c
  4295  001BCA  D7ED               	goto	l2278
  4296  001BCC                     u2000:
  4297                           
  4298                           ;main.c: 298: }
  4299                           ;main.c: 299: _delay((unsigned long)((100)*(1000000/4000000.0)));
  4300  001BCC  0E08               	movlw	8
  4301  001BCE                     u2667:
  4302  001BCE  2EE8               	decfsz	wreg,f,c
  4303  001BD0  D7FE               	bra	u2667
  4304  001BD2  F000               	nop	
  4305                           
  4306                           ;main.c: 300: LATEbits.LATE2 = v[0];
  4307  001BD4  B013               	btfsc	set_data@v,0,c
  4308  001BD6  D002               	bra	u2015
  4309  001BD8  948D               	bcf	3981,2,c	;volatile
  4310  001BDA  D001               	bra	u2016
  4311  001BDC                     u2015:
  4312  001BDC  848D               	bsf	3981,2,c	;volatile
  4313  001BDE                     u2016:
  4314                           
  4315                           ;main.c: 301: LATEbits.LATE1 = v[1];
  4316  001BDE  B014               	btfsc	set_data@v+1,0,c
  4317  001BE0  D002               	bra	u2025
  4318  001BE2  928D               	bcf	3981,1,c	;volatile
  4319  001BE4  D001               	bra	u2026
  4320  001BE6                     u2025:
  4321  001BE6  828D               	bsf	3981,1,c	;volatile
  4322  001BE8                     u2026:
  4323                           
  4324                           ;main.c: 302: LATEbits.LATE0 = v[2];
  4325  001BE8  B015               	btfsc	set_data@v+2,0,c
  4326  001BEA  D002               	bra	u2035
  4327  001BEC  908D               	bcf	3981,0,c	;volatile
  4328  001BEE  D001               	bra	u2036
  4329  001BF0                     u2035:
  4330  001BF0  808D               	bsf	3981,0,c	;volatile
  4331  001BF2                     u2036:
  4332                           
  4333                           ;main.c: 303: LATAbits.LATA5 = v[3];
  4334  001BF2  B016               	btfsc	set_data@v+3,0,c
  4335  001BF4  D002               	bra	u2045
  4336  001BF6  9A89               	bcf	3977,5,c	;volatile
  4337  001BF8  D001               	bra	u2046
  4338  001BFA                     u2045:
  4339  001BFA  8A89               	bsf	3977,5,c	;volatile
  4340  001BFC                     u2046:
  4341                           
  4342                           ;main.c: 304: LATAbits.LATA4 = v[4];
  4343  001BFC  B017               	btfsc	set_data@v+4,0,c
  4344  001BFE  D002               	bra	u2055
  4345  001C00  9889               	bcf	3977,4,c	;volatile
  4346  001C02  D001               	bra	u2056
  4347  001C04                     u2055:
  4348  001C04  8889               	bsf	3977,4,c	;volatile
  4349  001C06                     u2056:
  4350                           
  4351                           ;main.c: 305: LATAbits.LATA3 = v[5];
  4352  001C06  B018               	btfsc	set_data@v+5,0,c
  4353  001C08  D002               	bra	u2065
  4354  001C0A  9689               	bcf	3977,3,c	;volatile
  4355  001C0C  D001               	bra	u2066
  4356  001C0E                     u2065:
  4357  001C0E  8689               	bsf	3977,3,c	;volatile
  4358  001C10                     u2066:
  4359                           
  4360                           ;main.c: 306: LATAbits.LATA2 = v[6];
  4361  001C10  B019               	btfsc	set_data@v+6,0,c
  4362  001C12  D002               	bra	u2075
  4363  001C14  9489               	bcf	3977,2,c	;volatile
  4364  001C16  D001               	bra	u2076
  4365  001C18                     u2075:
  4366  001C18  8489               	bsf	3977,2,c	;volatile
  4367  001C1A                     u2076:
  4368                           
  4369                           ;main.c: 307: LATAbits.LATA1 = v[7];
  4370  001C1A  B01A               	btfsc	set_data@v+7,0,c
  4371  001C1C  D002               	bra	u2085
  4372  001C1E  9289               	bcf	3977,1,c	;volatile
  4373  001C20  D001               	bra	u2086
  4374  001C22                     u2085:
  4375  001C22  8289               	bsf	3977,1,c	;volatile
  4376  001C24                     u2086:
  4377                           
  4378                           ;main.c: 308: _delay((unsigned long)((5)*(1000000/4000.0)));
  4379  001C24  0EFA               	movlw	250
  4380  001C26                     u2677:
  4381  001C26  D000               	nop2	
  4382  001C28  2EE8               	decfsz	wreg,f,c
  4383  001C2A  D7FD               	bra	u2677
  4384                           
  4385                           ;main.c: 309: pulse();
  4386  001C2C  EC57  F011         	call	_pulse	;wreg free
  4387  001C30  0012               	return		;funcret
  4388  001C32                     __end_of_set_data:
  4389                           	opt stack 0
  4390                           tblptru	equ	0xFF8
  4391                           tblptrh	equ	0xFF7
  4392                           tblptrl	equ	0xFF6
  4393                           tablat	equ	0xFF5
  4394                           prodh	equ	0xFF4
  4395                           prodl	equ	0xFF3
  4396                           intcon	equ	0xFF2
  4397                           intcon2	equ	0xFF1
  4398                           intcon3	equ	0xFF0
  4399                           postinc0	equ	0xFEE
  4400                           wreg	equ	0xFE8
  4401                           indf1	equ	0xFE7
  4402                           postdec1	equ	0xFE5
  4403                           fsr1h	equ	0xFE2
  4404                           fsr1l	equ	0xFE1
  4405                           indf2	equ	0xFDF
  4406                           postinc2	equ	0xFDE
  4407                           postdec2	equ	0xFDD
  4408                           fsr2h	equ	0xFDA
  4409                           fsr2l	equ	0xFD9
  4410                           status	equ	0xFD8
  4411                           
  4412 ;; *************** function _pulse *****************
  4413 ;; Defined at:
  4414 ;;		line 254 in file "main.c"
  4415 ;; Parameters:    Size  Location     Type
  4416 ;;		None
  4417 ;; Auto vars:     Size  Location     Type
  4418 ;;		None
  4419 ;; Return value:  Size  Location     Type
  4420 ;;                  1    wreg      void 
  4421 ;; Registers used:
  4422 ;;		wreg
  4423 ;; Tracked objects:
  4424 ;;		On entry : 0/0
  4425 ;;		On exit  : 0/0
  4426 ;;		Unchanged: 0/0
  4427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4428 ;;      Params:         0       0       0       0       0       0       0       0       0
  4429 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4430 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4431 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4432 ;;Total ram usage:        0 bytes
  4433 ;; Hardware stack levels used:    1
  4434 ;; Hardware stack levels required when called:    1
  4435 ;; This function calls:
  4436 ;;		Nothing
  4437 ;; This function is called by:
  4438 ;;		_set_inst
  4439 ;;		_set_data
  4440 ;; This function uses a non-reentrant model
  4441 ;;
  4442                           
  4443                           	psect	text21
  4444  0022AE                     __ptext21:
  4445                           	opt stack 0
  4446  0022AE                     _pulse:
  4447                           	opt stack 27
  4448                           
  4449                           ;main.c: 255: LATCbits.LATC0 = 1;
  4450                           
  4451                           ;incstack = 0
  4452  0022AE  808B               	bsf	3979,0,c	;volatile
  4453                           
  4454                           ;main.c: 256: _delay((unsigned long)((100)*(1000000/4000000.0))) ;
  4455  0022B0  0E08               	movlw	8
  4456  0022B2                     u2687:
  4457  0022B2  2EE8               	decfsz	wreg,f,c
  4458  0022B4  D7FE               	bra	u2687
  4459  0022B6  F000               	nop	
  4460                           
  4461                           ;main.c: 257: LATCbits.LATC0 = 0 ;
  4462  0022B8  908B               	bcf	3979,0,c	;volatile
  4463                           
  4464                           ;main.c: 258: _delay((unsigned long)((100)*(1000000/4000000.0))) ;
  4465  0022BA  0E08               	movlw	8
  4466  0022BC                     u2697:
  4467  0022BC  2EE8               	decfsz	wreg,f,c
  4468  0022BE  D7FE               	bra	u2697
  4469  0022C0  F000               	nop	
  4470  0022C2  0012               	return		;funcret
  4471  0022C4                     __end_of_pulse:
  4472                           	opt stack 0
  4473                           tblptru	equ	0xFF8
  4474                           tblptrh	equ	0xFF7
  4475                           tblptrl	equ	0xFF6
  4476                           tablat	equ	0xFF5
  4477                           prodh	equ	0xFF4
  4478                           prodl	equ	0xFF3
  4479                           intcon	equ	0xFF2
  4480                           intcon2	equ	0xFF1
  4481                           intcon3	equ	0xFF0
  4482                           postinc0	equ	0xFEE
  4483                           wreg	equ	0xFE8
  4484                           indf1	equ	0xFE7
  4485                           postdec1	equ	0xFE5
  4486                           fsr1h	equ	0xFE2
  4487                           fsr1l	equ	0xFE1
  4488                           indf2	equ	0xFDF
  4489                           postinc2	equ	0xFDE
  4490                           postdec2	equ	0xFDD
  4491                           fsr2h	equ	0xFDA
  4492                           fsr2l	equ	0xFD9
  4493                           status	equ	0xFD8
  4494                           
  4495 ;; *************** function ___llmod *****************
  4496 ;; Defined at:
  4497 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\llmod.c"
  4498 ;; Parameters:    Size  Location     Type
  4499 ;;  dividend        4   18[COMRAM] unsigned long 
  4500 ;;  divisor         4   22[COMRAM] unsigned long 
  4501 ;; Auto vars:     Size  Location     Type
  4502 ;;  counter         1   26[COMRAM] unsigned char 
  4503 ;; Return value:  Size  Location     Type
  4504 ;;                  4   18[COMRAM] unsigned long 
  4505 ;; Registers used:
  4506 ;;		wreg, status,2, status,0
  4507 ;; Tracked objects:
  4508 ;;		On entry : 0/0
  4509 ;;		On exit  : 0/0
  4510 ;;		Unchanged: 0/0
  4511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4512 ;;      Params:         8       0       0       0       0       0       0       0       0
  4513 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4514 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4515 ;;      Totals:         9       0       0       0       0       0       0       0       0
  4516 ;;Total ram usage:        9 bytes
  4517 ;; Hardware stack levels used:    1
  4518 ;; Hardware stack levels required when called:    1
  4519 ;; This function calls:
  4520 ;;		Nothing
  4521 ;; This function is called by:
  4522 ;;		_data_print
  4523 ;;		_print_number
  4524 ;; This function uses a non-reentrant model
  4525 ;;
  4526                           
  4527                           	psect	text22
  4528  002022                     __ptext22:
  4529                           	opt stack 0
  4530  002022                     ___llmod:
  4531                           	opt stack 26
  4532                           
  4533                           ;incstack = 0
  4534  002022  5017               	movf	___llmod@divisor,w,c
  4535  002024  1018               	iorwf	___llmod@divisor+1,w,c
  4536  002026  1019               	iorwf	___llmod@divisor+2,w,c
  4537  002028  101A               	iorwf	___llmod@divisor+3,w,c
  4538  00202A  B4D8               	btfsc	status,2,c
  4539  00202C  D024               	goto	l578
  4540  00202E  0E01               	movlw	1
  4541  002030  6E1B               	movwf	___llmod@counter,c
  4542  002032  D006               	goto	l573
  4543  002034  90D8               	bcf	status,0,c
  4544  002036  3617               	rlcf	___llmod@divisor,f,c
  4545  002038  3618               	rlcf	___llmod@divisor+1,f,c
  4546  00203A  3619               	rlcf	___llmod@divisor+2,f,c
  4547  00203C  361A               	rlcf	___llmod@divisor+3,f,c
  4548  00203E  2A1B               	incf	___llmod@counter,f,c
  4549  002040                     l573:
  4550  002040  AE1A               	btfss	___llmod@divisor+3,7,c
  4551  002042  D7F8               	goto	l574
  4552  002044                     u1370:
  4553  002044  5017               	movf	___llmod@divisor,w,c
  4554  002046  5C13               	subwf	___llmod@dividend,w,c
  4555  002048  5018               	movf	___llmod@divisor+1,w,c
  4556  00204A  5814               	subwfb	___llmod@dividend+1,w,c
  4557  00204C  5019               	movf	___llmod@divisor+2,w,c
  4558  00204E  5815               	subwfb	___llmod@dividend+2,w,c
  4559  002050  501A               	movf	___llmod@divisor+3,w,c
  4560  002052  5816               	subwfb	___llmod@dividend+3,w,c
  4561  002054  A0D8               	btfss	status,0,c
  4562  002056  D008               	goto	l577
  4563  002058  5017               	movf	___llmod@divisor,w,c
  4564  00205A  5E13               	subwf	___llmod@dividend,f,c
  4565  00205C  5018               	movf	___llmod@divisor+1,w,c
  4566  00205E  5A14               	subwfb	___llmod@dividend+1,f,c
  4567  002060  5019               	movf	___llmod@divisor+2,w,c
  4568  002062  5A15               	subwfb	___llmod@dividend+2,f,c
  4569  002064  501A               	movf	___llmod@divisor+3,w,c
  4570  002066  5A16               	subwfb	___llmod@dividend+3,f,c
  4571  002068                     l577:
  4572  002068  90D8               	bcf	status,0,c
  4573  00206A  321A               	rrcf	___llmod@divisor+3,f,c
  4574  00206C  3219               	rrcf	___llmod@divisor+2,f,c
  4575  00206E  3218               	rrcf	___llmod@divisor+1,f,c
  4576  002070  3217               	rrcf	___llmod@divisor,f,c
  4577  002072  2E1B               	decfsz	___llmod@counter,f,c
  4578  002074  D7E7               	goto	u1370
  4579  002076                     l578:
  4580  002076  C013  F013         	movff	___llmod@dividend,?___llmod
  4581  00207A  C014  F014         	movff	___llmod@dividend+1,?___llmod+1
  4582  00207E  C015  F015         	movff	___llmod@dividend+2,?___llmod+2
  4583  002082  C016  F016         	movff	___llmod@dividend+3,?___llmod+3
  4584  002086  0012               	return		;funcret
  4585  002088                     __end_of___llmod:
  4586                           	opt stack 0
  4587                           tblptru	equ	0xFF8
  4588                           tblptrh	equ	0xFF7
  4589                           tblptrl	equ	0xFF6
  4590                           tablat	equ	0xFF5
  4591                           prodh	equ	0xFF4
  4592                           prodl	equ	0xFF3
  4593                           intcon	equ	0xFF2
  4594                           intcon2	equ	0xFF1
  4595                           intcon3	equ	0xFF0
  4596                           postinc0	equ	0xFEE
  4597                           wreg	equ	0xFE8
  4598                           indf1	equ	0xFE7
  4599                           postdec1	equ	0xFE5
  4600                           fsr1h	equ	0xFE2
  4601                           fsr1l	equ	0xFE1
  4602                           indf2	equ	0xFDF
  4603                           postinc2	equ	0xFDE
  4604                           postdec2	equ	0xFDD
  4605                           fsr2h	equ	0xFDA
  4606                           fsr2l	equ	0xFD9
  4607                           status	equ	0xFD8
  4608                           
  4609 ;; *************** function ___lldiv *****************
  4610 ;; Defined at:
  4611 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\lldiv.c"
  4612 ;; Parameters:    Size  Location     Type
  4613 ;;  dividend        4   27[COMRAM] unsigned long 
  4614 ;;  divisor         4   31[COMRAM] unsigned long 
  4615 ;; Auto vars:     Size  Location     Type
  4616 ;;  quotient        4   35[COMRAM] unsigned long 
  4617 ;;  counter         1   39[COMRAM] unsigned char 
  4618 ;; Return value:  Size  Location     Type
  4619 ;;                  4   27[COMRAM] unsigned long 
  4620 ;; Registers used:
  4621 ;;		wreg, status,2, status,0
  4622 ;; Tracked objects:
  4623 ;;		On entry : 0/0
  4624 ;;		On exit  : 0/0
  4625 ;;		Unchanged: 0/0
  4626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4627 ;;      Params:         8       0       0       0       0       0       0       0       0
  4628 ;;      Locals:         5       0       0       0       0       0       0       0       0
  4629 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4630 ;;      Totals:        13       0       0       0       0       0       0       0       0
  4631 ;;Total ram usage:       13 bytes
  4632 ;; Hardware stack levels used:    1
  4633 ;; Hardware stack levels required when called:    1
  4634 ;; This function calls:
  4635 ;;		Nothing
  4636 ;; This function is called by:
  4637 ;;		_data_print
  4638 ;;		_vel_med
  4639 ;;		_print_number
  4640 ;; This function uses a non-reentrant model
  4641 ;;
  4642                           
  4643                           	psect	text23
  4644  001D46                     __ptext23:
  4645                           	opt stack 0
  4646  001D46                     ___lldiv:
  4647                           	opt stack 26
  4648                           
  4649                           ;incstack = 0
  4650  001D46  0E00               	movlw	0
  4651  001D48  6E24               	movwf	___lldiv@quotient,c
  4652  001D4A  0E00               	movlw	0
  4653  001D4C  6E25               	movwf	___lldiv@quotient+1,c
  4654  001D4E  0E00               	movlw	0
  4655  001D50  6E26               	movwf	___lldiv@quotient+2,c
  4656  001D52  0E00               	movlw	0
  4657  001D54  6E27               	movwf	___lldiv@quotient+3,c
  4658  001D56  5020               	movf	___lldiv@divisor,w,c
  4659  001D58  1021               	iorwf	___lldiv@divisor+1,w,c
  4660  001D5A  1022               	iorwf	___lldiv@divisor+2,w,c
  4661  001D5C  1023               	iorwf	___lldiv@divisor+3,w,c
  4662  001D5E  B4D8               	btfsc	status,2,c
  4663  001D60  D02A               	goto	l568
  4664  001D62  0E01               	movlw	1
  4665  001D64  6E28               	movwf	___lldiv@counter,c
  4666  001D66  D006               	goto	l563
  4667  001D68  90D8               	bcf	status,0,c
  4668  001D6A  3620               	rlcf	___lldiv@divisor,f,c
  4669  001D6C  3621               	rlcf	___lldiv@divisor+1,f,c
  4670  001D6E  3622               	rlcf	___lldiv@divisor+2,f,c
  4671  001D70  3623               	rlcf	___lldiv@divisor+3,f,c
  4672  001D72  2A28               	incf	___lldiv@counter,f,c
  4673  001D74                     l563:
  4674  001D74  AE23               	btfss	___lldiv@divisor+3,7,c
  4675  001D76  D7F8               	goto	l564
  4676  001D78                     u1340:
  4677  001D78  90D8               	bcf	status,0,c
  4678  001D7A  3624               	rlcf	___lldiv@quotient,f,c
  4679  001D7C  3625               	rlcf	___lldiv@quotient+1,f,c
  4680  001D7E  3626               	rlcf	___lldiv@quotient+2,f,c
  4681  001D80  3627               	rlcf	___lldiv@quotient+3,f,c
  4682  001D82  5020               	movf	___lldiv@divisor,w,c
  4683  001D84  5C1C               	subwf	___lldiv@dividend,w,c
  4684  001D86  5021               	movf	___lldiv@divisor+1,w,c
  4685  001D88  581D               	subwfb	___lldiv@dividend+1,w,c
  4686  001D8A  5022               	movf	___lldiv@divisor+2,w,c
  4687  001D8C  581E               	subwfb	___lldiv@dividend+2,w,c
  4688  001D8E  5023               	movf	___lldiv@divisor+3,w,c
  4689  001D90  581F               	subwfb	___lldiv@dividend+3,w,c
  4690  001D92  A0D8               	btfss	status,0,c
  4691  001D94  D009               	goto	l567
  4692  001D96  5020               	movf	___lldiv@divisor,w,c
  4693  001D98  5E1C               	subwf	___lldiv@dividend,f,c
  4694  001D9A  5021               	movf	___lldiv@divisor+1,w,c
  4695  001D9C  5A1D               	subwfb	___lldiv@dividend+1,f,c
  4696  001D9E  5022               	movf	___lldiv@divisor+2,w,c
  4697  001DA0  5A1E               	subwfb	___lldiv@dividend+2,f,c
  4698  001DA2  5023               	movf	___lldiv@divisor+3,w,c
  4699  001DA4  5A1F               	subwfb	___lldiv@dividend+3,f,c
  4700  001DA6  8024               	bsf	___lldiv@quotient,0,c
  4701  001DA8                     l567:
  4702  001DA8  90D8               	bcf	status,0,c
  4703  001DAA  3223               	rrcf	___lldiv@divisor+3,f,c
  4704  001DAC  3222               	rrcf	___lldiv@divisor+2,f,c
  4705  001DAE  3221               	rrcf	___lldiv@divisor+1,f,c
  4706  001DB0  3220               	rrcf	___lldiv@divisor,f,c
  4707  001DB2  2E28               	decfsz	___lldiv@counter,f,c
  4708  001DB4  D7E1               	goto	u1340
  4709  001DB6                     l568:
  4710  001DB6  C024  F01C         	movff	___lldiv@quotient,?___lldiv
  4711  001DBA  C025  F01D         	movff	___lldiv@quotient+1,?___lldiv+1
  4712  001DBE  C026  F01E         	movff	___lldiv@quotient+2,?___lldiv+2
  4713  001DC2  C027  F01F         	movff	___lldiv@quotient+3,?___lldiv+3
  4714  001DC6  0012               	return		;funcret
  4715  001DC8                     __end_of___lldiv:
  4716                           	opt stack 0
  4717                           tblptru	equ	0xFF8
  4718                           tblptrh	equ	0xFF7
  4719                           tblptrl	equ	0xFF6
  4720                           tablat	equ	0xFF5
  4721                           prodh	equ	0xFF4
  4722                           prodl	equ	0xFF3
  4723                           intcon	equ	0xFF2
  4724                           intcon2	equ	0xFF1
  4725                           intcon3	equ	0xFF0
  4726                           postinc0	equ	0xFEE
  4727                           wreg	equ	0xFE8
  4728                           indf1	equ	0xFE7
  4729                           postdec1	equ	0xFE5
  4730                           fsr1h	equ	0xFE2
  4731                           fsr1l	equ	0xFE1
  4732                           indf2	equ	0xFDF
  4733                           postinc2	equ	0xFDE
  4734                           postdec2	equ	0xFDD
  4735                           fsr2h	equ	0xFDA
  4736                           fsr2l	equ	0xFD9
  4737                           status	equ	0xFD8
  4738                           
  4739 ;; *************** function _acel_med *****************
  4740 ;; Defined at:
  4741 ;;		line 466 in file "main.c"
  4742 ;; Parameters:    Size  Location     Type
  4743 ;;		None
  4744 ;; Auto vars:     Size  Location     Type
  4745 ;;  i               2   54[COMRAM] int 
  4746 ;; Return value:  Size  Location     Type
  4747 ;;                  1    wreg      void 
  4748 ;; Registers used:
  4749 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4750 ;; Tracked objects:
  4751 ;;		On entry : 0/0
  4752 ;;		On exit  : 0/0
  4753 ;;		Unchanged: 0/0
  4754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4755 ;;      Params:         0       0       0       0       0       0       0       0       0
  4756 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4757 ;;      Temps:          0      18       0       0       0       0       0       0       0
  4758 ;;      Totals:         2      18       0       0       0       0       0       0       0
  4759 ;;Total ram usage:       20 bytes
  4760 ;; Hardware stack levels used:    1
  4761 ;; Hardware stack levels required when called:    3
  4762 ;; This function calls:
  4763 ;;		___ftdiv
  4764 ;;		___fttol
  4765 ;;		___lltoft
  4766 ;;		___lmul
  4767 ;; This function is called by:
  4768 ;;		_data_tmr
  4769 ;; This function uses a non-reentrant model
  4770 ;;
  4771                           
  4772                           	psect	text24
  4773  000CA4                     __ptext24:
  4774                           	opt stack 0
  4775  000CA4                     _acel_med:
  4776                           	opt stack 25
  4777                           
  4778                           ;main.c: 467: int i;
  4779                           ;main.c: 468: for (i=1;i<3;i++) {
  4780                           
  4781                           ;incstack = 0
  4782  000CA4  0E00               	movlw	0
  4783  000CA6  6E38               	movwf	acel_med@i+1,c
  4784  000CA8  0E01               	movlw	1
  4785  000CAA  6E37               	movwf	acel_med@i,c
  4786  000CAC  BE38               	btfsc	acel_med@i+1,7,c
  4787  000CAE  D008               	goto	l181
  4788  000CB0  5038               	movf	acel_med@i+1,w,c
  4789  000CB2  E105               	bnz	u2330
  4790  000CB4  0E03               	movlw	3
  4791  000CB6  5C37               	subwf	acel_med@i,w,c
  4792  000CB8  B0D8               	btfsc	status,0,c
  4793  000CBA  D17B               	goto	u2340
  4794  000CBC  D001               	goto	l181
  4795  000CBE                     u2330:
  4796  000CBE  D179               	goto	u2340
  4797  000CC0                     l181:
  4798                           
  4799                           ;main.c: 469: acel_data[i] = vel_data[i]-vel_data[i+1];
  4800  000CC0  0EA2               	movlw	low _vel_data
  4801  000CC2  0100               	movlb	0	; () banked
  4802  000CC4  6FBD               	movwf	??_acel_med& (0+255),b
  4803  000CC6  0E00               	movlw	high _vel_data
  4804  000CC8  0100               	movlb	0	; () banked
  4805  000CCA  6FBE               	movwf	(??_acel_med+1)& (0+255),b
  4806  000CCC  90D8               	bcf	status,0,c
  4807  000CCE  3437               	rlcf	acel_med@i,w,c
  4808  000CD0  6ED9               	movwf	fsr2l,c
  4809  000CD2  3438               	rlcf	acel_med@i+1,w,c
  4810  000CD4  6EDA               	movwf	fsr2h,c
  4811  000CD6  90D8               	bcf	status,0,c
  4812  000CD8  36D9               	rlcf	fsr2l,f,c
  4813  000CDA  36DA               	rlcf	fsr2h,f,c
  4814  000CDC  0100               	movlb	0	; () banked
  4815  000CDE  51BD               	movf	??_acel_med& (0+255),w,b
  4816  000CE0  26D9               	addwf	fsr2l,f,c
  4817  000CE2  0100               	movlb	0	; () banked
  4818  000CE4  51BE               	movf	(??_acel_med+1)& (0+255),w,b
  4819  000CE6  22DA               	addwfc	fsr2h,f,c
  4820  000CE8  CFDE F0BF          	movff	postinc2,??_acel_med+2
  4821  000CEC  CFDE F0C0          	movff	postinc2,??_acel_med+3
  4822  000CF0  CFDE F0C1          	movff	postinc2,??_acel_med+4
  4823  000CF4  CFDE F0C2          	movff	postinc2,??_acel_med+5
  4824  000CF8  C037  F0C3         	movff	acel_med@i,??_acel_med+6
  4825  000CFC  C038  F0C4         	movff	acel_med@i+1,??_acel_med+7
  4826  000D00  0100               	movlb	0	; () banked
  4827  000D02  90D8               	bcf	status,0,c
  4828  000D04  37C3               	rlcf	(??_acel_med+6)& (0+255),f,b
  4829  000D06  37C4               	rlcf	(??_acel_med+7)& (0+255),f,b
  4830  000D08  0100               	movlb	0	; () banked
  4831  000D0A  90D8               	bcf	status,0,c
  4832  000D0C  37C3               	rlcf	(??_acel_med+6)& (0+255),f,b
  4833  000D0E  37C4               	rlcf	(??_acel_med+7)& (0+255),f,b
  4834  000D10  0E04               	movlw	4
  4835  000D12  0100               	movlb	0	; () banked
  4836  000D14  27C3               	addwf	(??_acel_med+6)& (0+255),f,b
  4837  000D16  0E00               	movlw	0
  4838  000D18  23C4               	addwfc	(??_acel_med+7)& (0+255),f,b
  4839  000D1A  0EA2               	movlw	low _vel_data
  4840  000D1C  0100               	movlb	0	; () banked
  4841  000D1E  25C3               	addwf	(??_acel_med+6)& (0+255),w,b
  4842  000D20  6ED9               	movwf	fsr2l,c
  4843  000D22  0E00               	movlw	high _vel_data
  4844  000D24  0100               	movlb	0	; () banked
  4845  000D26  21C4               	addwfc	(??_acel_med+7)& (0+255),w,b
  4846  000D28  6EDA               	movwf	fsr2h,c
  4847  000D2A  CFDE F0C5          	movff	postinc2,??_acel_med+8
  4848  000D2E  CFDE F0C6          	movff	postinc2,??_acel_med+9
  4849  000D32  CFDE F0C7          	movff	postinc2,??_acel_med+10
  4850  000D36  CFDE F0C8          	movff	postinc2,??_acel_med+11
  4851  000D3A  0100               	movlb	0	; () banked
  4852  000D3C  1FC5               	comf	(??_acel_med+8)& (0+255),f,b
  4853  000D3E  1FC6               	comf	(??_acel_med+9)& (0+255),f,b
  4854  000D40  1FC7               	comf	(??_acel_med+10)& (0+255),f,b
  4855  000D42  1FC8               	comf	(??_acel_med+11)& (0+255),f,b
  4856  000D44  2BC5               	incf	(??_acel_med+8)& (0+255),f,b
  4857  000D46  0E00               	movlw	0
  4858  000D48  23C6               	addwfc	(??_acel_med+9)& (0+255),f,b
  4859  000D4A  23C7               	addwfc	(??_acel_med+10)& (0+255),f,b
  4860  000D4C  23C8               	addwfc	(??_acel_med+11)& (0+255),f,b
  4861  000D4E  0100               	movlb	0	; () banked
  4862  000D50  51BF               	movf	(??_acel_med+2)& (0+255),w,b
  4863  000D52  0100               	movlb	0	; () banked
  4864  000D54  25C5               	addwf	(??_acel_med+8)& (0+255),w,b
  4865  000D56  0100               	movlb	0	; () banked
  4866  000D58  6FC9               	movwf	(??_acel_med+12)& (0+255),b
  4867  000D5A  0100               	movlb	0	; () banked
  4868  000D5C  51C0               	movf	(??_acel_med+3)& (0+255),w,b
  4869  000D5E  0100               	movlb	0	; () banked
  4870  000D60  21C6               	addwfc	(??_acel_med+9)& (0+255),w,b
  4871  000D62  0100               	movlb	0	; () banked
  4872  000D64  6FCA               	movwf	(??_acel_med+13)& (0+255),b
  4873  000D66  0100               	movlb	0	; () banked
  4874  000D68  51C1               	movf	(??_acel_med+4)& (0+255),w,b
  4875  000D6A  0100               	movlb	0	; () banked
  4876  000D6C  21C7               	addwfc	(??_acel_med+10)& (0+255),w,b
  4877  000D6E  0100               	movlb	0	; () banked
  4878  000D70  6FCB               	movwf	(??_acel_med+14)& (0+255),b
  4879  000D72  0100               	movlb	0	; () banked
  4880  000D74  51C2               	movf	(??_acel_med+5)& (0+255),w,b
  4881  000D76  0100               	movlb	0	; () banked
  4882  000D78  21C8               	addwfc	(??_acel_med+11)& (0+255),w,b
  4883  000D7A  0100               	movlb	0	; () banked
  4884  000D7C  6FCC               	movwf	(??_acel_med+15)& (0+255),b
  4885  000D7E  0E41               	movlw	low _acel_data
  4886  000D80  0100               	movlb	0	; () banked
  4887  000D82  6FCD               	movwf	(??_acel_med+16)& (0+255),b
  4888  000D84  0E00               	movlw	high _acel_data
  4889  000D86  0100               	movlb	0	; () banked
  4890  000D88  6FCE               	movwf	(??_acel_med+17)& (0+255),b
  4891  000D8A  90D8               	bcf	status,0,c
  4892  000D8C  3437               	rlcf	acel_med@i,w,c
  4893  000D8E  6ED9               	movwf	fsr2l,c
  4894  000D90  3438               	rlcf	acel_med@i+1,w,c
  4895  000D92  6EDA               	movwf	fsr2h,c
  4896  000D94  90D8               	bcf	status,0,c
  4897  000D96  36D9               	rlcf	fsr2l,f,c
  4898  000D98  36DA               	rlcf	fsr2h,f,c
  4899  000D9A  0100               	movlb	0	; () banked
  4900  000D9C  51CD               	movf	(??_acel_med+16)& (0+255),w,b
  4901  000D9E  26D9               	addwf	fsr2l,f,c
  4902  000DA0  0100               	movlb	0	; () banked
  4903  000DA2  51CE               	movf	(??_acel_med+17)& (0+255),w,b
  4904  000DA4  22DA               	addwfc	fsr2h,f,c
  4905  000DA6  C0C9  FFDE         	movff	??_acel_med+12,postinc2
  4906  000DAA  C0CA  FFDE         	movff	??_acel_med+13,postinc2
  4907  000DAE  C0CB  FFDE         	movff	??_acel_med+14,postinc2
  4908  000DB2  C0CC  FFDE         	movff	??_acel_med+15,postinc2
  4909                           
  4910                           ; BSR set to: 0
  4911                           ;main.c: 470: acel_data[i] = 1000000*acel_data[i];
  4912  000DB6  0E41               	movlw	low _acel_data
  4913  000DB8  0100               	movlb	0	; () banked
  4914  000DBA  6FBD               	movwf	??_acel_med& (0+255),b
  4915  000DBC  0E00               	movlw	high _acel_data
  4916  000DBE  0100               	movlb	0	; () banked
  4917  000DC0  6FBE               	movwf	(??_acel_med+1)& (0+255),b
  4918  000DC2  90D8               	bcf	status,0,c
  4919  000DC4  3437               	rlcf	acel_med@i,w,c
  4920  000DC6  6ED9               	movwf	fsr2l,c
  4921  000DC8  3438               	rlcf	acel_med@i+1,w,c
  4922  000DCA  6EDA               	movwf	fsr2h,c
  4923  000DCC  90D8               	bcf	status,0,c
  4924  000DCE  36D9               	rlcf	fsr2l,f,c
  4925  000DD0  36DA               	rlcf	fsr2h,f,c
  4926  000DD2  0100               	movlb	0	; () banked
  4927  000DD4  51BD               	movf	??_acel_med& (0+255),w,b
  4928  000DD6  26D9               	addwf	fsr2l,f,c
  4929  000DD8  0100               	movlb	0	; () banked
  4930  000DDA  51BE               	movf	(??_acel_med+1)& (0+255),w,b
  4931  000DDC  22DA               	addwfc	fsr2h,f,c
  4932  000DDE  CFDE F013          	movff	postinc2,___lmul@multiplier
  4933  000DE2  CFDE F014          	movff	postinc2,___lmul@multiplier+1
  4934  000DE6  CFDE F015          	movff	postinc2,___lmul@multiplier+2
  4935  000DEA  CFDE F016          	movff	postinc2,___lmul@multiplier+3
  4936  000DEE  0E40               	movlw	64
  4937  000DF0  6E17               	movwf	___lmul@multiplicand,c
  4938  000DF2  0E42               	movlw	66
  4939  000DF4  6E18               	movwf	___lmul@multiplicand+1,c
  4940  000DF6  0E0F               	movlw	15
  4941  000DF8  6E19               	movwf	___lmul@multiplicand+2,c
  4942  000DFA  0E00               	movlw	0
  4943  000DFC  6E1A               	movwf	___lmul@multiplicand+3,c
  4944  000DFE  EC9D  F010         	call	___lmul	;wreg free
  4945  000E02  0E41               	movlw	low _acel_data
  4946  000E04  0100               	movlb	0	; () banked
  4947  000E06  6FBF               	movwf	(??_acel_med+2)& (0+255),b
  4948  000E08  0E00               	movlw	high _acel_data
  4949  000E0A  0100               	movlb	0	; () banked
  4950  000E0C  6FC0               	movwf	(??_acel_med+3)& (0+255),b
  4951  000E0E  90D8               	bcf	status,0,c
  4952  000E10  3437               	rlcf	acel_med@i,w,c
  4953  000E12  6ED9               	movwf	fsr2l,c
  4954  000E14  3438               	rlcf	acel_med@i+1,w,c
  4955  000E16  6EDA               	movwf	fsr2h,c
  4956  000E18  90D8               	bcf	status,0,c
  4957  000E1A  36D9               	rlcf	fsr2l,f,c
  4958  000E1C  36DA               	rlcf	fsr2h,f,c
  4959  000E1E  0100               	movlb	0	; () banked
  4960  000E20  51BF               	movf	(??_acel_med+2)& (0+255),w,b
  4961  000E22  26D9               	addwf	fsr2l,f,c
  4962  000E24  0100               	movlb	0	; () banked
  4963  000E26  51C0               	movf	(??_acel_med+3)& (0+255),w,b
  4964  000E28  22DA               	addwfc	fsr2h,f,c
  4965  000E2A  C013  FFDE         	movff	?___lmul,postinc2
  4966  000E2E  C014  FFDE         	movff	?___lmul+1,postinc2
  4967  000E32  C015  FFDE         	movff	?___lmul+2,postinc2
  4968  000E36  C016  FFDE         	movff	?___lmul+3,postinc2
  4969                           
  4970                           ; BSR set to: 0
  4971                           ;main.c: 471: acel_data[i] = acel_data[i]/(float)time_data[i+2];
  4972  000E3A  C037  F0BD         	movff	acel_med@i,??_acel_med
  4973  000E3E  C038  F0BE         	movff	acel_med@i+1,??_acel_med+1
  4974  000E42  0100               	movlb	0	; () banked
  4975  000E44  90D8               	bcf	status,0,c
  4976  000E46  37BD               	rlcf	??_acel_med& (0+255),f,b
  4977  000E48  37BE               	rlcf	(??_acel_med+1)& (0+255),f,b
  4978  000E4A  0100               	movlb	0	; () banked
  4979  000E4C  90D8               	bcf	status,0,c
  4980  000E4E  37BD               	rlcf	??_acel_med& (0+255),f,b
  4981  000E50  37BE               	rlcf	(??_acel_med+1)& (0+255),f,b
  4982  000E52  0E08               	movlw	8
  4983  000E54  0100               	movlb	0	; () banked
  4984  000E56  27BD               	addwf	??_acel_med& (0+255),f,b
  4985  000E58  0E00               	movlw	0
  4986  000E5A  23BE               	addwfc	(??_acel_med+1)& (0+255),f,b
  4987  000E5C  0E8E               	movlw	low _time_data
  4988  000E5E  0100               	movlb	0	; () banked
  4989  000E60  25BD               	addwf	??_acel_med& (0+255),w,b
  4990  000E62  6ED9               	movwf	fsr2l,c
  4991  000E64  0E00               	movlw	high _time_data
  4992  000E66  0100               	movlb	0	; () banked
  4993  000E68  21BE               	addwfc	(??_acel_med+1)& (0+255),w,b
  4994  000E6A  6EDA               	movwf	fsr2h,c
  4995  000E6C  CFDE F01B          	movff	postinc2,___lltoft@c
  4996  000E70  CFDE F01C          	movff	postinc2,___lltoft@c+1
  4997  000E74  CFDE F01D          	movff	postinc2,___lltoft@c+2
  4998  000E78  CFDE F01E          	movff	postinc2,___lltoft@c+3
  4999  000E7C  EC44  F010         	call	___lltoft	;wreg free
  5000  000E80  C01B  F027         	movff	?___lltoft,___ftdiv@f2
  5001  000E84  C01C  F028         	movff	?___lltoft+1,___ftdiv@f2+1
  5002  000E88  C01D  F029         	movff	?___lltoft+2,___ftdiv@f2+2
  5003  000E8C  0E41               	movlw	low _acel_data
  5004  000E8E  0100               	movlb	0	; () banked
  5005  000E90  6FBF               	movwf	(??_acel_med+2)& (0+255),b
  5006  000E92  0E00               	movlw	high _acel_data
  5007  000E94  0100               	movlb	0	; () banked
  5008  000E96  6FC0               	movwf	(??_acel_med+3)& (0+255),b
  5009  000E98  90D8               	bcf	status,0,c
  5010  000E9A  3437               	rlcf	acel_med@i,w,c
  5011  000E9C  6ED9               	movwf	fsr2l,c
  5012  000E9E  3438               	rlcf	acel_med@i+1,w,c
  5013  000EA0  6EDA               	movwf	fsr2h,c
  5014  000EA2  90D8               	bcf	status,0,c
  5015  000EA4  36D9               	rlcf	fsr2l,f,c
  5016  000EA6  36DA               	rlcf	fsr2h,f,c
  5017  000EA8  0100               	movlb	0	; () banked
  5018  000EAA  51BF               	movf	(??_acel_med+2)& (0+255),w,b
  5019  000EAC  26D9               	addwf	fsr2l,f,c
  5020  000EAE  0100               	movlb	0	; () banked
  5021  000EB0  51C0               	movf	(??_acel_med+3)& (0+255),w,b
  5022  000EB2  22DA               	addwfc	fsr2h,f,c
  5023  000EB4  CFDE F01B          	movff	postinc2,___lltoft@c
  5024  000EB8  CFDE F01C          	movff	postinc2,___lltoft@c+1
  5025  000EBC  CFDE F01D          	movff	postinc2,___lltoft@c+2
  5026  000EC0  CFDE F01E          	movff	postinc2,___lltoft@c+3
  5027  000EC4  EC44  F010         	call	___lltoft	;wreg free
  5028  000EC8  C01B  F024         	movff	?___lltoft,___ftdiv@f1
  5029  000ECC  C01C  F025         	movff	?___lltoft+1,___ftdiv@f1+1
  5030  000ED0  C01D  F026         	movff	?___lltoft+2,___ftdiv@f1+2
  5031  000ED4  EC3E  F00C         	call	___ftdiv	;wreg free
  5032  000ED8  C024  F033         	movff	?___ftdiv,___fttol@f1
  5033  000EDC  C025  F034         	movff	?___ftdiv+1,___fttol@f1+1
  5034  000EE0  C026  F035         	movff	?___ftdiv+2,___fttol@f1+2
  5035  000EE4  EC2D  F00B         	call	___fttol	;wreg free
  5036  000EE8  0E41               	movlw	low _acel_data
  5037  000EEA  0100               	movlb	0	; () banked
  5038  000EEC  6FC1               	movwf	(??_acel_med+4)& (0+255),b
  5039  000EEE  0E00               	movlw	high _acel_data
  5040  000EF0  0100               	movlb	0	; () banked
  5041  000EF2  6FC2               	movwf	(??_acel_med+5)& (0+255),b
  5042  000EF4  90D8               	bcf	status,0,c
  5043  000EF6  3437               	rlcf	acel_med@i,w,c
  5044  000EF8  6ED9               	movwf	fsr2l,c
  5045  000EFA  3438               	rlcf	acel_med@i+1,w,c
  5046  000EFC  6EDA               	movwf	fsr2h,c
  5047  000EFE  90D8               	bcf	status,0,c
  5048  000F00  36D9               	rlcf	fsr2l,f,c
  5049  000F02  36DA               	rlcf	fsr2h,f,c
  5050  000F04  0100               	movlb	0	; () banked
  5051  000F06  51C1               	movf	(??_acel_med+4)& (0+255),w,b
  5052  000F08  26D9               	addwf	fsr2l,f,c
  5053  000F0A  0100               	movlb	0	; () banked
  5054  000F0C  51C2               	movf	(??_acel_med+5)& (0+255),w,b
  5055  000F0E  22DA               	addwfc	fsr2h,f,c
  5056  000F10  C033  FFDE         	movff	?___fttol,postinc2
  5057  000F14  C034  FFDE         	movff	?___fttol+1,postinc2
  5058  000F18  C035  FFDE         	movff	?___fttol+2,postinc2
  5059  000F1C  C036  FFDE         	movff	?___fttol+3,postinc2
  5060                           
  5061                           ; BSR set to: 0
  5062                           ;main.c: 472: acel_data[i] = 100*acel_data[i];
  5063  000F20  0E41               	movlw	low _acel_data
  5064  000F22  0100               	movlb	0	; () banked
  5065  000F24  6FBD               	movwf	??_acel_med& (0+255),b
  5066  000F26  0E00               	movlw	high _acel_data
  5067  000F28  0100               	movlb	0	; () banked
  5068  000F2A  6FBE               	movwf	(??_acel_med+1)& (0+255),b
  5069  000F2C  90D8               	bcf	status,0,c
  5070  000F2E  3437               	rlcf	acel_med@i,w,c
  5071  000F30  6ED9               	movwf	fsr2l,c
  5072  000F32  3438               	rlcf	acel_med@i+1,w,c
  5073  000F34  6EDA               	movwf	fsr2h,c
  5074  000F36  90D8               	bcf	status,0,c
  5075  000F38  36D9               	rlcf	fsr2l,f,c
  5076  000F3A  36DA               	rlcf	fsr2h,f,c
  5077  000F3C  0100               	movlb	0	; () banked
  5078  000F3E  51BD               	movf	??_acel_med& (0+255),w,b
  5079  000F40  26D9               	addwf	fsr2l,f,c
  5080  000F42  0100               	movlb	0	; () banked
  5081  000F44  51BE               	movf	(??_acel_med+1)& (0+255),w,b
  5082  000F46  22DA               	addwfc	fsr2h,f,c
  5083  000F48  CFDE F013          	movff	postinc2,___lmul@multiplier
  5084  000F4C  CFDE F014          	movff	postinc2,___lmul@multiplier+1
  5085  000F50  CFDE F015          	movff	postinc2,___lmul@multiplier+2
  5086  000F54  CFDE F016          	movff	postinc2,___lmul@multiplier+3
  5087  000F58  0E64               	movlw	100
  5088  000F5A  6E17               	movwf	___lmul@multiplicand,c
  5089  000F5C  0E00               	movlw	0
  5090  000F5E  6E18               	movwf	___lmul@multiplicand+1,c
  5091  000F60  0E00               	movlw	0
  5092  000F62  6E19               	movwf	___lmul@multiplicand+2,c
  5093  000F64  0E00               	movlw	0
  5094  000F66  6E1A               	movwf	___lmul@multiplicand+3,c
  5095  000F68  EC9D  F010         	call	___lmul	;wreg free
  5096  000F6C  0E41               	movlw	low _acel_data
  5097  000F6E  0100               	movlb	0	; () banked
  5098  000F70  6FBF               	movwf	(??_acel_med+2)& (0+255),b
  5099  000F72  0E00               	movlw	high _acel_data
  5100  000F74  0100               	movlb	0	; () banked
  5101  000F76  6FC0               	movwf	(??_acel_med+3)& (0+255),b
  5102  000F78  90D8               	bcf	status,0,c
  5103  000F7A  3437               	rlcf	acel_med@i,w,c
  5104  000F7C  6ED9               	movwf	fsr2l,c
  5105  000F7E  3438               	rlcf	acel_med@i+1,w,c
  5106  000F80  6EDA               	movwf	fsr2h,c
  5107  000F82  90D8               	bcf	status,0,c
  5108  000F84  36D9               	rlcf	fsr2l,f,c
  5109  000F86  36DA               	rlcf	fsr2h,f,c
  5110  000F88  0100               	movlb	0	; () banked
  5111  000F8A  51BF               	movf	(??_acel_med+2)& (0+255),w,b
  5112  000F8C  26D9               	addwf	fsr2l,f,c
  5113  000F8E  0100               	movlb	0	; () banked
  5114  000F90  51C0               	movf	(??_acel_med+3)& (0+255),w,b
  5115  000F92  22DA               	addwfc	fsr2h,f,c
  5116  000F94  C013  FFDE         	movff	?___lmul,postinc2
  5117  000F98  C014  FFDE         	movff	?___lmul+1,postinc2
  5118  000F9C  C015  FFDE         	movff	?___lmul+2,postinc2
  5119  000FA0  C016  FFDE         	movff	?___lmul+3,postinc2
  5120                           
  5121                           ; BSR set to: 0
  5122  000FA4  4A37               	infsnz	acel_med@i,f,c
  5123  000FA6  2A38               	incf	acel_med@i+1,f,c
  5124                           
  5125                           ; BSR set to: 0
  5126  000FA8  BE38               	btfsc	acel_med@i+1,7,c
  5127  000FAA  D68A               	goto	l181
  5128  000FAC  5038               	movf	acel_med@i+1,w,c
  5129  000FAE  E101               	bnz	l2506
  5130  000FB0  D681               	goto	L4
  5131  000FB2                     u2340:
  5132  000FB2                     l2506:
  5133                           
  5134                           ;main.c: 473: }
  5135                           ;main.c: 474: for (i=1;i<3;i++) {
  5136  000FB2  0E00               	movlw	0
  5137  000FB4  6E38               	movwf	acel_med@i+1,c
  5138  000FB6  0E01               	movlw	1
  5139  000FB8  6E37               	movwf	acel_med@i,c
  5140  000FBA                     l2508:
  5141  000FBA  BE38               	btfsc	acel_med@i+1,7,c
  5142  000FBC  D006               	goto	l183
  5143  000FBE  5038               	movf	acel_med@i+1,w,c
  5144  000FC0  E13B               	bnz	l2518
  5145  000FC2  0E03               	movlw	3
  5146  000FC4  5C37               	subwf	acel_med@i,w,c
  5147  000FC6  B0D8               	btfsc	status,0,c
  5148  000FC8  D037               	goto	u2360
  5149  000FCA                     l183:
  5150                           
  5151                           ;main.c: 475: acel_tot = acel_tot + acel_data[i];
  5152  000FCA  0E41               	movlw	low _acel_data
  5153  000FCC  0100               	movlb	0	; () banked
  5154  000FCE  6FBD               	movwf	??_acel_med& (0+255),b
  5155  000FD0  0E00               	movlw	high _acel_data
  5156  000FD2  0100               	movlb	0	; () banked
  5157  000FD4  6FBE               	movwf	(??_acel_med+1)& (0+255),b
  5158  000FD6  90D8               	bcf	status,0,c
  5159  000FD8  3437               	rlcf	acel_med@i,w,c
  5160  000FDA  6ED9               	movwf	fsr2l,c
  5161  000FDC  3438               	rlcf	acel_med@i+1,w,c
  5162  000FDE  6EDA               	movwf	fsr2h,c
  5163  000FE0  90D8               	bcf	status,0,c
  5164  000FE2  36D9               	rlcf	fsr2l,f,c
  5165  000FE4  36DA               	rlcf	fsr2h,f,c
  5166  000FE6  0100               	movlb	0	; () banked
  5167  000FE8  51BD               	movf	??_acel_med& (0+255),w,b
  5168  000FEA  26D9               	addwf	fsr2l,f,c
  5169  000FEC  0100               	movlb	0	; () banked
  5170  000FEE  51BE               	movf	(??_acel_med+1)& (0+255),w,b
  5171  000FF0  22DA               	addwfc	fsr2h,f,c
  5172  000FF2  CFDE F0BF          	movff	postinc2,??_acel_med+2
  5173  000FF6  CFDE F0C0          	movff	postinc2,??_acel_med+3
  5174  000FFA  CFDE F0C1          	movff	postinc2,??_acel_med+4
  5175  000FFE  CFDE F0C2          	movff	postinc2,??_acel_med+5
  5176  001002  0100               	movlb	0	; () banked
  5177  001004  516C               	movf	_acel_tot& (0+255),w,b
  5178  001006  0100               	movlb	0	; () banked
  5179  001008  25BF               	addwf	(??_acel_med+2)& (0+255),w,b
  5180  00100A  0100               	movlb	0	; () banked
  5181  00100C  6F6C               	movwf	_acel_tot& (0+255),b
  5182  00100E  0100               	movlb	0	; () banked
  5183  001010  516D               	movf	(_acel_tot+1)& (0+255),w,b
  5184  001012  0100               	movlb	0	; () banked
  5185  001014  21C0               	addwfc	(??_acel_med+3)& (0+255),w,b
  5186  001016  0100               	movlb	0	; () banked
  5187  001018  6F6D               	movwf	(_acel_tot+1)& (0+255),b
  5188  00101A  0100               	movlb	0	; () banked
  5189  00101C  516E               	movf	(_acel_tot+2)& (0+255),w,b
  5190  00101E  0100               	movlb	0	; () banked
  5191  001020  21C1               	addwfc	(??_acel_med+4)& (0+255),w,b
  5192  001022  0100               	movlb	0	; () banked
  5193  001024  6F6E               	movwf	(_acel_tot+2)& (0+255),b
  5194  001026  0100               	movlb	0	; () banked
  5195  001028  516F               	movf	(_acel_tot+3)& (0+255),w,b
  5196  00102A  0100               	movlb	0	; () banked
  5197  00102C  21C2               	addwfc	(??_acel_med+5)& (0+255),w,b
  5198  00102E  0100               	movlb	0	; () banked
  5199  001030  6F6F               	movwf	(_acel_tot+3)& (0+255),b
  5200                           
  5201                           ; BSR set to: 0
  5202  001032  4A37               	infsnz	acel_med@i,f,c
  5203  001034  2A38               	incf	acel_med@i+1,f,c
  5204  001036  D7C1               	goto	l2508
  5205  001038                     u2360:
  5206  001038                     l2518:
  5207                           
  5208                           ;main.c: 476: }
  5209                           ;main.c: 477: aceleracao_med = acel_tot/2;
  5210  001038  C06C  F0BD         	movff	_acel_tot,??_acel_med
  5211  00103C  C06D  F0BE         	movff	_acel_tot+1,??_acel_med+1
  5212  001040  C06E  F0BF         	movff	_acel_tot+2,??_acel_med+2
  5213  001044  C06F  F0C0         	movff	_acel_tot+3,??_acel_med+3
  5214  001048  0100               	movlb	0	; () banked
  5215  00104A  90D8               	bcf	status,0,c
  5216  00104C  33C0               	rrcf	(??_acel_med+3)& (0+255),f,b
  5217  00104E  33BF               	rrcf	(??_acel_med+2)& (0+255),f,b
  5218  001050  33BE               	rrcf	(??_acel_med+1)& (0+255),f,b
  5219  001052  33BD               	rrcf	??_acel_med& (0+255),f,b
  5220  001054  C0BD  F064         	movff	??_acel_med,_aceleracao_med
  5221  001058  C0BE  F065         	movff	??_acel_med+1,_aceleracao_med+1
  5222  00105C  C0BF  F066         	movff	??_acel_med+2,_aceleracao_med+2
  5223  001060  C0C0  F067         	movff	??_acel_med+3,_aceleracao_med+3
  5224                           
  5225                           ; BSR set to: 0
  5226  001064  0012               	return		;funcret
  5227  001066                     __end_of_acel_med:
  5228                           	opt stack 0
  5229                           tblptru	equ	0xFF8
  5230                           tblptrh	equ	0xFF7
  5231                           tblptrl	equ	0xFF6
  5232                           tablat	equ	0xFF5
  5233                           prodh	equ	0xFF4
  5234                           prodl	equ	0xFF3
  5235                           intcon	equ	0xFF2
  5236                           intcon2	equ	0xFF1
  5237                           intcon3	equ	0xFF0
  5238                           postinc0	equ	0xFEE
  5239                           wreg	equ	0xFE8
  5240                           indf1	equ	0xFE7
  5241                           postdec1	equ	0xFE5
  5242                           fsr1h	equ	0xFE2
  5243                           fsr1l	equ	0xFE1
  5244                           indf2	equ	0xFDF
  5245                           postinc2	equ	0xFDE
  5246                           postdec2	equ	0xFDD
  5247                           fsr2h	equ	0xFDA
  5248                           fsr2l	equ	0xFD9
  5249                           status	equ	0xFD8
  5250                           
  5251 ;; *************** function ___lmul *****************
  5252 ;; Defined at:
  5253 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\Umul32.c"
  5254 ;; Parameters:    Size  Location     Type
  5255 ;;  multiplier      4   18[COMRAM] unsigned long 
  5256 ;;  multiplicand    4   22[COMRAM] unsigned long 
  5257 ;; Auto vars:     Size  Location     Type
  5258 ;;  product         4   26[COMRAM] unsigned long 
  5259 ;; Return value:  Size  Location     Type
  5260 ;;                  4   18[COMRAM] unsigned long 
  5261 ;; Registers used:
  5262 ;;		wreg, status,2, status,0
  5263 ;; Tracked objects:
  5264 ;;		On entry : 0/0
  5265 ;;		On exit  : 0/0
  5266 ;;		Unchanged: 0/0
  5267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5268 ;;      Params:         8       0       0       0       0       0       0       0       0
  5269 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5270 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5271 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5272 ;;Total ram usage:       12 bytes
  5273 ;; Hardware stack levels used:    1
  5274 ;; Hardware stack levels required when called:    1
  5275 ;; This function calls:
  5276 ;;		Nothing
  5277 ;; This function is called by:
  5278 ;;		_vel_med
  5279 ;;		_acel_med
  5280 ;; This function uses a non-reentrant model
  5281 ;;
  5282                           
  5283                           	psect	text25
  5284  00213A                     __ptext25:
  5285                           	opt stack 0
  5286  00213A                     ___lmul:
  5287                           	opt stack 26
  5288                           
  5289                           ; BSR set to: 0
  5290                           ;incstack = 0
  5291  00213A  0E00               	movlw	0
  5292  00213C  6E1B               	movwf	___lmul@product,c
  5293  00213E  0E00               	movlw	0
  5294  002140  6E1C               	movwf	___lmul@product+1,c
  5295  002142  0E00               	movlw	0
  5296  002144  6E1D               	movwf	___lmul@product+2,c
  5297  002146  0E00               	movlw	0
  5298  002148  6E1E               	movwf	___lmul@product+3,c
  5299  00214A  A013               	btfss	___lmul@multiplier,0,c
  5300  00214C  D008               	goto	l225
  5301  00214E  5017               	movf	___lmul@multiplicand,w,c
  5302  002150  261B               	addwf	___lmul@product,f,c
  5303  002152  5018               	movf	___lmul@multiplicand+1,w,c
  5304  002154  221C               	addwfc	___lmul@product+1,f,c
  5305  002156  5019               	movf	___lmul@multiplicand+2,w,c
  5306  002158  221D               	addwfc	___lmul@product+2,f,c
  5307  00215A  501A               	movf	___lmul@multiplicand+3,w,c
  5308  00215C  221E               	addwfc	___lmul@product+3,f,c
  5309  00215E                     l225:
  5310  00215E  90D8               	bcf	status,0,c
  5311  002160  3617               	rlcf	___lmul@multiplicand,f,c
  5312  002162  3618               	rlcf	___lmul@multiplicand+1,f,c
  5313  002164  3619               	rlcf	___lmul@multiplicand+2,f,c
  5314  002166  361A               	rlcf	___lmul@multiplicand+3,f,c
  5315  002168  90D8               	bcf	status,0,c
  5316  00216A  3216               	rrcf	___lmul@multiplier+3,f,c
  5317  00216C  3215               	rrcf	___lmul@multiplier+2,f,c
  5318  00216E  3214               	rrcf	___lmul@multiplier+1,f,c
  5319  002170  3213               	rrcf	___lmul@multiplier,f,c
  5320  002172  5013               	movf	___lmul@multiplier,w,c
  5321  002174  1014               	iorwf	___lmul@multiplier+1,w,c
  5322  002176  1015               	iorwf	___lmul@multiplier+2,w,c
  5323  002178  1016               	iorwf	___lmul@multiplier+3,w,c
  5324  00217A  A4D8               	btfss	status,2,c
  5325  00217C  D7E6               	goto	l224
  5326  00217E  C01B  F013         	movff	___lmul@product,?___lmul
  5327  002182  C01C  F014         	movff	___lmul@product+1,?___lmul+1
  5328  002186  C01D  F015         	movff	___lmul@product+2,?___lmul+2
  5329  00218A  C01E  F016         	movff	___lmul@product+3,?___lmul+3
  5330  00218E  0012               	return		;funcret
  5331  002190                     __end_of___lmul:
  5332                           	opt stack 0
  5333                           tblptru	equ	0xFF8
  5334                           tblptrh	equ	0xFF7
  5335                           tblptrl	equ	0xFF6
  5336                           tablat	equ	0xFF5
  5337                           prodh	equ	0xFF4
  5338                           prodl	equ	0xFF3
  5339                           intcon	equ	0xFF2
  5340                           intcon2	equ	0xFF1
  5341                           intcon3	equ	0xFF0
  5342                           postinc0	equ	0xFEE
  5343                           wreg	equ	0xFE8
  5344                           indf1	equ	0xFE7
  5345                           postdec1	equ	0xFE5
  5346                           fsr1h	equ	0xFE2
  5347                           fsr1l	equ	0xFE1
  5348                           indf2	equ	0xFDF
  5349                           postinc2	equ	0xFDE
  5350                           postdec2	equ	0xFDD
  5351                           fsr2h	equ	0xFDA
  5352                           fsr2l	equ	0xFD9
  5353                           status	equ	0xFD8
  5354                           
  5355 ;; *************** function ___lltoft *****************
  5356 ;; Defined at:
  5357 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\lltoft.c"
  5358 ;; Parameters:    Size  Location     Type
  5359 ;;  c               4   26[COMRAM] unsigned long 
  5360 ;; Auto vars:     Size  Location     Type
  5361 ;;  exp             1   34[COMRAM] unsigned char 
  5362 ;; Return value:  Size  Location     Type
  5363 ;;                  3   26[COMRAM] float 
  5364 ;; Registers used:
  5365 ;;		wreg, status,2, status,0, cstack
  5366 ;; Tracked objects:
  5367 ;;		On entry : 0/0
  5368 ;;		On exit  : 0/0
  5369 ;;		Unchanged: 0/0
  5370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5371 ;;      Params:         4       0       0       0       0       0       0       0       0
  5372 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5373 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5374 ;;      Totals:         9       0       0       0       0       0       0       0       0
  5375 ;;Total ram usage:        9 bytes
  5376 ;; Hardware stack levels used:    1
  5377 ;; Hardware stack levels required when called:    2
  5378 ;; This function calls:
  5379 ;;		___ftpack
  5380 ;; This function is called by:
  5381 ;;		_vel_med
  5382 ;;		_acel_med
  5383 ;; This function uses a non-reentrant model
  5384 ;;
  5385                           
  5386                           	psect	text26
  5387  002088                     __ptext26:
  5388                           	opt stack 0
  5389  002088                     ___lltoft:
  5390                           	opt stack 25
  5391                           
  5392                           ;incstack = 0
  5393  002088  0E8E               	movlw	142
  5394  00208A  6E23               	movwf	___lltoft@exp,c
  5395  00208C  D006               	goto	l584
  5396  00208E  90D8               	bcf	status,0,c
  5397  002090  321E               	rrcf	___lltoft@c+3,f,c
  5398  002092  321D               	rrcf	___lltoft@c+2,f,c
  5399  002094  321C               	rrcf	___lltoft@c+1,f,c
  5400  002096  321B               	rrcf	___lltoft@c,f,c
  5401  002098  2A23               	incf	___lltoft@exp,f,c
  5402  00209A                     l584:
  5403  00209A  0E00               	movlw	0
  5404  00209C  141B               	andwf	___lltoft@c,w,c
  5405  00209E  6E1F               	movwf	??___lltoft& (0+255),c
  5406  0020A0  0E00               	movlw	0
  5407  0020A2  141C               	andwf	___lltoft@c+1,w,c
  5408  0020A4  6E20               	movwf	(??___lltoft+1)& (0+255),c
  5409  0020A6  0E00               	movlw	0
  5410  0020A8  141D               	andwf	___lltoft@c+2,w,c
  5411  0020AA  6E21               	movwf	(??___lltoft+2)& (0+255),c
  5412  0020AC  0EFF               	movlw	255
  5413  0020AE  141E               	andwf	___lltoft@c+3,w,c
  5414  0020B0  6E22               	movwf	(??___lltoft+3)& (0+255),c
  5415  0020B2  501F               	movf	??___lltoft,w,c
  5416  0020B4  1020               	iorwf	??___lltoft+1,w,c
  5417  0020B6  1021               	iorwf	??___lltoft+2,w,c
  5418  0020B8  1022               	iorwf	??___lltoft+3,w,c
  5419  0020BA  A4D8               	btfss	status,2,c
  5420  0020BC  D7E8               	goto	l585
  5421  0020BE  C01B  F013         	movff	___lltoft@c,___ftpack@arg
  5422  0020C2  C01C  F014         	movff	___lltoft@c+1,___ftpack@arg+1
  5423  0020C6  C01D  F015         	movff	___lltoft@c+2,___ftpack@arg+2
  5424  0020CA  C023  F016         	movff	___lltoft@exp,___ftpack@exp
  5425  0020CE  0E00               	movlw	0
  5426  0020D0  6E17               	movwf	___ftpack@sign,c
  5427  0020D2  EC23  F00D         	call	___ftpack	;wreg free
  5428  0020D6  C013  F01B         	movff	?___ftpack,?___lltoft
  5429  0020DA  C014  F01C         	movff	?___ftpack+1,?___lltoft+1
  5430  0020DE  C015  F01D         	movff	?___ftpack+2,?___lltoft+2
  5431  0020E2  0012               	return	
  5432  0020E4                     __end_of___lltoft:
  5433                           	opt stack 0
  5434                           tblptru	equ	0xFF8
  5435                           tblptrh	equ	0xFF7
  5436                           tblptrl	equ	0xFF6
  5437                           tablat	equ	0xFF5
  5438                           prodh	equ	0xFF4
  5439                           prodl	equ	0xFF3
  5440                           intcon	equ	0xFF2
  5441                           intcon2	equ	0xFF1
  5442                           intcon3	equ	0xFF0
  5443                           postinc0	equ	0xFEE
  5444                           wreg	equ	0xFE8
  5445                           indf1	equ	0xFE7
  5446                           postdec1	equ	0xFE5
  5447                           fsr1h	equ	0xFE2
  5448                           fsr1l	equ	0xFE1
  5449                           indf2	equ	0xFDF
  5450                           postinc2	equ	0xFDE
  5451                           postdec2	equ	0xFDD
  5452                           fsr2h	equ	0xFDA
  5453                           fsr2l	equ	0xFD9
  5454                           status	equ	0xFD8
  5455                           
  5456 ;; *************** function ___fttol *****************
  5457 ;; Defined at:
  5458 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\fttol.c"
  5459 ;; Parameters:    Size  Location     Type
  5460 ;;  f1              3   50[COMRAM] float 
  5461 ;; Auto vars:     Size  Location     Type
  5462 ;;  lval            4    6[BANK0 ] unsigned long 
  5463 ;;  exp1            1   10[BANK0 ] unsigned char 
  5464 ;;  sign1           1    5[BANK0 ] unsigned char 
  5465 ;; Return value:  Size  Location     Type
  5466 ;;                  4   50[COMRAM] long 
  5467 ;; Registers used:
  5468 ;;		wreg, status,2, status,0
  5469 ;; Tracked objects:
  5470 ;;		On entry : 0/0
  5471 ;;		On exit  : 0/0
  5472 ;;		Unchanged: 0/0
  5473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5474 ;;      Params:         4       0       0       0       0       0       0       0       0
  5475 ;;      Locals:         0       6       0       0       0       0       0       0       0
  5476 ;;      Temps:          0       5       0       0       0       0       0       0       0
  5477 ;;      Totals:         4      11       0       0       0       0       0       0       0
  5478 ;;Total ram usage:       15 bytes
  5479 ;; Hardware stack levels used:    1
  5480 ;; Hardware stack levels required when called:    1
  5481 ;; This function calls:
  5482 ;;		Nothing
  5483 ;; This function is called by:
  5484 ;;		_delay_sec
  5485 ;;		_vel_med
  5486 ;;		_acel_med
  5487 ;; This function uses a non-reentrant model
  5488 ;;
  5489                           
  5490                           	psect	text27
  5491  00165A                     __ptext27:
  5492                           	opt stack 0
  5493  00165A                     ___fttol:
  5494                           	opt stack 27
  5495                           
  5496                           ;incstack = 0
  5497  00165A  C035  F0B2         	movff	___fttol@f1+2,??___fttol
  5498  00165E  0100               	movlb	0	; () banked
  5499  001660  6BB3               	clrf	(??___fttol+1)& (0+255),b
  5500  001662  6BB4               	clrf	(??___fttol+2)& (0+255),b
  5501  001664  3434               	rlcf	___fttol@f1+1,w,c
  5502  001666  0100               	movlb	0	; () banked
  5503  001668  37B2               	rlcf	??___fttol& (0+255),f,b
  5504  00166A  E301               	bnc	u2141
  5505  00166C  81B3               	bsf	(??___fttol+1)& (0+255),0,b
  5506  00166E                     u2141:
  5507  00166E  0100               	movlb	0	; () banked
  5508  001670  51B2               	movf	??___fttol& (0+255),w,b
  5509  001672  0100               	movlb	0	; () banked
  5510  001674  6FBC               	movwf	___fttol@exp1& (0+255),b
  5511  001676  0100               	movlb	0	; () banked
  5512  001678  51BC               	movf	___fttol@exp1& (0+255),w,b
  5513  00167A  A4D8               	btfss	status,2,c
  5514  00167C  D009               	goto	l527
  5515                           
  5516                           ; BSR set to: 0
  5517  00167E  0E00               	movlw	0
  5518  001680  6E33               	movwf	?___fttol,c
  5519  001682  0E00               	movlw	0
  5520  001684  6E34               	movwf	?___fttol+1,c
  5521  001686  0E00               	movlw	0
  5522  001688  6E35               	movwf	?___fttol+2,c
  5523  00168A  0E00               	movlw	0
  5524  00168C  6E36               	movwf	?___fttol+3,c
  5525                           
  5526                           ; BSR set to: 0
  5527  00168E  0012               	return	
  5528  001690                     l527:
  5529                           
  5530                           ; BSR set to: 0
  5531                           
  5532                           ; BSR set to: 0
  5533  001690  0E17               	movlw	23
  5534  001692  0100               	movlb	0	; () banked
  5535  001694  6FB2               	movwf	??___fttol& (0+255),b
  5536  001696  C033  F0B3         	movff	___fttol@f1,??___fttol+1
  5537  00169A  C034  F0B4         	movff	___fttol@f1+1,??___fttol+2
  5538  00169E  C035  F0B5         	movff	___fttol@f1+2,??___fttol+3
  5539  0016A2  0100               	movlb	0	; () banked
  5540  0016A4  29B2               	incf	??___fttol& (0+255),w,b
  5541  0016A6  0100               	movlb	0	; () banked
  5542  0016A8  6FB6               	movwf	(??___fttol+4)& (0+255),b
  5543  0016AA  D005               	goto	u2160
  5544  0016AC                     u2165:
  5545  0016AC  0100               	movlb	0	; () banked
  5546  0016AE  90D8               	bcf	status,0,c
  5547  0016B0  33B5               	rrcf	(??___fttol+3)& (0+255),f,b
  5548  0016B2  33B4               	rrcf	(??___fttol+2)& (0+255),f,b
  5549  0016B4  33B3               	rrcf	(??___fttol+1)& (0+255),f,b
  5550  0016B6                     u2160:
  5551  0016B6  0100               	movlb	0	; () banked
  5552  0016B8  2FB6               	decfsz	(??___fttol+4)& (0+255),f,b
  5553  0016BA  D7F8               	goto	u2165
  5554  0016BC  0100               	movlb	0	; () banked
  5555  0016BE  51B3               	movf	(??___fttol+1)& (0+255),w,b
  5556  0016C0  0100               	movlb	0	; () banked
  5557  0016C2  6FB7               	movwf	___fttol@sign1& (0+255),b
  5558                           
  5559                           ; BSR set to: 0
  5560  0016C4  8E34               	bsf	___fttol@f1+1,7,c
  5561                           
  5562                           ; BSR set to: 0
  5563  0016C6  0EFF               	movlw	255
  5564  0016C8  1633               	andwf	___fttol@f1,f,c
  5565  0016CA  0EFF               	movlw	255
  5566  0016CC  1634               	andwf	___fttol@f1+1,f,c
  5567  0016CE  0E00               	movlw	0
  5568  0016D0  1635               	andwf	___fttol@f1+2,f,c
  5569                           
  5570                           ; BSR set to: 0
  5571  0016D2  5033               	movf	___fttol@f1,w,c
  5572  0016D4  0100               	movlb	0	; () banked
  5573  0016D6  6FB8               	movwf	___fttol@lval& (0+255),b
  5574  0016D8  5034               	movf	___fttol@f1+1,w,c
  5575  0016DA  0100               	movlb	0	; () banked
  5576  0016DC  6FB9               	movwf	(___fttol@lval+1)& (0+255),b
  5577  0016DE  5035               	movf	___fttol@f1+2,w,c
  5578  0016E0  0100               	movlb	0	; () banked
  5579  0016E2  6FBA               	movwf	(___fttol@lval+2)& (0+255),b
  5580  0016E4  0100               	movlb	0	; () banked
  5581  0016E6  6BBB               	clrf	(___fttol@lval+3)& (0+255),b
  5582                           
  5583                           ; BSR set to: 0
  5584  0016E8  0E8E               	movlw	142
  5585  0016EA  0100               	movlb	0	; () banked
  5586  0016EC  5FBC               	subwf	___fttol@exp1& (0+255),f,b
  5587                           
  5588                           ; BSR set to: 0
  5589  0016EE  0100               	movlb	0	; () banked
  5590  0016F0  AFBC               	btfss	___fttol@exp1& (0+255),7,b
  5591  0016F2  D019               	goto	l529
  5592                           
  5593                           ; BSR set to: 0
  5594  0016F4  0100               	movlb	0	; () banked
  5595  0016F6  51BC               	movf	___fttol@exp1& (0+255),w,b
  5596  0016F8  0A80               	xorlw	128
  5597  0016FA  0F8F               	addlw	143
  5598  0016FC  B0D8               	btfsc	status,0,c
  5599  0016FE  D009               	goto	l530
  5600                           
  5601                           ; BSR set to: 0
  5602  001700  0E00               	movlw	0
  5603  001702  6E33               	movwf	?___fttol,c
  5604  001704  0E00               	movlw	0
  5605  001706  6E34               	movwf	?___fttol+1,c
  5606  001708  0E00               	movlw	0
  5607  00170A  6E35               	movwf	?___fttol+2,c
  5608  00170C  0E00               	movlw	0
  5609  00170E  6E36               	movwf	?___fttol+3,c
  5610                           
  5611                           ; BSR set to: 0
  5612  001710  0012               	return	
  5613  001712                     l530:
  5614                           
  5615                           ; BSR set to: 0
  5616                           
  5617                           ; BSR set to: 0
  5618                           
  5619                           ; BSR set to: 0
  5620  001712  0100               	movlb	0	; () banked
  5621  001714  90D8               	bcf	status,0,c
  5622  001716  33BB               	rrcf	(___fttol@lval+3)& (0+255),f,b
  5623  001718  33BA               	rrcf	(___fttol@lval+2)& (0+255),f,b
  5624  00171A  33B9               	rrcf	(___fttol@lval+1)& (0+255),f,b
  5625  00171C  33B8               	rrcf	___fttol@lval& (0+255),f,b
  5626                           
  5627                           ; BSR set to: 0
  5628  00171E  0100               	movlb	0	; () banked
  5629  001720  3FBC               	incfsz	___fttol@exp1& (0+255),f,b
  5630  001722  D7F7               	goto	l530
  5631                           
  5632                           ; BSR set to: 0
  5633  001724  D01A               	goto	u2200
  5634  001726                     l529:
  5635                           
  5636                           ; BSR set to: 0
  5637                           
  5638                           ; BSR set to: 0
  5639  001726  0E17               	movlw	23
  5640  001728  0100               	movlb	0	; () banked
  5641  00172A  65BC               	cpfsgt	___fttol@exp1& (0+255),b
  5642  00172C  D011               	goto	l535
  5643                           
  5644                           ; BSR set to: 0
  5645  00172E  0E00               	movlw	0
  5646  001730  6E33               	movwf	?___fttol,c
  5647  001732  0E00               	movlw	0
  5648  001734  6E34               	movwf	?___fttol+1,c
  5649  001736  0E00               	movlw	0
  5650  001738  6E35               	movwf	?___fttol+2,c
  5651  00173A  0E00               	movlw	0
  5652  00173C  6E36               	movwf	?___fttol+3,c
  5653                           
  5654                           ; BSR set to: 0
  5655  00173E  0012               	return	
  5656  001740                     
  5657                           ; BSR set to: 0
  5658                           
  5659                           ; BSR set to: 0
  5660  001740  0100               	movlb	0	; () banked
  5661  001742  90D8               	bcf	status,0,c
  5662  001744  37B8               	rlcf	___fttol@lval& (0+255),f,b
  5663  001746  37B9               	rlcf	(___fttol@lval+1)& (0+255),f,b
  5664  001748  37BA               	rlcf	(___fttol@lval+2)& (0+255),f,b
  5665  00174A  37BB               	rlcf	(___fttol@lval+3)& (0+255),f,b
  5666  00174C  0100               	movlb	0	; () banked
  5667  00174E  07BC               	decf	___fttol@exp1& (0+255),f,b
  5668  001750                     l535:
  5669                           
  5670                           ; BSR set to: 0
  5671                           
  5672                           ; BSR set to: 0
  5673  001750  0100               	movlb	0	; () banked
  5674  001752  51BC               	movf	___fttol@exp1& (0+255),w,b
  5675  001754  0100               	movlb	0	; () banked
  5676  001756  A4D8               	btfss	status,2,c
  5677  001758  D7F3               	goto	l536
  5678  00175A                     u2200:
  5679                           
  5680                           ; BSR set to: 0
  5681                           
  5682                           ; BSR set to: 0
  5683                           
  5684                           ; BSR set to: 0
  5685  00175A  0100               	movlb	0	; () banked
  5686  00175C  51B7               	movf	___fttol@sign1& (0+255),w,b
  5687  00175E  0100               	movlb	0	; () banked
  5688  001760  B4D8               	btfsc	status,2,c
  5689  001762  D009               	goto	l538
  5690                           
  5691                           ; BSR set to: 0
  5692  001764  0100               	movlb	0	; () banked
  5693  001766  1FBB               	comf	(___fttol@lval+3)& (0+255),f,b
  5694  001768  1FBA               	comf	(___fttol@lval+2)& (0+255),f,b
  5695  00176A  1FB9               	comf	(___fttol@lval+1)& (0+255),f,b
  5696  00176C  6DB8               	negf	___fttol@lval& (0+255),b
  5697  00176E  0E00               	movlw	0
  5698  001770  23B9               	addwfc	(___fttol@lval+1)& (0+255),f,b
  5699  001772  23BA               	addwfc	(___fttol@lval+2)& (0+255),f,b
  5700  001774  23BB               	addwfc	(___fttol@lval+3)& (0+255),f,b
  5701  001776                     l538:
  5702                           
  5703                           ; BSR set to: 0
  5704                           
  5705                           ; BSR set to: 0
  5706  001776  C0B8  F033         	movff	___fttol@lval,?___fttol
  5707  00177A  C0B9  F034         	movff	___fttol@lval+1,?___fttol+1
  5708  00177E  C0BA  F035         	movff	___fttol@lval+2,?___fttol+2
  5709  001782  C0BB  F036         	movff	___fttol@lval+3,?___fttol+3
  5710  001786  0012               	return	
  5711  001788                     __end_of___fttol:
  5712                           	opt stack 0
  5713                           tblptru	equ	0xFF8
  5714                           tblptrh	equ	0xFF7
  5715                           tblptrl	equ	0xFF6
  5716                           tablat	equ	0xFF5
  5717                           prodh	equ	0xFF4
  5718                           prodl	equ	0xFF3
  5719                           intcon	equ	0xFF2
  5720                           intcon2	equ	0xFF1
  5721                           intcon3	equ	0xFF0
  5722                           postinc0	equ	0xFEE
  5723                           wreg	equ	0xFE8
  5724                           indf1	equ	0xFE7
  5725                           postdec1	equ	0xFE5
  5726                           fsr1h	equ	0xFE2
  5727                           fsr1l	equ	0xFE1
  5728                           indf2	equ	0xFDF
  5729                           postinc2	equ	0xFDE
  5730                           postdec2	equ	0xFDD
  5731                           fsr2h	equ	0xFDA
  5732                           fsr2l	equ	0xFD9
  5733                           status	equ	0xFD8
  5734                           
  5735 ;; *************** function ___ftdiv *****************
  5736 ;; Defined at:
  5737 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftdiv.c"
  5738 ;; Parameters:    Size  Location     Type
  5739 ;;  f1              3   35[COMRAM] float 
  5740 ;;  f2              3   38[COMRAM] float 
  5741 ;; Auto vars:     Size  Location     Type
  5742 ;;  f3              3   45[COMRAM] float 
  5743 ;;  sign            1   49[COMRAM] unsigned char 
  5744 ;;  exp             1   48[COMRAM] unsigned char 
  5745 ;;  cntr            1   44[COMRAM] unsigned char 
  5746 ;; Return value:  Size  Location     Type
  5747 ;;                  3   35[COMRAM] float 
  5748 ;; Registers used:
  5749 ;;		wreg, status,2, status,0, cstack
  5750 ;; Tracked objects:
  5751 ;;		On entry : 0/0
  5752 ;;		On exit  : 0/0
  5753 ;;		Unchanged: 0/0
  5754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5755 ;;      Params:         6       0       0       0       0       0       0       0       0
  5756 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5757 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5758 ;;      Totals:        15       0       0       0       0       0       0       0       0
  5759 ;;Total ram usage:       15 bytes
  5760 ;; Hardware stack levels used:    1
  5761 ;; Hardware stack levels required when called:    2
  5762 ;; This function calls:
  5763 ;;		___ftpack
  5764 ;; This function is called by:
  5765 ;;		_vel_med
  5766 ;;		_acel_med
  5767 ;; This function uses a non-reentrant model
  5768 ;;
  5769                           
  5770                           	psect	text28
  5771  00187C                     __ptext28:
  5772                           	opt stack 0
  5773  00187C                     ___ftdiv:
  5774                           	opt stack 25
  5775                           
  5776                           ; BSR set to: 0
  5777                           ;incstack = 0
  5778  00187C  C026  F02A         	movff	___ftdiv@f1+2,??___ftdiv
  5779  001880  6A2B               	clrf	(??___ftdiv+1)& (0+255),c
  5780  001882  6A2C               	clrf	(??___ftdiv+2)& (0+255),c
  5781  001884  3425               	rlcf	___ftdiv@f1+1,w,c
  5782  001886  362A               	rlcf	??___ftdiv& (0+255),f,c
  5783  001888  E301               	bnc	u2091
  5784  00188A  802B               	bsf	(??___ftdiv+1)& (0+255),0,c
  5785  00188C                     u2091:
  5786  00188C  502A               	movf	??___ftdiv,w,c
  5787  00188E  6E31               	movwf	___ftdiv@exp,c
  5788  001890  5031               	movf	___ftdiv@exp,w,c
  5789  001892  A4D8               	btfss	status,2,c
  5790  001894  D007               	goto	l491
  5791  001896  0E00               	movlw	0
  5792  001898  6E24               	movwf	?___ftdiv,c
  5793  00189A  0E00               	movlw	0
  5794  00189C  6E25               	movwf	?___ftdiv+1,c
  5795  00189E  0E00               	movlw	0
  5796  0018A0  6E26               	movwf	?___ftdiv+2,c
  5797  0018A2  0012               	return	
  5798  0018A4                     l491:
  5799  0018A4  C029  F02A         	movff	___ftdiv@f2+2,??___ftdiv
  5800  0018A8  6A2B               	clrf	(??___ftdiv+1)& (0+255),c
  5801  0018AA  6A2C               	clrf	(??___ftdiv+2)& (0+255),c
  5802  0018AC  3428               	rlcf	___ftdiv@f2+1,w,c
  5803  0018AE  362A               	rlcf	??___ftdiv& (0+255),f,c
  5804  0018B0  E301               	bnc	u2111
  5805  0018B2  802B               	bsf	(??___ftdiv+1)& (0+255),0,c
  5806  0018B4                     u2111:
  5807  0018B4  502A               	movf	??___ftdiv,w,c
  5808  0018B6  6E32               	movwf	___ftdiv@sign,c
  5809  0018B8  5032               	movf	___ftdiv@sign,w,c
  5810  0018BA  A4D8               	btfss	status,2,c
  5811  0018BC  D007               	goto	l493
  5812  0018BE  0E00               	movlw	0
  5813  0018C0  6E24               	movwf	?___ftdiv,c
  5814  0018C2  0E00               	movlw	0
  5815  0018C4  6E25               	movwf	?___ftdiv+1,c
  5816  0018C6  0E00               	movlw	0
  5817  0018C8  6E26               	movwf	?___ftdiv+2,c
  5818  0018CA  0012               	return	
  5819  0018CC                     l493:
  5820  0018CC  0E00               	movlw	0
  5821  0018CE  6E2E               	movwf	___ftdiv@f3,c
  5822  0018D0  0E00               	movlw	0
  5823  0018D2  6E2F               	movwf	___ftdiv@f3+1,c
  5824  0018D4  0E00               	movlw	0
  5825  0018D6  6E30               	movwf	___ftdiv@f3+2,c
  5826  0018D8  5032               	movf	___ftdiv@sign,w,c
  5827  0018DA  0F89               	addlw	137
  5828  0018DC  5E31               	subwf	___ftdiv@exp,f,c
  5829  0018DE  C026  F032         	movff	___ftdiv@f1+2,___ftdiv@sign
  5830  0018E2  5029               	movf	___ftdiv@f2+2,w,c
  5831  0018E4  1A32               	xorwf	___ftdiv@sign,f,c
  5832  0018E6  0E80               	movlw	128
  5833  0018E8  1632               	andwf	___ftdiv@sign,f,c
  5834  0018EA  8E25               	bsf	___ftdiv@f1+1,7,c
  5835  0018EC  0EFF               	movlw	255
  5836  0018EE  1624               	andwf	___ftdiv@f1,f,c
  5837  0018F0  0EFF               	movlw	255
  5838  0018F2  1625               	andwf	___ftdiv@f1+1,f,c
  5839  0018F4  0E00               	movlw	0
  5840  0018F6  1626               	andwf	___ftdiv@f1+2,f,c
  5841  0018F8  8E28               	bsf	___ftdiv@f2+1,7,c
  5842  0018FA  0EFF               	movlw	255
  5843  0018FC  1627               	andwf	___ftdiv@f2,f,c
  5844  0018FE  0EFF               	movlw	255
  5845  001900  1628               	andwf	___ftdiv@f2+1,f,c
  5846  001902  0E00               	movlw	0
  5847  001904  1629               	andwf	___ftdiv@f2+2,f,c
  5848  001906  0E18               	movlw	24
  5849  001908  6E2D               	movwf	___ftdiv@cntr,c
  5850  00190A  90D8               	bcf	status,0,c
  5851  00190C  362E               	rlcf	___ftdiv@f3,f,c
  5852  00190E  362F               	rlcf	___ftdiv@f3+1,f,c
  5853  001910  3630               	rlcf	___ftdiv@f3+2,f,c
  5854  001912  5027               	movf	___ftdiv@f2,w,c
  5855  001914  5C24               	subwf	___ftdiv@f1,w,c
  5856  001916  5028               	movf	___ftdiv@f2+1,w,c
  5857  001918  5825               	subwfb	___ftdiv@f1+1,w,c
  5858  00191A  5029               	movf	___ftdiv@f2+2,w,c
  5859  00191C  5826               	subwfb	___ftdiv@f1+2,w,c
  5860  00191E  A0D8               	btfss	status,0,c
  5861  001920  D007               	goto	l495
  5862  001922  5027               	movf	___ftdiv@f2,w,c
  5863  001924  5E24               	subwf	___ftdiv@f1,f,c
  5864  001926  5028               	movf	___ftdiv@f2+1,w,c
  5865  001928  5A25               	subwfb	___ftdiv@f1+1,f,c
  5866  00192A  5029               	movf	___ftdiv@f2+2,w,c
  5867  00192C  5A26               	subwfb	___ftdiv@f1+2,f,c
  5868  00192E  802E               	bsf	___ftdiv@f3,0,c
  5869  001930                     l495:
  5870  001930  90D8               	bcf	status,0,c
  5871  001932  3624               	rlcf	___ftdiv@f1,f,c
  5872  001934  3625               	rlcf	___ftdiv@f1+1,f,c
  5873  001936  3626               	rlcf	___ftdiv@f1+2,f,c
  5874  001938  2E2D               	decfsz	___ftdiv@cntr,f,c
  5875  00193A  D7E7               	goto	l494
  5876  00193C  C02E  F013         	movff	___ftdiv@f3,___ftpack@arg
  5877  001940  C02F  F014         	movff	___ftdiv@f3+1,___ftpack@arg+1
  5878  001944  C030  F015         	movff	___ftdiv@f3+2,___ftpack@arg+2
  5879  001948  C031  F016         	movff	___ftdiv@exp,___ftpack@exp
  5880  00194C  C032  F017         	movff	___ftdiv@sign,___ftpack@sign
  5881  001950  EC23  F00D         	call	___ftpack	;wreg free
  5882  001954  C013  F024         	movff	?___ftpack,?___ftdiv
  5883  001958  C014  F025         	movff	?___ftpack+1,?___ftdiv+1
  5884  00195C  C015  F026         	movff	?___ftpack+2,?___ftdiv+2
  5885  001960  0012               	return	
  5886  001962                     __end_of___ftdiv:
  5887                           	opt stack 0
  5888                           tblptru	equ	0xFF8
  5889                           tblptrh	equ	0xFF7
  5890                           tblptrl	equ	0xFF6
  5891                           tablat	equ	0xFF5
  5892                           prodh	equ	0xFF4
  5893                           prodl	equ	0xFF3
  5894                           intcon	equ	0xFF2
  5895                           intcon2	equ	0xFF1
  5896                           intcon3	equ	0xFF0
  5897                           postinc0	equ	0xFEE
  5898                           wreg	equ	0xFE8
  5899                           indf1	equ	0xFE7
  5900                           postdec1	equ	0xFE5
  5901                           fsr1h	equ	0xFE2
  5902                           fsr1l	equ	0xFE1
  5903                           indf2	equ	0xFDF
  5904                           postinc2	equ	0xFDE
  5905                           postdec2	equ	0xFDD
  5906                           fsr2h	equ	0xFDA
  5907                           fsr2l	equ	0xFD9
  5908                           status	equ	0xFD8
  5909                           
  5910 ;; *************** function ___ftpack *****************
  5911 ;; Defined at:
  5912 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\float.c"
  5913 ;; Parameters:    Size  Location     Type
  5914 ;;  arg             3   18[COMRAM] unsigned um
  5915 ;;  exp             1   21[COMRAM] unsigned char 
  5916 ;;  sign            1   22[COMRAM] unsigned char 
  5917 ;; Auto vars:     Size  Location     Type
  5918 ;;		None
  5919 ;; Return value:  Size  Location     Type
  5920 ;;                  3   18[COMRAM] float 
  5921 ;; Registers used:
  5922 ;;		wreg, status,2, status,0
  5923 ;; Tracked objects:
  5924 ;;		On entry : 0/0
  5925 ;;		On exit  : 0/0
  5926 ;;		Unchanged: 0/0
  5927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5928 ;;      Params:         5       0       0       0       0       0       0       0       0
  5929 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5930 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5931 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5932 ;;Total ram usage:        8 bytes
  5933 ;; Hardware stack levels used:    1
  5934 ;; Hardware stack levels required when called:    1
  5935 ;; This function calls:
  5936 ;;		Nothing
  5937 ;; This function is called by:
  5938 ;;		___awtoft
  5939 ;;		___ftdiv
  5940 ;;		___ftmul
  5941 ;;		___lltoft
  5942 ;; This function uses a non-reentrant model
  5943 ;;
  5944                           
  5945                           	psect	text29
  5946  001A46                     __ptext29:
  5947                           	opt stack 0
  5948  001A46                     ___ftpack:
  5949                           	opt stack 26
  5950                           
  5951                           ;incstack = 0
  5952  001A46  5016               	movf	___ftpack@exp,w,c
  5953  001A48  B4D8               	btfsc	status,2,c
  5954  001A4A  D005               	goto	u1840
  5955  001A4C  5013               	movf	___ftpack@arg,w,c
  5956  001A4E  1014               	iorwf	___ftpack@arg+1,w,c
  5957  001A50  1015               	iorwf	___ftpack@arg+2,w,c
  5958  001A52  A4D8               	btfss	status,2,c
  5959  001A54  D00C               	goto	l427
  5960  001A56                     u1840:
  5961  001A56  0E00               	movlw	0
  5962  001A58  6E13               	movwf	?___ftpack,c
  5963  001A5A  0E00               	movlw	0
  5964  001A5C  6E14               	movwf	?___ftpack+1,c
  5965  001A5E  0E00               	movlw	0
  5966  001A60  6E15               	movwf	?___ftpack+2,c
  5967  001A62  0012               	return	
  5968  001A64  2A16               	incf	___ftpack@exp,f,c
  5969  001A66  90D8               	bcf	status,0,c
  5970  001A68  3215               	rrcf	___ftpack@arg+2,f,c
  5971  001A6A  3214               	rrcf	___ftpack@arg+1,f,c
  5972  001A6C  3213               	rrcf	___ftpack@arg,f,c
  5973  001A6E                     l427:
  5974  001A6E  0E00               	movlw	0
  5975  001A70  1413               	andwf	___ftpack@arg,w,c
  5976  001A72  6E18               	movwf	??___ftpack& (0+255),c
  5977  001A74  0E00               	movlw	0
  5978  001A76  1414               	andwf	___ftpack@arg+1,w,c
  5979  001A78  6E19               	movwf	(??___ftpack+1)& (0+255),c
  5980  001A7A  0EFE               	movlw	254
  5981  001A7C  1415               	andwf	___ftpack@arg+2,w,c
  5982  001A7E  6E1A               	movwf	(??___ftpack+2)& (0+255),c
  5983  001A80  5018               	movf	??___ftpack,w,c
  5984  001A82  1019               	iorwf	??___ftpack+1,w,c
  5985  001A84  101A               	iorwf	??___ftpack+2,w,c
  5986  001A86  B4D8               	btfsc	status,2,c
  5987  001A88  D00C               	goto	l430
  5988  001A8A  D7EC               	goto	l428
  5989  001A8C  2A16               	incf	___ftpack@exp,f,c
  5990  001A8E  0E01               	movlw	1
  5991  001A90  2613               	addwf	___ftpack@arg,f,c
  5992  001A92  0E00               	movlw	0
  5993  001A94  2214               	addwfc	___ftpack@arg+1,f,c
  5994  001A96  0E00               	movlw	0
  5995  001A98  2215               	addwfc	___ftpack@arg+2,f,c
  5996  001A9A  90D8               	bcf	status,0,c
  5997  001A9C  3215               	rrcf	___ftpack@arg+2,f,c
  5998  001A9E  3214               	rrcf	___ftpack@arg+1,f,c
  5999  001AA0  3213               	rrcf	___ftpack@arg,f,c
  6000  001AA2                     l430:
  6001  001AA2  0E00               	movlw	0
  6002  001AA4  1413               	andwf	___ftpack@arg,w,c
  6003  001AA6  6E18               	movwf	??___ftpack& (0+255),c
  6004  001AA8  0E00               	movlw	0
  6005  001AAA  1414               	andwf	___ftpack@arg+1,w,c
  6006  001AAC  6E19               	movwf	(??___ftpack+1)& (0+255),c
  6007  001AAE  0EFF               	movlw	255
  6008  001AB0  1415               	andwf	___ftpack@arg+2,w,c
  6009  001AB2  6E1A               	movwf	(??___ftpack+2)& (0+255),c
  6010  001AB4  5018               	movf	??___ftpack,w,c
  6011  001AB6  1019               	iorwf	??___ftpack+1,w,c
  6012  001AB8  101A               	iorwf	??___ftpack+2,w,c
  6013  001ABA  B4D8               	btfsc	status,2,c
  6014  001ABC  D006               	goto	l433
  6015  001ABE  D7E6               	goto	l431
  6016  001AC0  0616               	decf	___ftpack@exp,f,c
  6017  001AC2  90D8               	bcf	status,0,c
  6018  001AC4  3613               	rlcf	___ftpack@arg,f,c
  6019  001AC6  3614               	rlcf	___ftpack@arg+1,f,c
  6020  001AC8  3615               	rlcf	___ftpack@arg+2,f,c
  6021  001ACA                     l433:
  6022  001ACA  BE14               	btfsc	___ftpack@arg+1,7,c
  6023  001ACC  D003               	goto	u1880
  6024  001ACE  0E02               	movlw	2
  6025  001AD0  6016               	cpfslt	___ftpack@exp,c
  6026  001AD2  D7F6               	goto	l434
  6027  001AD4                     u1880:
  6028  001AD4  A016               	btfss	___ftpack@exp,0,c
  6029  001AD6  9E14               	bcf	___ftpack@arg+1,7,c
  6030  001AD8  90D8               	bcf	status,0,c
  6031  001ADA  3216               	rrcf	___ftpack@exp,f,c
  6032  001ADC  5016               	movf	___ftpack@exp,w,c
  6033  001ADE  1215               	iorwf	___ftpack@arg+2,f,c
  6034  001AE0  5017               	movf	___ftpack@sign,w,c
  6035  001AE2  A4D8               	btfss	status,2,c
  6036  001AE4  8E15               	bsf	___ftpack@arg+2,7,c
  6037  001AE6  C013  F013         	movff	___ftpack@arg,?___ftpack
  6038  001AEA  C014  F014         	movff	___ftpack@arg+1,?___ftpack+1
  6039  001AEE  C015  F015         	movff	___ftpack@arg+2,?___ftpack+2
  6040  001AF2  0012               	return	
  6041  001AF4                     __end_of___ftpack:
  6042                           	opt stack 0
  6043                           tblptru	equ	0xFF8
  6044                           tblptrh	equ	0xFF7
  6045                           tblptrl	equ	0xFF6
  6046                           tablat	equ	0xFF5
  6047                           prodh	equ	0xFF4
  6048                           prodl	equ	0xFF3
  6049                           intcon	equ	0xFF2
  6050                           intcon2	equ	0xFF1
  6051                           intcon3	equ	0xFF0
  6052                           postinc0	equ	0xFEE
  6053                           wreg	equ	0xFE8
  6054                           indf1	equ	0xFE7
  6055                           postdec1	equ	0xFE5
  6056                           fsr1h	equ	0xFE2
  6057                           fsr1l	equ	0xFE1
  6058                           indf2	equ	0xFDF
  6059                           postinc2	equ	0xFDE
  6060                           postdec2	equ	0xFDD
  6061                           fsr2h	equ	0xFDA
  6062                           fsr2l	equ	0xFD9
  6063                           status	equ	0xFD8
  6064                           
  6065 ;; *************** function _inter *****************
  6066 ;; Defined at:
  6067 ;;		line 159 in file "main.c"
  6068 ;; Parameters:    Size  Location     Type
  6069 ;;		None
  6070 ;; Auto vars:     Size  Location     Type
  6071 ;;		None
  6072 ;; Return value:  Size  Location     Type
  6073 ;;                  1    wreg      void 
  6074 ;; Registers used:
  6075 ;;		wreg, status,2, status,0
  6076 ;; Tracked objects:
  6077 ;;		On entry : 0/0
  6078 ;;		On exit  : 0/0
  6079 ;;		Unchanged: 0/0
  6080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6081 ;;      Params:         0       0       0       0       0       0       0       0       0
  6082 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6083 ;;      Temps:         18       0       0       0       0       0       0       0       0
  6084 ;;      Totals:        18       0       0       0       0       0       0       0       0
  6085 ;;Total ram usage:       18 bytes
  6086 ;; Hardware stack levels used:    1
  6087 ;; This function calls:
  6088 ;;		Nothing
  6089 ;; This function is called by:
  6090 ;;		Interrupt level 2
  6091 ;; This function uses a non-reentrant model
  6092 ;;
  6093                           
  6094                           	psect	intcode
  6095  000008                     __pintcode:
  6096                           	opt stack 0
  6097  000008                     _inter:
  6098                           	opt stack 25
  6099                           
  6100                           ;incstack = 0
  6101  000008  824D               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  6102  00000A  ED7A  F00D         	call	int_func,f	;refresh shadow registers
  6103                           tblptru	equ	0xFF8
  6104                           tblptrh	equ	0xFF7
  6105                           tblptrl	equ	0xFF6
  6106                           tablat	equ	0xFF5
  6107                           prodh	equ	0xFF4
  6108                           prodl	equ	0xFF3
  6109                           intcon	equ	0xFF2
  6110                           intcon2	equ	0xFF1
  6111                           intcon3	equ	0xFF0
  6112                           postinc0	equ	0xFEE
  6113                           wreg	equ	0xFE8
  6114                           indf1	equ	0xFE7
  6115                           postdec1	equ	0xFE5
  6116                           fsr1h	equ	0xFE2
  6117                           fsr1l	equ	0xFE1
  6118                           indf2	equ	0xFDF
  6119                           postinc2	equ	0xFDE
  6120                           postdec2	equ	0xFDD
  6121                           fsr2h	equ	0xFDA
  6122                           fsr2l	equ	0xFD9
  6123                           status	equ	0xFD8
  6124                           
  6125                           	psect	intcode_body
  6126  001AF4                     __pintcode_body:
  6127                           	opt stack 25
  6128  001AF4                     int_func:
  6129                           	opt stack 25
  6130  001AF4  0006               	pop		; remove dummy address from shadow register refresh
  6131  001AF6  CFFA F001          	movff	pclath,??_inter
  6132  001AFA  CFFB F002          	movff	pclatu,??_inter+1
  6133  001AFE  CFE9 F003          	movff	fsr0l,??_inter+2
  6134  001B02  CFEA F004          	movff	fsr0h,??_inter+3
  6135  001B06  CFE1 F005          	movff	fsr1l,??_inter+4
  6136  001B0A  CFE2 F006          	movff	fsr1h,??_inter+5
  6137  001B0E  CFD9 F007          	movff	fsr2l,??_inter+6
  6138  001B12  CFDA F008          	movff	fsr2h,??_inter+7
  6139  001B16  CFF3 F009          	movff	prodl,??_inter+8
  6140  001B1A  CFF4 F00A          	movff	prodh,??_inter+9
  6141  001B1E  CFF6 F00B          	movff	tblptrl,??_inter+10
  6142  001B22  CFF7 F00C          	movff	tblptrh,??_inter+11
  6143  001B26  CFF8 F00D          	movff	tblptru,??_inter+12
  6144  001B2A  CFF5 F00E          	movff	tablat,??_inter+13
  6145  001B2E  C04D  F00F         	movff	btemp,??_inter+14
  6146  001B32  C04E  F010         	movff	btemp+1,??_inter+15
  6147  001B36  C04F  F011         	movff	btemp+2,??_inter+16
  6148  001B3A  C050  F012         	movff	btemp+3,??_inter+17
  6149                           
  6150                           ;main.c: 160: if (T0IF) {
  6151  001B3E  A4F2               	btfss	intcon,2,c	;volatile
  6152  001B40  D008               	goto	i2l93
  6153                           
  6154                           ;main.c: 161: num++;
  6155  001B42  0E01               	movlw	1
  6156  001B44  0100               	movlb	0	; () banked
  6157  001B46  2778               	addwf	_num& (0+255),f,b
  6158  001B48  0E00               	movlw	0
  6159  001B4A  2379               	addwfc	(_num+1)& (0+255),f,b
  6160  001B4C  237A               	addwfc	(_num+2)& (0+255),f,b
  6161  001B4E  237B               	addwfc	(_num+3)& (0+255),f,b
  6162                           
  6163                           ; BSR set to: 0
  6164                           ;main.c: 162: T0IF=0;
  6165  001B50  94F2               	bcf	intcon,2,c	;volatile
  6166  001B52                     i2l93:
  6167                           
  6168                           ; BSR set to: 0
  6169  001B52  C012  F050         	movff	??_inter+17,btemp+3
  6170  001B56  C011  F04F         	movff	??_inter+16,btemp+2
  6171  001B5A  C010  F04E         	movff	??_inter+15,btemp+1
  6172  001B5E  C00F  F04D         	movff	??_inter+14,btemp
  6173  001B62  C00E  FFF5         	movff	??_inter+13,tablat
  6174  001B66  C00D  FFF8         	movff	??_inter+12,tblptru
  6175  001B6A  C00C  FFF7         	movff	??_inter+11,tblptrh
  6176  001B6E  C00B  FFF6         	movff	??_inter+10,tblptrl
  6177  001B72  C00A  FFF4         	movff	??_inter+9,prodh
  6178  001B76  C009  FFF3         	movff	??_inter+8,prodl
  6179  001B7A  C008  FFDA         	movff	??_inter+7,fsr2h
  6180  001B7E  C007  FFD9         	movff	??_inter+6,fsr2l
  6181  001B82  C006  FFE2         	movff	??_inter+5,fsr1h
  6182  001B86  C005  FFE1         	movff	??_inter+4,fsr1l
  6183  001B8A  C004  FFEA         	movff	??_inter+3,fsr0h
  6184  001B8E  C003  FFE9         	movff	??_inter+2,fsr0l
  6185  001B92  C002  FFFB         	movff	??_inter+1,pclatu
  6186  001B96  C001  FFFA         	movff	??_inter,pclath
  6187  001B9A  924D               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  6188  001B9C  0011               	retfie		f
  6189  001B9E                     __end_of_inter:
  6190                           	opt stack 0
  6191                           pclatu	equ	0xFFB
  6192                           pclath	equ	0xFFA
  6193                           tblptru	equ	0xFF8
  6194                           tblptrh	equ	0xFF7
  6195                           tblptrl	equ	0xFF6
  6196                           tablat	equ	0xFF5
  6197                           prodh	equ	0xFF4
  6198                           prodl	equ	0xFF3
  6199                           intcon	equ	0xFF2
  6200                           intcon2	equ	0xFF1
  6201                           intcon3	equ	0xFF0
  6202                           postinc0	equ	0xFEE
  6203                           fsr0h	equ	0xFEA
  6204                           fsr0l	equ	0xFE9
  6205                           wreg	equ	0xFE8
  6206                           indf1	equ	0xFE7
  6207                           postdec1	equ	0xFE5
  6208                           fsr1h	equ	0xFE2
  6209                           fsr1l	equ	0xFE1
  6210                           indf2	equ	0xFDF
  6211                           postinc2	equ	0xFDE
  6212                           postdec2	equ	0xFDD
  6213                           fsr2h	equ	0xFDA
  6214                           fsr2l	equ	0xFD9
  6215                           status	equ	0xFD8
  6216                           pclatu	equ	0xFFB
  6217                           pclath	equ	0xFFA
  6218                           tblptru	equ	0xFF8
  6219                           tblptrh	equ	0xFF7
  6220                           tblptrl	equ	0xFF6
  6221                           tablat	equ	0xFF5
  6222                           prodh	equ	0xFF4
  6223                           prodl	equ	0xFF3
  6224                           intcon	equ	0xFF2
  6225                           intcon2	equ	0xFF1
  6226                           intcon3	equ	0xFF0
  6227                           postinc0	equ	0xFEE
  6228                           fsr0h	equ	0xFEA
  6229                           fsr0l	equ	0xFE9
  6230                           wreg	equ	0xFE8
  6231                           indf1	equ	0xFE7
  6232                           postdec1	equ	0xFE5
  6233                           fsr1h	equ	0xFE2
  6234                           fsr1l	equ	0xFE1
  6235                           indf2	equ	0xFDF
  6236                           postinc2	equ	0xFDE
  6237                           postdec2	equ	0xFDD
  6238                           fsr2h	equ	0xFDA
  6239                           fsr2l	equ	0xFD9
  6240                           status	equ	0xFD8
  6241                           
  6242                           	psect	rparam
  6243  0000                     pclatu	equ	0xFFB
  6244                           pclath	equ	0xFFA
  6245                           tblptru	equ	0xFF8
  6246                           tblptrh	equ	0xFF7
  6247                           tblptrl	equ	0xFF6
  6248                           tablat	equ	0xFF5
  6249                           prodh	equ	0xFF4
  6250                           prodl	equ	0xFF3
  6251                           intcon	equ	0xFF2
  6252                           intcon2	equ	0xFF1
  6253                           intcon3	equ	0xFF0
  6254                           postinc0	equ	0xFEE
  6255                           fsr0h	equ	0xFEA
  6256                           fsr0l	equ	0xFE9
  6257                           wreg	equ	0xFE8
  6258                           indf1	equ	0xFE7
  6259                           postdec1	equ	0xFE5
  6260                           fsr1h	equ	0xFE2
  6261                           fsr1l	equ	0xFE1
  6262                           indf2	equ	0xFDF
  6263                           postinc2	equ	0xFDE
  6264                           postdec2	equ	0xFDD
  6265                           fsr2h	equ	0xFDA
  6266                           fsr2l	equ	0xFD9
  6267                           status	equ	0xFD8
  6268                           
  6269                           	psect	temp
  6270  00004D                     btemp:
  6271                           	opt stack 0
  6272  00004D                     	ds	1
  6273  0000                     int$flags	set	btemp
  6274  0000                     wtemp6	set	btemp+1
  6275                           pclatu	equ	0xFFB
  6276                           pclath	equ	0xFFA
  6277                           tblptru	equ	0xFF8
  6278                           tblptrh	equ	0xFF7
  6279                           tblptrl	equ	0xFF6
  6280                           tablat	equ	0xFF5
  6281                           prodh	equ	0xFF4
  6282                           prodl	equ	0xFF3
  6283                           intcon	equ	0xFF2
  6284                           intcon2	equ	0xFF1
  6285                           intcon3	equ	0xFF0
  6286                           postinc0	equ	0xFEE
  6287                           fsr0h	equ	0xFEA
  6288                           fsr0l	equ	0xFE9
  6289                           wreg	equ	0xFE8
  6290                           indf1	equ	0xFE7
  6291                           postdec1	equ	0xFE5
  6292                           fsr1h	equ	0xFE2
  6293                           fsr1l	equ	0xFE1
  6294                           indf2	equ	0xFDF
  6295                           postinc2	equ	0xFDE
  6296                           postdec2	equ	0xFDD
  6297                           fsr2h	equ	0xFDA
  6298                           fsr2l	equ	0xFD9
  6299                           status	equ	0xFD8


Data Sizes:
    Strings     111
    Constant    0
    Data        4
    BSS         100
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     58      76
    BANK0           160     55     141
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    write_string@string	PTR unsigned char  size(2) Largest target is 20
		 -> STR_11(CODE[11]), STR_10(CODE[16]), STR_9(CODE[8]), STR_8(CODE[6]), 
		 -> print_number@v(COMRAM[20]), STR_7(CODE[13]), STR_6(CODE[2]), STR_5(CODE[13]), 
		 -> STR_4(CODE[11]), STR_3(CODE[14]), STR_2(CODE[12]), STR_1(CODE[18]), 


Critical Paths under _main in COMRAM

    _msg_init->_delay_sec
    _delay_sec->___fttol
    ___ftmul->___ftpack
    ___ftge->___ftmul
    ___awtoft->___ftpack
    _clear_scr->_set_inst
    _config_lcd->_set_inst
    _acq_data->_data_tmr
    _data_tmr->_acel_med
    _data_tmr->_vel_med
    _write_string->_set_data
    _vel_med->___fttol
    _jump_line->_set_inst
    _data_print->___lldiv
    ___lldiv->___llmod
    _acel_med->___fttol
    ___lltoft->___ftpack
    ___fttol->___ftdiv
    ___ftdiv->___lltoft

Critical Paths under _inter in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_acq_data
    _msg_init->_delay_sec
    _delay_sec->___fttol
    _acq_data->_data_tmr
    _data_tmr->_data_print
    _vel_med->___fttol
    _acel_med->___fttol

Critical Paths under _inter in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _inter in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _inter in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _inter in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _inter in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _inter in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _inter in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _inter in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   63002
                                             53 BANK0      2     2      0
                           _acq_data
                         _clear_data
                          _clear_scr
                         _config_int
                          _config_io
                         _config_lcd
                         _config_osc
                         _config_tmr
                          _jump_line
                           _msg_init
                       _write_string
 ---------------------------------------------------------------------------------
 (1) _msg_init                                             2     2      0   18192
                                             15 BANK0      2     2      0
                          _clear_scr
                          _delay_sec
                          _jump_line
                       _write_string
 ---------------------------------------------------------------------------------
 (2) _delay_sec                                            8     5      3    8388
                                             54 COMRAM     4     1      3
                                             11 BANK0      4     4      0
                           ___awtoft
                             ___ftge
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    3701
                                             26 COMRAM    15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6     378
                                             41 COMRAM     9     3      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             4     1      3    3116
                                             26 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) _clear_scr                                            0     0      0    4028
                           _set_inst
 ---------------------------------------------------------------------------------
 (1) _config_tmr                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_osc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_lcd                                           1     1      0    4028
                                             26 COMRAM     1     1      0
                           _set_inst
 ---------------------------------------------------------------------------------
 (1) _config_io                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_int                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _clear_data                                           4     4      0     204
                                             18 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (1) _acq_data                                             1     1      0   30873
                                             52 BANK0      1     1      0
                           _data_tmr
 ---------------------------------------------------------------------------------
 (2) _data_tmr                                             6     4      2   30873
                                             56 COMRAM     2     0      2
                                             48 BANK0      4     4      0
                           _acel_med
                         _data_print
                          _jump_line
                            _vel_med
                       _write_string
 ---------------------------------------------------------------------------------
 (1) _write_string                                         6     4      2    1649
                                             28 COMRAM     6     4      2
                           _set_data
 ---------------------------------------------------------------------------------
 (3) _vel_med                                              8     8      0   11033
                                             54 COMRAM     2     2      0
                                             11 BANK0      6     6      0
                            ___ftdiv
                            ___fttol
                            ___lldiv
                           ___lltoft
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) _jump_line                                            0     0      0    4028
                           _set_inst
 ---------------------------------------------------------------------------------
 (3) _set_inst                                             8     1      7    4028
                                             18 COMRAM     8     1      7
                              _pulse
 ---------------------------------------------------------------------------------
 (3) _data_print                                          52    48      4    4511
                                             40 COMRAM     4     0      4
                                              0 BANK0     48    48      0
                            ___lldiv
                            ___llmod
                           _set_data
 ---------------------------------------------------------------------------------
 (2) _set_data                                            10    10      0     439
                                             18 COMRAM    10    10      0
                              _pulse
 ---------------------------------------------------------------------------------
 (3) _pulse                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (4) ___llmod                                              9     1      8    1527
                                             18 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8    1682
                                             27 COMRAM    13     5      8
                            ___llmod (ARG)
 ---------------------------------------------------------------------------------
 (3) _acel_med                                            20    20      0    9382
                                             54 COMRAM     2     2      0
                                             11 BANK0     18    18      0
                            ___ftdiv
                            ___fttol
                           ___lltoft
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     826
                                             18 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) ___lltoft                                             9     5      4    3355
                                             26 COMRAM     9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             15    11      4     731
                                             50 COMRAM     4     0      4
                                              0 BANK0     11    11      0
                            ___ftdiv (ARG)
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftdiv                                             15     9      6    3993
                                             35 COMRAM    15     9      6
                           ___ftpack
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2893
                                             18 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _inter                                               18    18      0       0
                                              0 COMRAM    18    18      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _acq_data
     _data_tmr
       _acel_med
         ___ftdiv
           ___ftpack
           ___lltoft (ARG)
             ___ftpack
         ___fttol
           ___ftdiv (ARG)
             ___ftpack
             ___lltoft (ARG)
               ___ftpack
           ___lltoft (ARG)
             ___ftpack
         ___lltoft
           ___ftpack
         ___lmul
       _data_print
         ___lldiv
           ___llmod (ARG)
         ___llmod
         _set_data
           _pulse
       _jump_line
         _set_inst
           _pulse
       _vel_med
         ___ftdiv
           ___ftpack
           ___lltoft (ARG)
             ___ftpack
         ___fttol
           ___ftdiv (ARG)
             ___ftpack
             ___lltoft (ARG)
               ___ftpack
           ___lltoft (ARG)
             ___ftpack
         ___lldiv
           ___llmod (ARG)
         ___lltoft
           ___ftpack
         ___lmul
       _write_string
         _set_data
           _pulse
   _clear_data
   _clear_scr
     _set_inst
       _pulse
   _config_int
   _config_io
   _config_lcd
     _set_inst
       _pulse
   _config_osc
   _config_tmr
   _jump_line
     _set_inst
       _pulse
   _msg_init
     _clear_scr
       _set_inst
         _pulse
     _delay_sec
       ___awtoft
         ___ftpack
       ___ftge
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___ftpack
       ___ftmul
         ___ftpack
       ___fttol
         ___ftdiv (ARG)
           ___ftpack
           ___lltoft (ARG)
             ___ftpack
         ___lltoft (ARG)
           ___ftpack
     _jump_line
       _set_inst
         _pulse
     _write_string
       _set_data
         _pulse
   _write_string
     _set_data
       _pulse

 _inter (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     37      8D       5       88.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3A      4C       1       80.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      D9      20        0.0%
DATA                 0      0      D9       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Sat Dec 16 09:25:56 2017

                    l123 1F84                      l124 1F50                      l141 1420  
                    l118 1BAE                      l206 1EF0                      l224 214A  
                    l152 1A02                      l208 1F18                      l225 215E  
                    l137 1394                      l146 1CFC                      l154 1A3C  
                    l139 13DA                      l147 1CE6                      l155 1A44  
                    l172 1082                      l500 1C92                      l181 0CC0  
                    l430 1AA2                      l174 1184                      l510 181A  
                    l431 1A8C                      l183 0FCA                      l167 099C  
                    l168 0A12                      l176 12D8                      l408 21EA  
                    l512 1832                      l433 1ACA                      l193 1E60  
                    l513 1842                      l434 1AC0                      l530 1712  
                    l506 17B0                      l427 1A6E                      l428 1A64  
                    l196 1E80                      l508 17D8                      l509 180A  
                    l535 1750                      l527 1690                      l199 1EA0  
                    l536 1740                      l529 1726                      l538 1776  
                    l491 18A4                      l563 1D74                      l564 1D68  
                    l493 18CC                      l573 2040                      l494 190A  
                    l574 2034                      l495 1930                      l567 1DA8  
                    l584 209A                      l568 1DB6                      l585 208E  
                    l577 2068                      l578 2076                      l499 1C62  
           __CFG_BOR$OFF 000000                      _num 0078                      prod 000FF3  
                    wreg 000FE8             __CFG_IESO$ON 000000             __CFG_LVP$OFF 000000  
           ___ftdiv@cntr 002D             ___ftdiv@sign 0032             __CFG_WDT$OFF 000000  
                   l2032 1384                     l2042 13C2                     l2044 13CA  
                   l2204 1CBE                     l2054 1408                     l2056 1410  
                   l2066 144E                     l2506 0FB2                     l2508 0FBA  
                   l2518 1038                     l2278 1BA6                     l2474 12C0  
                   l2476 12C8                     l2486 1346                     STR_1 0801  
                   STR_2 083E                     STR_3 0823                     STR_4 0855  
                   STR_5 0831                     STR_6 086E                     STR_7 0831  
                   STR_8 0868                     STR_9 0860                     _T0IF 007F92  
                   u2000 1BCC                     u2111 18B4                     u2015 1BDC  
                   u2200 175A                     u2016 1BDE                     u2025 1BE6  
                   u2026 1BE8                     u2035 1BF0                     u1340 1D78  
                   u2036 1BF2                     u2300 12C0                     u2141 166E  
                   u2045 1BFA                     u2046 1BFC                     u2230 1F7C  
                   u2055 1C04                     u2160 16B6                     u2056 1C06  
                   u2320 1346                     u2240 1FB0                     u2065 1C0E  
                   u2330 0CBE                     u1370 2044                     u2066 1C10  
                   u2091 188C                     u2075 1C18                     u2340 0FB2  
                   u2076 1C1A                     u1700 1408                     u2165 16AC  
                   u2085 1C22                     u2237 1F72                     u2086 1C24  
                   u2247 1FA6                     u2360 1038                     u2280 1080  
                   u1720 144E                     u2371 1798                     u2391 17C0  
                   u2607 1CEC                     _PIE1 000F9D                     u1840 1A56  
                   u1680 13C2                     _PIE2 000FA0                     u2617 1E34  
                   u1915 1FCC                     u2627 1E40                     u1916 1FCE  
                   u1925 1FD6                     u2485 15AA                     u2637 1EB2  
                   u1926 1FD8                     u1935 1FE0                     u2647 1FBE  
                   u1880 1AD4                     u1936 1FE2                     u2657 2016  
                   u1945 1FEA                     u1946 1FEC                     u2667 1BCE  
                   u1955 1FF4                     u1956 1FF6                     u2677 1C26  
                   u1965 1FFE                     u2597 1F32                     u1966 2000  
                   u2687 22B2                     u1975 2008                     u1976 200A  
                   u2697 22BC                     u1985 2012                     u1986 2014  
                   i2l93 1B52                     _TMR0 000FD6                     _main 1EC8  
           ___ftpack@arg 0013             ___ftpack@exp 0016                     fsr0h 000FEA  
                   fsr1h 000FE2                     fsr2h 000FDA                     fsr0l 000FE9  
                   indf1 000FE7                     indf2 000FDF                     fsr1l 000FE1  
                   fsr2l 000FD9                     btemp 004D                     prodh 000FF4  
                   prodl 000FF3                     start 000E             ___ftmul@cntr 0028  
           ___param_bank 000000             ___ftmul@sign 0029             ___fttol@exp1 00BC  
           ___fttol@lval 00B8            __CFG_PLLDIV$1 000000                    ?_main 0001  
                  STR_10 0813                    STR_11 084A          __end_of___ftdiv 1962  
        __end_of___lldiv 1DC8          __end_of___ftmul 187C          __end_of___llmod 2088  
        __end_of___fttol 1788            write_string@i 0021                    _TMR0H 000FD7  
                  _TMR0L 000FD6            __CFG_PWRT$OFF 000000      ___lmul@multiplicand 0017  
           ___lltoft@exp 0023           __CFG_FCMEN$OFF 000000            ___awtoft@sign 001E  
                  _inter 0008            ___ftpack@sign 0017                    _pulse 22AE  
                  pclath 000FFA                    tablat 000FF5          __end_of_vel_med 137C  
                  status 000FD8                    wtemp6 004E           __CFG_MCLRE$OFF 000000  
        __initialization 2190             __end_of_main 1F46                   ??_main 00E7  
          ___fttol@sign1 00B7    __size_of_write_string 0072            __activetblptr 000002  
        __CFG_CCP2MX$OFF 000000         ___llmod@dividend 0013                   ?_inter 0001  
       __end_of___awtoft 220E                   ?_pulse 0001         __end_of___ftpack 1AF4  
       __end_of___lltoft 20E4         __end_of_acel_med 1066         __end_of_acq_data 1EC8  
       __end_of_data_tmr 165A                   ___ftge 1C32                   ___lmul 213A  
           _write_string 1F46           __CFG_STVREN$ON 000000                ??___ftdiv 002A  
              ??___lldiv 0024                ??___ftmul 0021                ??___llmod 001B  
              ??___fttol 00B2                   clear_0 21B6                   clear_1 21C2  
       __end_of_msg_init 1A46    ___ftmul@f3_as_product 0025         __end_of_set_data 1C32  
       __end_of_set_inst 2022             __mediumconst 0000                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8                ??_vel_med 00BD  
             __accesstop 0060  __end_of__initialization 21C8          __CFG_PBADEN$OFF 000000  
             ___ftge@ff1 002A               ___ftge@ff2 002D            ___rparam_used 000001  
             ___ftdiv@f1 0024               ___ftdiv@f2 0027               ___ftdiv@f3 002E  
             ___awtoft@c 001B               ___ftmul@f1 001B               ___ftmul@f2 001E  
             ___fttol@f1 0033           __pcstackCOMRAM 0001             __pidataBANK0 22D0  
             ___lltoft@c 001B       clear_data@cont_aux 0060            __end_of_inter 1B9E  
          __end_of_pulse 22C4       __size_of_delay_sec 0084       __size_of_clear_scr 0056  
     __size_of_config_io 002E                  ??_inter 0001                  ??_pulse 0013  
             __pbssBANK0 0060               _data_print 0872               _clear_data 137C  
                ?___ftge 002A                  ?___lmul 0013       __size_of_jump_line 0024  
         ___lmul@product 001B                ?___awtoft 001B                ?___ftpack 0013  
              ?___lltoft 001B                ?_acel_med 0001                ?_acq_data 0001  
       data_print@data00 00DA         data_print@data10 00BA                ?_data_tmr 0039  
             _config_lcd 1DC8               _config_int 2264               _config_osc 22C4  
             _config_tmr 223C          __CFG_VREGEN$OFF 000000        __end_of_delay_sec 1D46  
      __end_of_clear_scr 213A                ?_msg_init 0001                  __Hparam 0000  
                __Lparam 0000                ?_set_data 0001                ?_set_inst 0013  
      __end_of_config_io 223C          __size_of___ftge 0090          __size_of___lmul 0056  
                ___ftdiv 187C                  ___lldiv 1D46                  ___ftmul 1788  
                ___llmod 2022                  ___fttol 165A             __psmallconst 0800  
                __pcinit 2190               ??___awtoft 001E               ??___ftpack 0018  
             _error_flag 0084                  __ramtop 0800               ??___lltoft 001F  
                __ptext0 1EC8                  __ptext1 1962                  __ptext2 1CC2  
                __ptext3 1788                  __ptext4 1C32                  __ptext5 21D6  
                __ptext6 20E4                  __ptext7 223C                  __ptext8 22C4  
                __ptext9 1DC8               ??_acel_med 00BD                  _comp_ft 00E9  
              _T0CONbits 000FD5                  _cont_ft 003F               ??_acq_data 00E6  
             ??_data_tmr 00E2                  _vel_med 1066                  _vel_tot 0070  
         __pintcode_body 1AF4     end_of_initialization 21C8               delay_sec@i 00BF  
             delay_sec@j 00BD        __end_of_jump_line 22AE            __Lmediumconst 0000  
                int_func 1AF4              ?_data_print 0029          ___lldiv@divisor 0020  
             ??_msg_init 003B          ___lldiv@counter 0028              ?_clear_data 0001  
             ??_set_data 0013               ??_set_inst 001A                  postdec1 000FE5  
                postdec2 000FDD                  postinc0 000FEE                  postinc2 000FDE  
              _PORTCbits 000F82                _PORTDbits 000F83               _teste_long 0080  
            ?_config_lcd 0001                _TRISAbits 000F92              ?_config_int 0001  
            ?_config_osc 0001                _TRISCbits 000F94              ?_config_tmr 0001  
              _TRISEbits 000F96              ___ftdiv@exp 0031              ___ftmul@exp 0024  
         __end_of___ftge 1CC2           __end_of___lmul 2190      __size_of_data_print 0432  
    start_initialization 2190      __size_of_clear_data 01A2           _aceleracao_med 0064  
        ___llmod@divisor 0017          ___llmod@counter 001B      __size_of_config_lcd 0080  
    __size_of_config_int 0026                 ??___ftge 0030      __size_of_config_osc 000C  
    __size_of_config_tmr 0028                 ??___lmul 001B              __pdataBANK0 00E9  
      __size_of___awtoft 0038        __size_of___ftpack 00AE        __size_of___lltoft 005C  
            __pbssCOMRAM 003B        __size_of_acel_med 03C2            __pcstackBANK0 00B2  
      __size_of_acq_data 0080                _acel_data 0041        __size_of_data_tmr 013C  
              _delay_sec 1CC2                _clear_scr 20E4                __pintcode 0008  
              _fti1_flag 008C                _fti2_flag 008A                _fti3_flag 0088  
      __size_of_msg_init 00E4                _fti4_flag 0086                acel_med@i 0037  
               ?___ftdiv 0024        __size_of_set_data 0094                 ?___lldiv 001C  
               ?___ftmul 001B                 ?___llmod 0013                 ?___fttol 0033  
      __size_of_set_inst 006A          data_print@data0 00DE          data_print@data1 00BE  
        data_print@data2 00C2          data_print@data3 00C6          data_print@data4 00CA  
        data_print@data5 00CE          data_print@data6 00D2          data_print@data7 00D6  
        data_print@data8 00B2          data_print@data9 00B6                _config_io 220E  
            __smallconst 0800                 ?_vel_med 0001           __size_of_inter 1B96  
         __size_of_pulse 0016                 _LATAbits 000F89             ??_data_print 002D  
               _LATCbits 000F8B                 _LATEbits 000F8D                 _IPR1bits 000F9F  
               _IPR2bits 000FA2                 _PIE1bits 000F9D                 _PIE2bits 000FA0  
              _jump_line 228A             ??_clear_data 0013               ?_delay_sec 0037  
             ?_clear_scr 0001                 _RCONbits 000FD0            ?_write_string 001D  
              _time_data 008E                _tempo_med 0068               ?_config_io 0001  
            _cont_global 007C       __end_of_data_print 0CA4             ??_config_lcd 001B  
           ??_config_int 0013             ??_config_osc 0013             ??_config_tmr 0013  
     __end_of_clear_data 151E        ___lmul@multiplier 0013              _INTCON2bits 000FF1  
            _INTCON3bits 000FF0                copy_data0 21A4             delay_sec@sec 0037  
         _velocidade_med 0074               ?_jump_line 0001                 __Hrparam 0000  
         ??_write_string 001F                 __Lrparam 0000       __end_of_config_lcd 1E48  
     __end_of_config_int 228A       __end_of_config_osc 22D0       __end_of_config_tmr 2264  
       __size_of___ftdiv 00E6         __size_of___lldiv 0082         __size_of___ftmul 00F4  
       __size_of___llmod 0066         __size_of___fttol 012E                 ___awtoft 21D6  
               ___ftpack 1A46                 ___lltoft 2088             set_data@data 001B  
               _acel_med 0CA4                 _acel_tot 006C                 _acq_data 1E48  
               _data_tmr 151E                 __ptext10 220E                 __ptext11 2264  
               __ptext20 1B9E                 __ptext12 137C                 __ptext21 22AE  
               __ptext13 1E48                 __ptext22 2022                 __ptext14 151E  
               __ptext23 1D46                 __ptext15 1F46                 __ptext24 0CA4  
               __ptext16 1066                 __ptext25 213A                 __ptext17 228A  
               __ptext26 2088                 __ptext18 1FB8                 __ptext27 165A  
               __ptext19 0872                 __ptext28 187C                 __ptext29 1A46  
       __size_of_vel_med 0316                msg_init@i 00C1           data_print@data 0029  
              set_data@i 001C                set_data@v 0013            __size_of_main 007E  
            data_tmr@ftp 0039                set_inst@a 001A                set_inst@b 0013  
              set_inst@c 0014                set_inst@d 0015                set_inst@e 0016  
              set_inst@f 0017                set_inst@g 0018                set_inst@h 0019  
               _msg_init 1962              ??_delay_sec 003A                 _set_data 1B9E  
            ??_clear_scr 001B                 _set_inst 1FB8                 _vel_data 00A2  
               _time_aux 003B                 int$flags 004D              ??_config_io 0013  
            clear_data@i 0015               _INTCONbits 000FF2       write_string@string 001D  
               intlevel2 0000         ___lldiv@dividend 001C              ??_jump_line 001B  
             _OSCCONbits 000FD3                 vel_med@i 0037      __CFG_FOSC$INTOSC_EC 000000  
       ___lldiv@quotient 0024     __end_of_write_string 1FB8  
